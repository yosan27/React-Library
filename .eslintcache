[{"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/App.js":"1","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/components/HeaderUser.js":"2","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/Index.js":"3","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/ForgotPassword/index.js":"4","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Form/ReturnForm.js":"5","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/FineManagement/fineManagement.js":"6","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/BookDetailManagement/bookdetailmanagement.js":"7","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/HistoryUser/HistoryUser.js":"8","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/ManageDonation/index.js":"9","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/SeeMoreBooks/SeeMoreBooks.js":"10","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/NoBills.js":"11","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/TopUpBox.js":"12","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/InstructionsMbank.js":"13","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/HistoryPayment.js":"14","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/api.js":"15","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/DetailPage/detailpage.js":"16","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/BookManagement/bookmanagement.js":"17","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/components/Content.js":"18","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/AllHistory.js":"19","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Login/Login.js":"20","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Cart/Cart.js":"21","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Register/Register.js":"22","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Profile/Profile.js":"23","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/DonationUser/index.js":"24","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/UserManagement/usermanagement.js":"25","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/CategoryManagement/categoryManagement.js":"26","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/SearchResult/SearchResult.js":"27","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/CatagoryResult/CategoryResult.js":"28","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/TopUpBar.js":"29","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Login/FormErrors.js":"30","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/components/Footer.js":"31","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/DonationUser/indexForm.js":"32","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/PublisherManagement/publishermanagement.js":"33","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Catalog/Catalog.js":"34","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/DebitModal.js":"35","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Services/axios-instance.js":"36","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Services/auth.service.js":"37","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Wishlist/Wishlist.js":"38","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Register/registerAdmin.js":"39","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/History/History.js":"40","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/AuthorManagement/AuthorManagement.js":"41","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/ProfileUser/ProfileUser.js":"42","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/FineLists.js":"43"},{"size":268,"mtime":1609223960104,"results":"44","hashOfConfig":"45"},{"size":9392,"mtime":1610626638875,"results":"46","hashOfConfig":"45"},{"size":17307,"mtime":1610378454559,"results":"47","hashOfConfig":"45"},{"size":2907,"mtime":1609909299134,"results":"48","hashOfConfig":"45"},{"size":14942,"mtime":1610356075157,"results":"49","hashOfConfig":"45"},{"size":17227,"mtime":1610378454556,"results":"50","hashOfConfig":"45"},{"size":27284,"mtime":1610626355399,"results":"51","hashOfConfig":"45"},{"size":13592,"mtime":1610621804472,"results":"52","hashOfConfig":"45"},{"size":28971,"mtime":1610603917957,"results":"53","hashOfConfig":"45"},{"size":3509,"mtime":1610626638870,"results":"54","hashOfConfig":"45"},{"size":310,"mtime":1608733715161,"results":"55","hashOfConfig":"45"},{"size":1454,"mtime":1608733715162,"results":"56","hashOfConfig":"45"},{"size":5756,"mtime":1608733715161,"results":"57","hashOfConfig":"45"},{"size":2659,"mtime":1610572601525,"results":"58","hashOfConfig":"45"},{"size":199,"mtime":1609238997485,"results":"59","hashOfConfig":"45"},{"size":32481,"mtime":1610629155009,"results":"60","hashOfConfig":"45"},{"size":44459,"mtime":1610622910246,"results":"61","hashOfConfig":"45"},{"size":16768,"mtime":1610621804480,"results":"62","hashOfConfig":"45"},{"size":2989,"mtime":1610356075160,"results":"63","hashOfConfig":"45"},{"size":6491,"mtime":1610572601521,"results":"64","hashOfConfig":"45"},{"size":13812,"mtime":1610626638867,"results":"65","hashOfConfig":"45"},{"size":10195,"mtime":1610481581327,"results":"66","hashOfConfig":"45"},{"size":20487,"mtime":1610621804473,"results":"67","hashOfConfig":"45"},{"size":1900,"mtime":1609223960117,"results":"68","hashOfConfig":"45"},{"size":17752,"mtime":1610621804477,"results":"69","hashOfConfig":"45"},{"size":10860,"mtime":1610481581321,"results":"70","hashOfConfig":"45"},{"size":3900,"mtime":1610572601527,"results":"71","hashOfConfig":"45"},{"size":6006,"mtime":1610626638867,"results":"72","hashOfConfig":"45"},{"size":1356,"mtime":1610378454560,"results":"73","hashOfConfig":"45"},{"size":414,"mtime":1609223960119,"results":"74","hashOfConfig":"45"},{"size":482,"mtime":1606291945481,"results":"75","hashOfConfig":"45"},{"size":10303,"mtime":1610603917956,"results":"76","hashOfConfig":"45"},{"size":14487,"mtime":1610567871161,"results":"77","hashOfConfig":"45"},{"size":13468,"mtime":1610626638868,"results":"78","hashOfConfig":"45"},{"size":10296,"mtime":1610572601523,"results":"79","hashOfConfig":"45"},{"size":661,"mtime":1610627564069,"results":"80","hashOfConfig":"45"},{"size":897,"mtime":1610627567913,"results":"81","hashOfConfig":"45"},{"size":7240,"mtime":1610296980454,"results":"82","hashOfConfig":"45"},{"size":10194,"mtime":1610572601527,"results":"83","hashOfConfig":"45"},{"size":15748,"mtime":1610621804472,"results":"84","hashOfConfig":"45"},{"size":9770,"mtime":1610621804467,"results":"85","hashOfConfig":"45"},{"size":22497,"mtime":1610621804473,"results":"86","hashOfConfig":"45"},{"size":7873,"mtime":1610572601524,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"3s4fd1",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"90"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/App.js",[],["185","186"],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/components/HeaderUser.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/Index.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/ForgotPassword/index.js",[],["187","188"],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Form/ReturnForm.js",[],["189","190"],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/FineManagement/fineManagement.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/BookDetailManagement/bookdetailmanagement.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/HistoryUser/HistoryUser.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/ManageDonation/index.js",["191"],"import React, { Component } from \"react\";\nimport { Table, Modal, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Select from \"react-select\";\n\nimport axios from \"../../Services/axios-instance\";\nimport swal from \"sweetalert\";\n\nimport \"datatables.net-dt/js/dataTables.dataTables\";\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\nimport \"datatables.net-responsive-dt/js/responsive.dataTables.js\";\nimport \"datatables.net-responsive-dt/css/responsive.dataTables.css\";\nimport \"jquery/dist/jquery.min.js\";\nimport $, { get } from \"jquery\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-calendar/dist/Calendar.css';\n\nclass ManageDonation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      donationList: [],\n      allList: [],\n      id: \"\",\n      bookTitle: \"\",\n      author: \"\",\n      year: \"\",\n      photo: \"\",\n      status: \"\",\n      categoryCode: \"\",\n      button: \"Update Data\",\n      categoryList: [],\n      categoryName: \"\",\n      showAdd2: false,\n      showEdit: false,\n      data: [],\n      authorCode: \"\",\n      bookDetailCode: \"\",\n      publisherCode: \"\",\n      urlImage: \"\",\n      title: \"\",\n      subtitle: \"\",\n      publisherName: \"\",\n      publisherAddress: \"\",\n      description: \"\",\n      pages: \"\",\n      startDate: new Date(),\n      language: \"\",\n      length: \"\",\n      isbn: \"\",\n      weight: \"\",\n      width: \"\",\n      numberOfPages: \"\",\n      category: \"\",\n      baseImage: \"\",\n      authorList: \"\",\n      bookDetailList: \"\",\n      publisherList: \"\",\n      donationDate: \"\",\n      idAcc: \"\"\n    }\n    this.donationChange = this.donationChange.bind(this)\n  }\n\n  donationChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n\n\n  async getAllData() {\n    const res = await axios.get('author')\n    const dataAuthor = res.data\n\n    const options1 = dataAuthor.map(d => ({\n      \"value\": d.authorCode,\n      \"label\": d.authorName\n    }))\n    this.setState({ authorList: options1 })\n\n    const res2 = await axios.get('bookdetails')\n    const dataBookDetail = res2.data.data\n\n    const options2 = dataBookDetail.map(d => ({\n      \"value\": d.bookDetailCode,\n      \"label\": d.bookTitle\n    }))\n    this.setState({ bookDetailList: options2 })\n\n    const res3 = await axios.get('category')\n    const dataCategory = res3.data\n\n    const options3 = dataCategory.map(d => ({\n      \"value\": d.categoryCode,\n      \"label\": d.categoryName\n    }))\n    this.setState({ categoryList: options3 })\n\n    const res4 = await axios.get('publisher')\n    const dataPublisher = res4.data\n\n    const options4 = dataPublisher.map(d => ({\n      \"value\": d.publisherCode,\n      \"label\": d.publisherName\n    }))\n    this.setState({ publisherList: options4 })\n  }\n\n\n  handleChangeSelect1 = (e) => {\n    this.setState({ authorCode: e.value });\n  }\n\n  handleChangeSelect2 = (e) => {\n    this.setState({ bookDetailCode: e.value });\n  }\n\n  handleChangeSelect3 = (e) => {\n    this.setState({ categoryCode: e.value });\n  }\n\n  handleChangeSelect4 = (e) => {\n    this.setState({ publisherCode: e.value });\n  }\n\n  handleChangeDate = date => {\n    this.setState({\n      startDate: date\n    });\n  };\n\n\n\n  handleShowAdd2 = (getId) => {\n    this.setState({ showAddExist: false, showAdd2: true, idAcc: getId })\n\n  }\n\n\n  handleAddBook2 = () => {\n\n    if (this.state.startDate && this.state.isbn) {\n      this.setState({ showAdd2: false })\n      axios.post(\n        \"book\",\n        {\n          authorCode: this.state.authorCode,\n          bookDetailCode: this.state.bookDetailCode,\n          categoryCode: this.state.categoryCode,\n          publisherCode: this.state.publisherCode,\n          publishedDate: this.state.startDate,\n          isbn: this.state.isbn\n        },\n        {\n          headers: {\n            Accept: \"*/*\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n        .then(() => {\n          let donationList = {\n            status: this.state.status\n          };\n          axios.put(`acc-donation/${this.state.idAcc}`, donationList)\n            .then(() =>\n              swal(\"Success!\", \"Book Has Been Added\", \"success\")\n                .then(window.location.reload()));\n          this.setState({\n            showAdd2: false,\n            editClicked: true\n          })\n\n        })\n        .catch((error) => {\n          swal(\"Oops!\", \"Please try again\", \"error\");\n          console.log(error);\n        });\n    } else {\n      swal(\"Oops!\", \"Data is not valid\", \"error\");\n    }\n  }\n\n  handleCloseModal = () => {\n    this.setState({\n      showAdd2: false,\n      bookCode: \"\", authorCode: \"\", bookDetailCode: \"\", categoryCode: \"\", startDate: \"\", date: \"\", isbn: \"\", publisherCode: \"\"\n    })\n  }\n\n  componentDidMount() {\n    this.findPerson();\n    this.getCategory();\n    this.getAllData();\n  }\n\n  findPerson() {\n    axios.get(\"http://localhost:8500/api/donation\")\n      .then((response) => {\n        console.log(response);\n        this.setState({\n          donationList: response.data\n        })\n        $(function () {\n          $(\"#donation-list\").DataTable({\n            responsive: true,\n          });\n        });\n      });\n  }\n\n  delete = (getId) => {\n    axios\n      .delete(`http://localhost:8500/api/donation/${getId}`)\n      .then(() => window.location.reload());\n  };\n\n  accept = (getId) => {\n    let donationList = {\n      status: this.state.status\n    };\n    axios\n      .put(`acc-donation/${getId}`, donationList)\n      .then(() => window.location.reload());\n  }\n\n\n  getDetail = (getId) => {\n    this.setState({\n      id: getId,\n\n    });\n\n    axios.get(`http://localhost:8500/api/donation/id/${getId}`).then((e) => {\n      let res = e.data;\n      this.setState({\n        author: res.author,\n        bookTitle: res.bookTitle,\n        year: res.year,\n        description: res.description,\n        photo: res.photo,\n        status: res.status,\n        categoryCode: res.categoryEntity.categoryName,\n        donationDate: res.date\n      });\n    });\n  };\n\n  addUpdate = () => {\n    let donationList = {\n      author: this.state.author,\n      bookTitle: this.state.bookTitle,\n      year: this.state.year,\n      description: this.state.description,\n      categoryCode: this.state.categoryCode\n    };\n    axios\n      .put(`http://localhost:8500/api/donation-detail/${this.state.id}`, donationList)\n      .then(() => window.location.reload());\n  };\n\n\n  async getCategory() {\n    const res = await axios.get('category')\n    const data = res.data\n\n    const options = data.map(d => ({\n      \"value\": d.categoryCode,\n      \"label\": d.categoryName\n\n    }))\n\n    this.setState({ categoryList: options })\n\n  }\n\n  handleChange = (event) => {\n\n\n    if (event.target.name === \"bookTitle\") {\n      this.setState({\n        [event.target.name]: event.target.value,\n      });\n    }\n\n    if (event.target.name === \"author\") {\n      this.setState({\n        [event.target.name]: event.target.value,\n      });\n    }\n\n    if (event.target.name === \"year\") {\n      this.setState({\n        [event.target.name]: event.target.value,\n      });\n    }\n\n    if (event.target.name === \"description\") {\n      this.setState({\n        [event.target.name]: event.target.value,\n      });\n    }\n\n\n  };\n\n\n  handleChangeCategory = (e) => {\n    this.setState({ categoryCode: e.value });\n  }\n\n\n  submitReject = () => {\n    swal(\"Rejected\", \"Book Donation Rejected\", \"warning\");\n  };\n\n  submitAccept = () => {\n    swal(\"Thank You\", \"Book Donation Successfully Received\", \"success\");\n  };\n\n\n\n  render() {\n    const { showAdd2 } = this.state;\n    return (\n      <>\n        <div className=\"right_col\" role=\"main\" style={{ minHeight: \"100vh\" }}>\n          <section className=\"mt-5 pt-5\">\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-12 col-lg-12\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">Donation Management</h3>\n                    </div>\n                    <div className=\"card-body\">\n                      <Table\n                        responsive\n                        striped\n                        id=\"donation-list\"\n                        style={{ width: \"100%\" }}\n                      >\n                        <thead>\n                          <tr>\n                            <th>Book ID</th>\n                            <th>Action</th>\n                            <th>Book Title</th>\n                            <th>Author</th>\n                            <th>Categories</th>\n                            <th>Status</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {this.state.donationList.map((donation, index) => {\n                            return (\n                              <tr>\n                                <td>{donation.id}</td>\n                                <td>\n                                  <span className=\"d-flex justify-content-center\">\n                                    <button\n                                      className=\"btn btn-warning\"\n                                      data-toggle=\"modal\"\n                                      data-target=\"#edit\"\n                                      onClick={() => this.getDetail(donation.id)}\n                                    >\n                                      <i className=\"fa fa-eye\"></i>\n                                    </button>\n                                    <button\n                                      className=\"btn btn-success\"\n                                      data-toggle=\"modal\"\n                                      onClick={() => this.handleShowAdd2(donation.id)}\n                                    >\n                                      <i className=\"fa fa-check\"></i>\n                                    </button>\n                                    <button\n                                      className=\"btn btn-primary\"\n                                      onClick={() => this.getDetail(donation.id)}\n                                      data-toggle=\"modal\"\n                                      data-target=\"#fineModal\"\n                                    >\n                                      <i className=\"fa fa-edit\"></i>\n                                    </button>\n                                    <button\n                                      className=\"btn btn-danger\"\n                                      onClick={() => this.delete(donation.id)}\n                                    >\n                                      <i className=\"fa fa-eraser\"></i>\n                                    </button>\n                                  </span>\n                                </td>\n                                <td>{donation.bookTitle}</td>\n                                <td>{donation.author}</td>\n                                <td>{donation.categoryEntity.categoryName}</td>\n                                {donation.status === 3 && <td>Rejected</td>}\n                                {donation.status === 2 && <td>Accepted</td>}\n                                {donation.status === 1 && <td>Pending</td>}\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </Table>\n                    </div>\n                  </div>\n\n                  {/* UPDATE Modal */}\n                  <div className=\"modal fade\" tabindex=\"-1\" id=\"fineModal\">\n                    <div className=\"modal-dialog modal-dialog-centered\">\n                      <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                          <h4 className=\"modal-title\">Donation Update Data Form</h4>\n                          <button\n                            type=\"button\"\n                            class=\"close\"\n                            data-dismiss=\"modal\"\n                            aria-label=\"Close\"\n                          >\n                            <span aria-hidden=\"true\" onClick={this.clearModal} className=\"modal-clear\">\n                              &times;\n                            </span>\n                          </button>\n                        </div>\n                        <div className=\"modal-body\">\n                          <div class=\"container\">\n                            <form className=\"mb-4\">\n                              <div className=\"form-group row\">\n                                <label for=\"fineType\" className=\"col-sm-4\">\n                                  <b>Title</b></label>\n                                <input\n                                  name=\"bookTitle\"\n                                  className=\"col-sm-6\"\n                                  id=\"bookTitle\"\n                                  placeholder=\"Kisah Tanah Jawa\"\n                                  autoFocus\n                                  autoComplete=\"off\"\n                                  value={this.state.bookTitle}\n                                  onChange={(e) => this.handleChange(e, e.target.value)}\n                                ></input>\n                              </div>\n\n                              <div className=\"form-group row\">\n                                <label for=\"nominal\" className=\"col-sm-4\">\n                                  <b>Year</b>\n                                </label>\n                                <input\n                                  name=\"year\"\n                                  className=\"col-sm-6\"\n                                  id=\"year\"\n                                  placeholder=\"2021\"\n                                  autoComplete=\"off\"\n                                  value={this.state.year}\n                                  onChange={(e) => this.handleChange(e, e.target.value)}\n                                ></input>\n                              </div>\n\n                              <div className=\"form-group row\">\n                                <label for=\"validTo\" className=\"col-sm-4\">\n                                  <b>Author</b>\n                                </label>\n                                <input\n                                  name=\"author\"\n                                  className=\"col-sm-6\"\n                                  placeholder=\"Pramoedya A. TOer\"\n                                  id=\"author\"\n                                  autoComplete=\"off\"\n                                  value={this.state.author}\n                                  onChange={(e) => this.handleChange(e, e.target.value)}\n                                // onInput={this.maxLengthCheck}\n                                ></input>\n                              </div>\n\n                              <div className=\"form-group row\">\n                                <label for=\"category\" className=\"col-sm-4\">\n                                  <b>Category</b>\n                                </label>\n                                <Select className=\"col-sm-6\" name=\"category\" options={this.state.categoryList} onChange={this.handleChangeCategory} />\n                              </div>\n\n                              <div className=\"form-group row\">\n                                <label for=\"description\" className=\"col-sm-4\">\n                                  <b>Description/Condition</b>\n                                </label>\n                                <input\n                                  name=\"description\"\n                                  className=\"col-sm-6\"\n                                  placeholder=\"Description of book\"\n                                  id=\"description\"\n                                  autoComplete=\"off\"\n                                  value={this.state.description}\n                                  onChange={(e) => this.handleChange(e, e.target.value)}\n                                // onInput={this.maxLengthCheck}\n                                ></input>\n                              </div>\n\n\n                            </form>\n                          </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                          <button\n                            className=\"btn btn-secondary modal-clear\"\n                            data-dismiss=\"modal\"\n                            onClick=\"\"\n                          >\n                            <i class=\"fa fa-times-circle\"></i> Close\n                            </button>\n                          <button\n                            className=\"btn btn-success add-btn\"\n                            onClick={this.addUpdate}\n                            disabled={!this.state.bookTitle || !this.state.description || !this.state.year || !this.state.author || !this.state.categoryList}\n                          >\n                            <i class=\"fa fa-plus mr-1\"></i>\n                            {this.state.button}\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* MODAL DETAIL DATA */}\n\n                  <div\n                    class=\"modal fade\"\n                    id=\"edit\"\n                    tabindex=\"1\"\n                    aria-labelledby=\"editModalLabel\"\n                    aria-hidden=\"true\"\n                    key={this.state.id}\n                  >\n                    <div class=\"modal-dialog modal-lg\">\n                      <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                          <h5 class=\"modal-title\" id=\"editModalLabel\">\n                            Donation\n                          </h5>\n                          <button\n                            type=\"button\"\n                            class=\"close\"\n                            data-dismiss=\"modal\"\n                            aria-label=\"Close\"\n                          >\n                            <span aria-hidden=\"true\">&times;</span>\n                          </button>\n                        </div>\n                        <div class=\"modal-body\">\n                          <div class=\"container\" id=\"demo\">\n                            <div class=\"row justify-content-md-center\">\n                              <img\n                                src={this.state.photo}\n                                height=\"350\"\n                                alt=\"Donation Book\"\n                              />\n                            </div>\n                            <br />\n                            <div class=\"row justify-content-md-center\">\n                              <label\n                                for=\"editTitle\"\n                                class=\"col-sm-1 col-form-label\"\n                              >\n                                Title\n                            </label>\n                              <h5 class=\"col-lg-8 text-center\">\n                                {this.state.bookTitle}\n                              </h5>\n                            </div>\n                            <hr />\n                            <div class=\"row justify-content-md-center\">\n                              <label\n                                for=\"editTitle\"\n                                class=\"col-sm-1 col-form-label\"\n                              >\n                                Author\n                            </label>\n                              <h5 class=\"col-lg-8 text-center\">{this.state.author} </h5>\n                            </div>\n                            <hr />\n                            <div class=\"row justify-content-md-center\">\n                              <label\n                                for=\"editTitle\"\n                                class=\"col-sm-1 col-form-label\"\n                              >\n                                Category\n                            </label>\n                              <h5 class=\"col-lg-8 text-center\">\n                                {this.state.categoryCode}\n                              </h5>\n                            </div>\n                            <hr />\n                            <div class=\"row justify-content-md-center\">\n                              <label\n                                for=\"editTitle\"\n                                class=\"col-sm-1 col-form-label\"\n                              >\n                                Year\n                            </label>\n                              <h5 class=\"col-lg-8 text-center\">{this.state.year}</h5>\n                            </div>\n                            <hr />\n                            <div class=\"row justify-content-md-center\">\n                              <label\n                                for=\"editTitle\"\n                                class=\"col-sm-1 col-form-label\"\n                              >\n                                Condition\n                            </label>\n                              <p class=\"col-lg-8 text-center\">\n                                {this.state.description}\n                              </p>\n                            </div>\n                            <hr />\n                            <div class=\"row justify-content-md-center\">\n                              <label\n                                for=\"editTitle\"\n                                class=\"col-sm-1 col-form-label\"\n                              >\n                                Donatur\n                            </label>\n                              <h5 class=\"col-lg-8 text-center\">{this.state.author}</h5>\n                            </div>\n                            <hr />\n\n                            <div class=\"row justify-content-md-center\">\n                              <label\n                                for=\"editTitle\"\n                                class=\"col-sm-1 col-form-label\"\n                              >\n                                Donation Date\n                            </label>\n                              <h5 class=\"col-lg-8 text-center\">{this.state.donationDate}</h5>\n                            </div>\n                            <hr />\n                            <div class=\"row justify-content-md-center\">\n                              <label\n                                for=\"editTitle\"\n                                class=\"col-sm-1 col-form-label\"\n                              >\n                                Status\n                            </label>\n                              {this.state.status === 3 && <h5 class=\"col-lg-8 text-center\">Rejected</h5>}\n                              {this.state.status === 2 && <h5 class=\"col-lg-8 text-center\">Accepted</h5>}\n                              {this.state.status === 1 && <h5 class=\"col-lg-8 text-center\">Pending</h5>}\n\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n\n\n\n                  {/* modal add data exist*/}\n                  <Modal size=\"lg\" show={showAdd2} onHide={this.handleCloseModal}>\n                    <Modal.Header closeButton>\n                      <Modal.Title>Add Book Data</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                      <div class='container'>\n                        <div class=\"modal-body\">\n                          <form>\n                            <div class=\"form-group row\">\n                              <label for=\"addAuthorCode\" class=\"col-sm-2 col-form-label\">Author Name</label>\n                              <div class=\"col-sm-4 mb-3\">\n                                <Select\n                                  className=\"mb-2\"\n                                  options={this.state.authorList}\n                                  onChange={this.handleChangeSelect1}\n                                />\n                                <Link to=\"/page/manageAuthor\" className=\"btn btn-light\">\n                                  <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more author</small>\n                                </Link>\n                              </div>\n                              <label for=\"addBookDetailCode\" class=\"col-sm-2 col-form-label\">Book Details Info</label>\n                              <div class=\"col-sm-4\">\n                                <Select\n                                  className=\"mb-2\"\n                                  options={this.state.bookDetailList}\n                                  onChange={this.handleChangeSelect2}\n                                />\n                                <Link to=\"/page/manageBookDetail\" className=\"btn btn-light\">\n                                  <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more book details</small>\n                                </Link>\n                              </div>\n                            </div>\n\n                            <div class=\"form-group row\">\n                              <label for=\"addCategoryCode\" class=\"col-sm-2 col-form-label\">Category</label>\n                              <div class=\"col-sm-4 mb-3\">\n                                <Select\n                                  className=\"mb-2\"\n                                  options={this.state.categoryList}\n                                  onChange={this.handleChangeSelect3}\n                                />\n                                <Link to=\"/page/manageCategory\" className=\"btn btn-light\">\n                                  <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more category</small>\n                                </Link>\n                              </div>\n                              <label for=\"addPublisherCode\" class=\"col-sm-2 col-form-label\">Publisher</label>\n                              <div class=\"col-sm-4\">\n                                <Select\n                                  className=\"mb-2\"\n                                  options={this.state.publisherList}\n                                  onChange={this.handleChangeSelect4}\n                                />\n                                <Link to=\"/page/managePublisher\" className=\"btn btn-light\">\n                                  <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more publisher</small>\n                                </Link>\n                              </div>\n                            </div>\n\n                            <div class=\"form-group row\">\n                              <label for=\"addPublishedDate\" class=\"col-sm-2 col-form-label\">Published Date</label>\n                              <div class=\"col-sm-4\">\n                                <DatePicker\n                                  selected={this.state.startDate}\n                                  onChange={this.handleChangeDate}\n                                  dateFormat='yyyy-MM-dd'\n                                />\n                                <br />\n                                <small className=\"text-muted\">(yyyy-MM-dd)</small>\n                              </div>\n                              <label for=\"addIsbn\" class=\"col-sm-2 col-form-label\">ISBN</label>\n                              <div class=\"col-sm-4\">\n                                <input\n                                  type=\"text\"\n                                  name=\"isbn\"\n                                  class=\"form-control\"\n                                  id=\"isbn\"\n                                  placeholder=\"ISBN...\"\n                                  onChange={(e) => this.setState({ isbn: e.target.value })}\n                                  value={this.state.isbn}\n                                  data-attribute-name=\"isbn\"\n                                  data-async\n                                />\n                              </div>\n                            </div>\n\n                          </form>\n                        </div>\n                      </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                      <Button className=\"btn btn-secondary\" variant=\"secondary\" onClick={this.handleCloseModal}>\n                        <i class=\"fa fa-times-circle\"></i> Close\n                        </Button>\n                      <Button id=\"buttonAddBook\" type=\"submit\" className=\"btn btn-success\" variant=\"primary\" onClick={this.handleAddBook2}>\n                        <i class=\"fa fa-plus\"></i> Add\n                        </Button>\n                    </Modal.Footer>\n                  </Modal>\n                  {/* modal add data exist*/}\n\n\n\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ManageDonation;\n","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/SeeMoreBooks/SeeMoreBooks.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/NoBills.js",[],["192","193"],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/TopUpBox.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/InstructionsMbank.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/HistoryPayment.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/api.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/DetailPage/detailpage.js",["194","195","196","197","198","199","200"],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/BookManagement/bookmanagement.js",["201","202","203","204","205"],"import React, { Component } from 'react';\nimport { Table, Modal, Button } from 'react-bootstrap';\nimport swal from \"sweetalert\";\nimport { Link } from 'react-router-dom';\n//Datatable Modules\nimport 'datatables.net-dt/js/dataTables.dataTables'\nimport 'datatables.net-dt/css/jquery.dataTables.min.css'\nimport 'datatables.net-responsive-dt/js/responsive.dataTables.js'\nimport 'datatables.net-responsive-dt/css/responsive.dataTables.css'\nimport Axios from \"../../Services/axios-instance\";\nimport AuthService from \"../../Services/auth.service\";\nimport $ from 'jquery'; \nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-calendar/dist/Calendar.css';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport Select from 'react-select';\n\nclass BookManagement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      subtitle: \"\",\n      author: \"\",\n      publisherName: \"\",\n      publisherAddress: \"\",\n      description: \"\",\n      category: \"\",\n      numberOfPages: \"\",\n      startDate: new Date(),\n      isbn: \"\",\n      language: \"\",\n\n      nameFileImage : \"\",\n      urlImage: \"\",\n      selectedFiles: \"\",\n      currentFile: \"\",\n\n      data:[],\n      errors: [],\n      editClicked: false,\n      bookCode: \"\",\n      showAddExist: false,\n      showAdd1: false,\n      showAdd2: false,\n      showEdit: false,\n      showDelete: false,\n      authorCode: \"\",\n      bookDetailCode: \"\",\n      categoryCode: \"\",\n      publisherCode: \"\",\n      baseImage: \"\",\n      authorList: \"\",\n      bookDetailList: \"\",\n      categoryList: \"\",\n      publisherList: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    // DATA TABEL\n    try {\n      const res = await Axios.get(`books`);\n      const tabledata = res.data.data;\n\n      this.setState({ \n        data: tabledata,\n        urlImage: AuthService.API_URL() + \"getFile/\" + res.data.data.cover \n      });\n\n      $(function () {\n        $('#bookmanagement').DataTable({\n          responsive: true\n        });\n      });\n\n    } catch (error) {\n      console.log(error);\n    }\n    this.getCategory();\n  }\n\n  handleExistOrNot = () => {\n    this.setState({ showAddExist: true })\n  }\n\n  handleShowAdd = () => {\n    this.setState({ showAddExist: false, showAdd1: true })\n  }\n\n  selectFile = (event) => {\n    this.setState({\n        selectedFiles: event.target.files,\n    });\n    console.log(this.state.selectedFiles)\n  }\n\n  handleAddBook = () => {\n    this.setState({ showAdd2: false });\n\n    const { \n      title,\n      author,\n      publisherName,\n      publisherAddress,\n      category,\n      numberOfPages,\n      isbn,\n      language\n     } = this.state;\n\n    const errors = this.validateForm(\n      title,\n      author,\n      publisherName,\n      publisherAddress,\n      category,\n      numberOfPages,\n      isbn,\n      language);\n\n    if (errors.length > 0) {\n      this.setState({ errors });\n      return;\n    }\n\n    //ngambil inputan\n    let currentFile = this.state.selectedFiles[0];\n    console.log(currentFile);\n        this.setState({\n            currentFile: currentFile,\n        });\n\n    //post file to dir\n    let formData = new FormData();\n    formData.append(\"file\", currentFile);\n    var newFileName = \"_bookCover_\";\n\n    Axios.post(\"uploadFile/\" + newFileName, formData, {\n      headers: {\n          \"Content-Type\": \"multipart/form-data\",\n      }\n    }).then((response) => {\n        console.log(response)\n        this.setState({\n          urlImage: AuthService.API_URL() + \"getFile/\" + newFileName + currentFile.name,\n          nameFileImage : newFileName + currentFile.name\n        });\n\n        //save filename to db\n        Axios.post(\n          `newbooks`,\n          {\n            publisherName: this.state.publisherName,\n            address: this.state.publisherAddress,\n            bookTitle: this.state.title,\n            bookSubtitle: this.state.subtitle,\n            authorName: this.state.author,\n            cover: this.state.nameFileImage,\n            description: this.state.description,\n            categoryName: this.state.category,\n            numberOfPages: this.state.numberOfPages,\n            publishedDate: this.state.startDate,\n            isbn: this.state.isbn,\n            language: this.state.language\n          })\n          .then(() => {\n            this.setState({ \n              showAdd1: false,\n              editClicked: true\n             })\n            swal(\"Success!\", \"Book Has Been Added\", \"success\");\n          })\n          .catch((error) => {\n            swal(\"Oops!\", \"Please check again due to duplication data entry\", \"error\");\n            console.log(error);\n          });\n          this.setState({editClicked:true, showAdd1: false})\n      })\n    }\n\n  handleShowAdd2 = () => {\n    this.setState({ showAddExist: false, showAdd2: true })\n  }\n\n  handleAddBook2 = () => {\n\n    const { \n      authorCode,\n      bookDetailCode,\n      categoryCode,\n      publisherCode,\n      isbn\n     } = this.state;\n\n    const errors = this.validateForm2(\n      authorCode,\n      bookDetailCode,\n      categoryCode,\n      publisherCode,\n      isbn);\n\n    if (errors.length > 0) {\n      this.setState({ errors });\n      return;\n    }\n\n    if (this.state.startDate && this.state.isbn) {\n      this.setState({ showAdd2: false })\n      Axios.post(\n      `book`,\n      {\n        authorCode: this.state.authorCode,\n        bookDetailCode: this.state.bookDetailCode,\n        categoryCode: this.state.categoryCode,\n        publisherCode: this.state.publisherCode,\n        publishedDate: this.state.startDate,\n        isbn: this.state.isbn\n      })\n      .then(() => {\n        this.setState({ \n          showAdd2: false,\n          editClicked: true\n         })\n        swal(\"Success!\", \"Book Has Been Added\", \"success\");\n      })\n      .catch((error) => {\n        swal(\"Oops!\", \"Please try again\", \"error\");\n        console.log(error);\n      });\n    } else {\n      swal(\"Oops!\", \"Data is not valid\", \"error\");\n    }\n  }\n\n  //button edit\n  handleShowEdit = (bkcd) => {\n    this.setState({showEdit: true, bookCode : bkcd})\n    Axios.get(`book/${bkcd}`).then((res) => {\n      let response = res.data.data;\n      let date = moment(response.publishedDate).toDate();\n      this.setState({\n        authorCode: response.authorEntity.authorCode,\n        bookDetailCode: response.bookDetailsEntity.bookDetailCode,\n        categoryCode: response.categoryEntity.categoryCode,\n        publisherCode: response.publisherEntity.publisherCode,\n        startDate: date,\n        isbn: response.isbn,\n        bookCode: response.bookCode\n      });\n    });\n  };\n\n  handleSaveEdit = () => {\n\n    const { \n      authorCode,\n      bookDetailCode,\n      categoryCode,\n      publisherCode,\n      isbn\n     } = this.state;\n\n    const errors = this.validateForm2(\n      authorCode,\n      bookDetailCode,\n      categoryCode,\n      publisherCode,\n      isbn);\n\n    if (errors.length > 0) {\n      this.setState({ errors });\n      return;\n    }\n\n    this.setState({ showEdit: false, })\n\n    Axios.put(\n      `book/${this.state.bookCode}`,\n      {\n        authorCode: this.state.authorCode,\n        bookDetailCode: this.state.bookDetailCode,\n        categoryCode: this.state.categoryCode,\n        publisherCode: this.state.publisherCode,\n        publishedDate: this.state.startDate,\n        isbn: this.state.isbn,\n        bookCode: this.state.bookCode\n      })\n      .then(() => {\n        this.setState({ editClicked: true })\n        swal(\"Great!\", \"Book Has Been edited\", \"success\");\n      })\n      .catch((error) => {\n        swal(\"Oops!\", \"Please try again\", \"error\");\n        console.log(error);\n      });\n  }\n\n  //button delete\n  handleShowDelete = (bkcd) => {\n    this.setState({ showDelete: true, bookCode: bkcd })\n  }\n\n  handleDelete = () => {\n    Axios.delete(`book/${this.state.bookCode}`)\n      .then(()=>window.location.reload())\n    // swal(\"Deleted!\", \"Book Is Successfully Deleted\", \"success\");\n    // this.setState({showDelete: false})\n  }\n\n  // utils\n  handleCloseModal = () => {\n    this.setState({ showAddExist: false, showAdd1: false, showEdit: false, showDelete: false, showAdd2: false,\n      editClicked: true })\n  }\n\n  async getCategory() {\n    const res = await Axios.get('author')\n    const dataAuthor = res.data\n\n    const options1 = dataAuthor.map(d => ({\n      \"value\": d.authorCode,\n      \"label\": d.authorName\n    }))\n    this.setState({ authorList: options1 })\n\n    const res2 = await Axios.get('bookdetails')\n    const dataBookDetail = res2.data.data\n\n    const options2 = dataBookDetail.map(d => ({\n      \"value\": d.bookDetailCode,\n      \"label\": d.bookTitle\n    }))\n    this.setState({ bookDetailList: options2 })\n\n    const res3 = await Axios.get('category')\n    const dataCategory = res3.data\n\n    const options3 = dataCategory.map(d => ({\n      \"value\": d.categoryCode,\n      \"label\": d.categoryName\n    }))\n    this.setState({ categoryList: options3 })\n\n    const res4 = await Axios.get('publisher/active')\n    const dataPublisher = res4.data\n\n    const options4 = dataPublisher.map(d => ({\n      \"value\": d.publisherCode,\n      \"label\": d.publisherName\n    }))\n    this.setState({ publisherList: options4 })\n  }\n\n  handleChangeSelect1 = (e) => {\n    this.setState({ authorCode: e.value });\n  }\n\n  handleChangeSelect2 = (e) => {\n    this.setState({ bookDetailCode: e.value });\n  }\n\n  handleChangeSelect3 = (e) => {\n    this.setState({ categoryCode: e.value });\n  }\n\n  handleChangeSelect4 = (e) => {\n    this.setState({ publisherCode: e.value });\n  }\n\n  handleChange = date => {\n    this.setState({\n      startDate: date\n    });\n  };\n\n  async componentDidUpdate(prevState) {\n    if (this.state.editClicked) {\n      try {\n        const res = await Axios.get(`books`,\n        {\n            headers: {\n              Accept: \"*/*\",\n              \"Content-Type\": \"application/json\",\n            }\n          });\n        const tabledata = res.data.data;\n        this.setState({\n          data: tabledata,\n          editClicked: false,\n          authorCode: \"\",\n          bookDetailCode: \"\",\n          categoryCode: \"\",\n          publisherCode: \"\",\n          publishedDate: \"\",\n\n          title: \"\",\n          subtitle: \"\",\n          author: \"\",\n          publisherName: \"\",\n          publisherAddress: \"\",\n          urlImage: \"\",\n          description: \"\",\n          category: \"\",\n          numberOfPages: \"\",\n          startDate: new Date(),\n          isbn: \"\",\n          language: \"\",\n          errors: [],\n         });\n      } catch (error) {\n        console.log(error);\n      };\n    }\n  }\n\n  validateForm = () => {\n      const errors = [];\n    \n      if (this.state.title.length === 0) {\n        errors.push(\"title can't be empty\");\n      }\n    \n      if (this.state.author.length === 0) {\n        errors.push(\"author can't be empty\");\n      }\n\n      if (this.state.publisherName.length === 0) {\n        errors.push(\"publisher name can't be empty\");\n      }\n\n      if (this.state.publisherAddress.length === 0) {\n        errors.push(\"publisher address can't be empty\");\n      }\n\n      if (this.state.category.length === 0) {\n        errors.push(\"category can't be empty\");\n      }\n\n      if (this.state.numberOfPages.length === 0) {\n        errors.push(\"pages can't be empty\");\n      }\n\n      if (this.state.isbn.length !== 13) {\n        errors.push(\"isbn 13 invalid\");\n      }\n\n      if (this.state.language.length === 0) {\n        errors.push(\"language can't be empty\");\n      }\n    \n      return errors;\n  }\n\n  validateForm2 = () => {\n    const errors = [];\n  \n    if (this.state.authorCode.length === 0) {\n      errors.push(\"author can't be empty\");\n    }\n  \n    if (this.state.bookDetailCode.length === 0) {\n      errors.push(\"book details can't be empty\");\n    }\n\n    if (this.state.publisherCode.length === 0) {\n      errors.push(\"publisher can't be empty\");\n    }\n\n    if (this.state.categoryCode.length === 0) {\n      errors.push(\"category can't be empty\");\n    }\n\n    if (this.state.isbn.length !== 13) {\n      errors.push(\"isbn 13 invalid\");\n    }\n  \n    return errors;\n}\n  \n\n  render() {\n    const { data, showAdd1, showAdd2, showAddExist, showEdit, showDelete, errors } = this.state;\n\n    return (\n      // page content\n      <div className=\"right_col\" role=\"main\" style={{ minHeight: '100vh' }}>\n        <section className=\"mt-5 pt-5\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-12 col-lg-12\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">Book Management</h3>\n                  </div>\n                  <div className=\"card-body\">\n\n\n                    {/* title */}\n                    <div class=\"\">\n                      <Button className=\"mb-5\" variant=\"success\" onClick={this.handleExistOrNot}>\n                        <i class=\"fa fa-plus\"></i> Add Book\n                      </Button>\n                    </div>\n                    {/* title */}\n\n\n                    {/* book management table */}\n                    <Table responsive striped id=\"bookmanagement\" style={{ width: '100%' }}>\n                      <thead>\n                        <tr>\n                          <th>Book Code</th>\n                          <th>Action</th>\n                          <th>Book Title</th>\n                          <th>Author</th>\n                          <th>Categories</th>\n                          <th>Publisher</th>\n                          <th>Published Date</th>\n                          <th>ISBN</th>\n                          <th>Book Cover</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {\n                          data.map((book, index) => {\n                            return (\n                              <tr key={index}>\n                                <td>\n                                  <p>{book.bookCode}</p>\n                                </td>\n                                <td>\n                                  <div class='d-flex justify-content-around mt-4' style={{ border: 'none' }}>\n                                    <button class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#edit\" onClick={() => { this.handleShowEdit(book.bookCode) }}><i\n                                      class=\"fa fa-edit\"></i></button>\n                                    <button class=\"btn btn-danger\" data-toggle=\"modal\" data-target=\"#delete\" onClick={() => { this.handleShowDelete(book.bookCode) }}><i\n                                      class=\"fa fa-trash\"></i></button>\n                                  </div>\n                                </td>\n                                <td>\n                                  {Object.keys(book.bookDetailsEntity ? book.bookDetailsEntity : \"\").map(key => {\n                                    if (key === \"bookTitle\") {\n                                      const judul = (book.bookDetailsEntity[key])\n                                      return judul;\n                                    }\n                                  })}\n                                </td>\n                                <td>\n                                  {Object.keys(book.authorEntity ? book.authorEntity : \"\").map(key => {\n                                    if (key === \"authorName\") {\n                                      const author = (book.authorEntity[key])\n                                      return author;\n                                    }\n                                  })}\n                                </td>\n                                <td>\n                                  {Object.keys(book.categoryEntity ? book.categoryEntity : \"\").map(key => {\n                                    if (key === \"categoryName\") {\n                                      const category = (book.categoryEntity[key])\n                                      return category;\n                                    }\n                                  })}\n                                </td>\n                                <td>\n                                  {Object.keys(book.publisherEntity ? book.publisherEntity : \"\").map(key => {\n                                    if (key === \"publisherName\") {\n                                      const publisher = (book.publisherEntity[key])\n                                      return publisher;\n                                    }\n                                  })}\n                                </td>\n                                <td>\n                                  <Moment format=\"DD/MM/YYYY\">\n                                    {book.publishedDate}\n                                  </Moment>\n                                </td>\n                                <td>\n                                  <p>{book.isbn}</p>\n                                </td>\n                                <td class=\"text-center\">\n                                  {\n                                    Object.keys(book.bookDetailsEntity ? book.bookDetailsEntity : \"\").map(key => {\n                                      if (key === \"cover\") {\n                                        const cover = (book.bookDetailsEntity[key])\n                                        return <img height=\"80\"\n\n\n                                          // JANGAN LUPA DIHAPUS\n                                          src={AuthService.API_URL() + \"getFile/\" + cover}\n                                          // src={cover}\n\n\n                                          alt=\"bookimage\" />\n                                      }\n                                    })\n                                  }\n                                </td>\n                              </tr>\n                            )\n                          })\n                        }\n                      </tbody>\n                    </Table>\n                    {/* book management table */}\n\n\n                    {/* modal if*/}\n                    <Modal size=\"lg\" show={showAddExist} onHide={this.handleCloseModal}>\n                      <Modal.Header closeButton>\n                        <Modal.Title>Add Book Data</Modal.Title>\n                      </Modal.Header>\n                      <Modal.Body>\n                        <p>Does Author, Book details, Category and Publisher information already exist?</p>\n                      </Modal.Body>\n                      <Modal.Footer>\n                        <Button className=\"btn btn-secondary\" variant=\"secondary\" onClick={this.handleShowAdd}>\n                          <i class=\"fa fa-times-circle\"></i> No\n                        </Button>\n                        <Button id=\"buttonAddBook\" type=\"submit\" className=\"btn btn-success\" variant=\"primary\" onClick={this.handleShowAdd2}>\n                          <i class=\"fa fa-plus\"></i> Yes\n                        </Button>\n                      </Modal.Footer>\n                    </Modal>\n                    {/* modal add if*/}\n\n\n                    {/* modal add if data not exist*/}\n                    <Modal size=\"lg\" show={showAdd1} onHide={this.handleCloseModal}>\n                      <Modal.Header closeButton>\n                        <Modal.Title>Add Book Data</Modal.Title>\n                      </Modal.Header>\n                      <Modal.Body>\n                        <div class='container'>\n                          <div class=\"modal-body\">\n                          <form>\n                          {errors.map(error => (\n                            <div>\n                            <label key={error} style={{color:\"red\"}} for=\"titleErr\">Error: {error}</label>\n                            <br/>\n                            </div>\n                          ))}\n                            </form>\n                            <form>\n                              <div class=\"form-group row\">\n                                <label for=\"addTitle\" class=\"col-sm-2 col-form-label\">Title</label>\n                                <div class=\"col-sm-10\">\n                                  <input\n                                    type=\"text\"\n                                    name=\"title\"\n                                    class=\"form-control\"\n                                    id=\"addTitle\"\n                                    placeholder=\"Title...\"\n                                    onChange={(e) => this.setState({ title: e.target.value })}\n                                    value={this.state.title}\n                                    data-attribute-name=\"Title\"\n                                    data-async\n                                  />\n                                </div>\n                              </div>\n                              <div class=\"form-group row\">\n                                <label for=\"addSubtitle\" class=\"col-sm-2 col-form-label\">Subtitle</label>\n                                <div class=\"col-sm-10\">\n                                  <input\n                                    type=\"text\"\n                                    name=\"subtitle\"\n                                    class=\"form-control\"\n                                    id=\"addSubtitle\"\n                                    placeholder=\"Subtitle...\"\n                                    onChange={(e) => this.setState({ subtitle: e.target.value })}\n                                    value={this.state.subtitle}\n                                    data-attribute-name=\"Subtitle\"\n                                    data-async\n                                  />\n                                </div>\n                              </div>\n                              <div class=\"form-group row\">\n                                <label for=\"addAuthor\" class=\"col-sm-2 col-form-label\">Author</label>\n                                <div class=\"col-sm-10\">\n                                  <input\n                                    type=\"text\"\n                                    name=\"author\"\n                                    class=\"form-control\"\n                                    id=\"addAuthor\"\n                                    placeholder=\"Author...\"\n                                    onChange={(e) => this.setState({ author: e.target.value })}\n                                    value={this.state.author}\n                                    data-attribute-name=\"Author\"\n                                    data-async\n                                  />\n                                </div>\n                              </div>\n                              <div class=\"form-group row\">\n                                <label for=\"addPublisher\" class=\"col-sm-2 col-form-label\">Publisher</label>\n                                <div class=\"col-sm-10\">\n                                  <input\n                                    type=\"text\"\n                                    name=\"publisher\"\n                                    class=\"form-control\"\n                                    id=\"addPublisher\"\n                                    placeholder=\"Publisher...\"\n                                    onChange={(e) => this.setState({ publisherName: e.target.value })}\n                                    value={this.state.publisher}\n                                    data-attribute-name=\"Publisher\"\n                                    data-async\n                                  />\n                                </div>\n                              </div>\n                              <div class=\"form-group row\">\n                                <label for=\"addPublisher\" class=\"col-sm-2 col-form-label\">Publisher Address</label>\n                                <div class=\"col-sm-10\">\n                                  <input\n                                    type=\"text\"\n                                    name=\"publisherAddress\"\n                                    class=\"form-control\"\n                                    id=\"addPublisherAddress\"\n                                    placeholder=\"Publisher Adress...\"\n                                    onChange={(e) => this.setState({ publisherAddress: e.target.value })}\n                                    value={this.state.publisherAddress}\n                                    data-attribute-name=\"publisherAddress\"\n                                    data-async\n                                  />\n                                </div>\n                              </div>\n                              <div class=\"form-group row\">\n                                <label for=\"addImage\" class=\"col-sm-2 col-form-label\">Url Image</label>\n                                <div class=\"col-sm-10\">\n                                  <input \n                                    id=\"addBookCover\" \n                                    name=\"bookCover\" \n                                    onChange={this.selectFile} \n                                    type=\"file\" \n                                    class=\"form-control\"\n                                  />\n                                </div>\n                              </div>\n                              <div class=\"form-group row\">\n                                <label for=\"addDesc\" class=\"col-sm-2 col-form-label\">Description</label>\n                                <div class=\"col-sm-10\">\n                                  <input\n                                    type=\"text\"\n                                    name=\"description\"\n                                    class=\"form-control\"\n                                    id=\"addDescription\"\n                                    placeholder=\"Description...\"\n                                    onChange={(e) => this.setState({ description: e.target.value })}\n                                    value={this.state.description}\n                                    data-attribute-name=\"description\"\n                                    data-async\n                                  />\n                                </div>\n                              </div>\n                              <div class=\"form-group row\">\n                                <label for=\"addDesc\" class=\"col-sm-2 col-form-label\">Category</label>\n                                <div class=\"col-sm-10\">\n                                  <input\n                                    type=\"text\"\n                                    name=\"category\"\n                                    class=\"form-control\"\n                                    id=\"addcategory\"\n                                    placeholder=\"Category...\"\n                                    onChange={(e) => this.setState({ category: e.target.value })}\n                                    value={this.state.category}\n                                    data-attribute-name=\"category\"\n                                    data-async\n                                  />\n                                </div>\n                              </div>\n                              <hr />\n                              <div class=\"form-group row\">\n                                <label for=\"addPages\" class=\"col-sm-2 col-form-label\">Number of Pages</label>\n                                <div class=\"col-sm-4\">\n                                <input \n                                  type=\"text\" \n                                  name=\"numberOfPages\"\n                                  class=\"form-control\" \n                                  id=\"addNumberOfPages\" \n                                  placeholder=\"Number of Pages...\" \n                                  onChange={(e) => this.setState({numberOfPages : e.target.value.replace(/\\D/,'')})}\n                                  value={this.state.numberOfPages} \n                                  data-attribute-name=\"numberOfPages\"\n                                  data-async\n                                  />\n                                </div>\n                                <label for=\"addIsbn\" class=\"col-sm-2 col-form-label\">ISBN</label>\n                                <div class=\"col-sm-4\">\n                                <input \n                                  type=\"text\" \n                                  name=\"isbn\"\n                                  class=\"form-control\" \n                                  id=\"isbn\" \n                                  placeholder=\"ISBN...\" \n                                  onChange={(e) => this.setState({isbn : e.target.value.replace(/\\D/,'')})}\n                                  value={this.state.isbn} \n                                  data-attribute-name=\"isbn\"\n                                  data-async\n                                  />\n                                </div>\n                              </div>\n                              <div class=\"form-group row\">\n                                <label for=\"addPublishedDate\" class=\"col-sm-2 col-form-label\">Published Date</label>\n                                <div class=\"col-sm-4\">\n                                  <DatePicker\n                                    selected={this.state.startDate}\n                                    onChange={this.handleChange}\n                                    dateFormat='yyyy-MM-dd'\n                                  />\n                                  <br />\n                                  <small className=\"text-muted\">(yyyy-MM-dd)</small>\n                                </div>\n                                <label for=\"addWeight\" class=\"col-sm-2 col-form-label\">Language</label>\n                                <div class=\"col-sm-4\">\n                                  <input\n                                    type=\"text\"\n                                    name=\"language\"\n                                    class=\"form-control\"\n                                    id=\"language\"\n                                    placeholder=\"Language...\"\n                                    onChange={(e) => this.setState({ language: e.target.value })}\n                                    value={this.state.language}\n                                    data-attribute-name=\"language\"\n                                    data-async\n                                  />\n                                </div>\n                              </div>\n                            </form>\n                          </div>\n                        </div>\n                      </Modal.Body>\n                      <Modal.Footer>\n                        <Button className=\"btn btn-secondary\" variant=\"secondary\" onClick={this.handleCloseModal}>\n                          <i class=\"fa fa-times-circle\"></i> Close\n                        </Button>\n                        <Button id=\"buttonAddBook\" type=\"submit\" className=\"btn btn-success\" variant=\"primary\" onClick={this.handleAddBook}>\n                          <i class=\"fa fa-plus\"></i> Add\n                        </Button>\n                      </Modal.Footer>\n                    </Modal>\n                    {/* modal add if data not exist*/}\n\n\n                    {/* modal add data exist*/}\n                    <Modal size=\"lg\" show={showAdd2} onHide={this.handleCloseModal}>\n                      <Modal.Header closeButton>\n                        <Modal.Title>Add Book Data</Modal.Title>\n                      </Modal.Header>\n                      <Modal.Body>\n                        <div class='container'>\n                          <div class=\"modal-body\">\n                            <form>\n                            {errors.map(error => (\n                              <div>\n                                <label key={error} style={{color:\"red\"}} for=\"titleErr\">Error: {error}</label>\n                                <br/>\n                              </div>\n                            ))}\n                              <div class=\"form-group row\">\n                                <label for=\"addAuthorCode\" class=\"col-sm-2 col-form-label\">Author Name</label>\n                                <div class=\"col-sm-4 mb-3\">\n                                  <Select\n                                    className=\"mb-2\"\n                                    options={this.state.authorList}\n                                    onChange={this.handleChangeSelect1}\n                                  />\n                                  <Link to=\"/page/manageAuthor\" className=\"btn btn-light\">\n                                    <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more author</small>\n                                  </Link>\n                                </div>\n                                <label for=\"addBookDetailCode\" class=\"col-sm-2 col-form-label\">Book Details Info</label>\n                                <div class=\"col-sm-4\">\n                                  <Select\n                                    className=\"mb-2\"\n                                    options={this.state.bookDetailList}\n                                    onChange={this.handleChangeSelect2}\n                                  />\n                                  <Link to=\"/page/manageBookDetail\" className=\"btn btn-light\">\n                                    <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more book details</small>\n                                  </Link>\n                                </div>\n                              </div>\n\n                              <div class=\"form-group row\">\n                                <label for=\"addCategoryCode\" class=\"col-sm-2 col-form-label\">Category</label>\n                                <div class=\"col-sm-4 mb-3\">\n                                  <Select\n                                    className=\"mb-2\"\n                                    options={this.state.categoryList}\n                                    onChange={this.handleChangeSelect3}\n                                  />\n                                  <Link to=\"/page/manageCategory\" className=\"btn btn-light\">\n                                    <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more category</small>\n                                  </Link>\n                                </div>\n                                <label for=\"addPublisherCode\" class=\"col-sm-2 col-form-label\">Publisher</label>\n                                <div class=\"col-sm-4\">\n                                  <Select\n                                    className=\"mb-2\"\n                                    options={this.state.publisherList}\n                                    onChange={this.handleChangeSelect4}\n                                  />\n                                  <Link to=\"/page/managePublisher\" className=\"btn btn-light\">\n                                    <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more publisher</small>\n                                  </Link>\n                                </div>\n                              </div>\n\n                              <div class=\"form-group row\">\n                                <label for=\"addPublishedDate\" class=\"col-sm-2 col-form-label\">Published Date</label>\n                                <div class=\"col-sm-4\">\n                                  <DatePicker\n                                    selected={this.state.startDate}\n                                    onChange={this.handleChange}\n                                    dateFormat='yyyy-MM-dd'\n                                  />\n                                  <br />\n                                  <small className=\"text-muted\">(yyyy-MM-dd)</small>\n                                </div>\n                                <label for=\"addIsbn\" class=\"col-sm-2 col-form-label\">ISBN</label>\n                                <div class=\"col-sm-4\">\n                                  <input\n                                    type=\"text\"\n                                    name=\"isbn\"\n                                    class=\"form-control\"\n                                    id=\"isbn\"\n                                    placeholder=\"ISBN...\"\n                                    onChange={(e) => this.setState({ isbn: e.target.value.replace(/\\D/,'')})}\n                                    value={this.state.isbn}\n                                    data-attribute-name=\"isbn\"\n                                    data-async\n                                  />\n                                </div>\n                              </div>\n\n                            </form>\n                          </div>\n                        </div>\n                      </Modal.Body>\n                      <Modal.Footer>\n                        <Button className=\"btn btn-secondary\" variant=\"secondary\" onClick={this.handleCloseModal}>\n                          <i class=\"fa fa-times-circle\"></i> Close\n                        </Button>\n                        <Button id=\"buttonAddBook\" type=\"submit\" className=\"btn btn-success\" variant=\"primary\" onClick={this.handleAddBook2}>\n                          <i class=\"fa fa-plus\"></i> Add\n                        </Button>\n                      </Modal.Footer>\n                    </Modal>\n                    {/* modal add data exist*/}\n\n\n                    {/* modal edit */}\n                    <Modal size=\"lg\" show={showEdit} onHide={this.handleCloseModal}>\n                      <Modal.Header closeButton>\n                        <Modal.Title>Edit Book Data</Modal.Title>\n                      </Modal.Header>\n                      <Modal.Body>\n                        <div class='container'>\n                          <div class=\"modal-body\">\n                            <form>\n                              {errors.map(error => (\n                                <div>\n                                  <label key={error} style={{color:\"red\"}} for=\"titleErr\">Error: {error}</label>\n                                  <br/>\n                                </div>\n                              ))}\n                              <div class=\"form-group row\">\n                                <label for=\"addAuthorCode\" class=\"col-sm-2 col-form-label\">Author Name</label>\n                                <div class=\"col-sm-4\">\n                                  <Select\n                                    className=\"mb-2\"\n                                    options={this.state.authorList}\n                                    onChange={this.handleChangeSelect1}\n                                  />\n                                  <Link to=\"/page/manageAuthor\" className=\"btn btn-light\">\n                                    <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more author</small>\n                                  </Link>\n                                </div>\n                                <label for=\"addBookDetailCode\" class=\"col-sm-2 col-form-label\">Book Details Info</label>\n                                <div class=\"col-sm-4\">\n                                  <Select\n                                    className=\"mb-2\"\n                                    options={this.state.bookDetailList}\n                                    onChange={this.handleChangeSelect2}\n                                  />\n                                  <Link to=\"/page/manageBookDetail\" className=\"btn btn-light\">\n                                    <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more book details</small>\n                                  </Link>\n                                </div>\n                              </div>\n\n                              <div class=\"form-group row\">\n                                <label for=\"addCategoryCode\" class=\"col-sm-2 col-form-label\">Category</label>\n                                <div class=\"col-sm-4\">\n                                  <Select\n                                    className=\"mb-2\"\n                                    options={this.state.categoryList}\n                                    onChange={this.handleChangeSelect3}\n                                  />\n                                  <Link to=\"/page/manageCategory\" className=\"btn btn-light\">\n                                    <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more category</small>\n                                  </Link>\n                                </div>\n                                <label for=\"addPublisherCode\" class=\"col-sm-2 col-form-label\">Publisher</label>\n                                <div class=\"col-sm-4\">\n                                  <Select\n                                    className=\"mb-2\"\n                                    options={this.state.publisherList}\n                                    onChange={this.handleChangeSelect4}\n                                  />\n                                  <Link to=\"/page/managePublisher\" className=\"btn btn-light\">\n                                    <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more publisher</small>\n                                  </Link>\n                                </div>\n                              </div>\n\n                              <div class=\"form-group row\">\n                                <label for=\"addPublishedDate\" class=\"col-sm-2 col-form-label\">Published Date</label>\n                                <div class=\"col-sm-4\">\n                                  <DatePicker\n                                    selected={this.state.startDate}\n                                    onChange={this.handleChange}\n                                    dateFormat='yyyy-MM-dd'\n                                  />\n                                  <br />\n                                  <small className=\"text-muted\">(yyyy-MM-dd)</small>\n                                </div>\n                                <label for=\"addIsbn\" class=\"col-sm-2 col-form-label\">ISBN</label>\n                                <div class=\"col-sm-4\">\n                                  <input\n                                    type=\"text\"\n                                    name=\"isbn\"\n                                    class=\"form-control\"\n                                    id=\"isbn\"\n                                    placeholder=\"ISBN...\"\n                                    onChange={(e) => this.setState({ isbn: e.target.value.replace(/\\D/,'') })}\n                                    value={this.state.isbn}\n                                    data-attribute-name=\"isbn\"\n                                    data-async\n                                  />\n                                </div>\n                              </div>\n\n                            </form>\n                          </div>\n                        </div>\n                      </Modal.Body>\n                      <Modal.Footer>\n                        <Button className=\"btn btn-secondary\" variant=\"secondary\" onClick={this.handleCloseModal}>\n                          Cancel\n                        </Button>\n                        <Button className=\"btn btn-success\" variant=\"primary\" onClick={this.handleSaveEdit}>\n                          Save\n                        </Button>\n                      </Modal.Footer>\n                    </Modal>\n                    {/* modal edit */}\n\n\n                    {/* modal delete */}\n                    <Modal show={showDelete} onHide={this.handleCloseModal}>\n                      <Modal.Header closeButton>\n                        <Modal.Title>Delete Data</Modal.Title>\n                      </Modal.Header>\n                      <Modal.Body>\n                        <div class='container'>\n                          <p>Are you sure you want to delete book data?</p>\n                        </div>\n                      </Modal.Body>\n                      <Modal.Footer>\n                        <Button className=\"btn btn-secondary\" variant=\"secondary\" onClick={this.handleCloseModal}>\n                          Close\n                        </Button>\n                        <Button className=\"btn btn-warning\" variant=\"primary\" onClick={this.handleDelete}>\n                          Delete\n                        </Button>\n                      </Modal.Footer>\n                    </Modal>\n                    {/* modal delete */}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div >\n        </section >\n      </div >\n    );\n  }\n}\n\nexport default BookManagement;","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/components/Content.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/AllHistory.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Login/Login.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Cart/Cart.js",["206","207","208","209","210"],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Register/Register.js",["211"],"import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport './Register-style.css'\nimport { FormErrors } from '../Login/FormErrors';\nimport swal from \"sweetalert\";\nimport axios from \"../../Services/axios-instance\";\n// import axios from \"axios\";\nimport AuthService from \"../../Services/auth.service\";\n\nclass Register extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            fullname: '',\n            email: '',\n            username: '',\n            password: '',\n            phone: '',\n            address: '',\n            profilePict: 'profile.jpg',\n            formErrors: { fullname: '', email: '', username: '', password: '', phone: '', address: '' },\n            nameValid: false,\n            emailValid: false,\n            passwordValid: false,\n            formValid: false\n        }\n    }\n\n    handleUserInput = (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({ [name]: value },\n            () => { this.validateField(name, value) });\n    }\n\n    validateField(fieldName, value) {\n        let fieldValidationErrors = this.state.formErrors;\n        let nameValid = this.state.nameValid;\n        let emailValid = this.state.emailValid;\n        let passwordValid = this.state.passwordValid;\n\n        switch (fieldName) {\n            case 'fullname':\n                // passwordValid = value.length >= 6;\n                // fieldValidationErrors.fullname = nameValid ? '' : ' is too short';\n                break;\n            case 'email':\n                emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n                fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n                break;\n            case 'password':\n                passwordValid = value.length >= 8;\n                fieldValidationErrors.password = passwordValid ? '' : ' is too short';\n                break;\n            default:\n                break;\n        }\n        this.setState({\n            formErrors: fieldValidationErrors,\n            nameValid: nameValid,\n            emailValid: emailValid,\n            passwordValid: passwordValid\n        }, this.validateForm);\n    }\n\n    validateForm() {\n        this.setState({ formValid: this.state.nameValid && this.state.emailValid && this.state.passwordValid });\n    }\n\n    errorClass(error) {\n        return (error.length === 0 ? '' : 'has-error');\n    }\n\n    registerUser = () => {\n        const user = {\n            fullName: this.state.fullname,\n            email: this.state.email,\n            userName: this.state.username,\n            password: this.state.password,\n            phone: this.state.phone,\n            address: this.state.address,\n            profilePict: this.state.profilePict,\n        }\n\n        // const API_URL = AuthService.api_Url()\n        // console.log(user)\n        // console.log(API_URL)\n        if (!this.state.fullname || !this.state.email || !this.state.username || !this.state.password || !this.state.phone || !this.state.address || (this.state.phone.length - 1) < 12) {\n            swal(\"Register User Failed\", \"datfa cannot be empty\", \"failed\");\n        } else {\n            axios.post('users/signup', user)\n                .then((response) => {\n                    console.log(response);\n                    console.log(response.status)\n                    swal(\"Successfully\", \"Registered User\", \"success\");\n                }).catch(function (error) {\n                    if (error.response) {\n                        console.log(error.response.data);\n                        console.log(error.response.status);\n                        console.log(error.response.headers);\n                        swal(\"Failed\", error.response.data.message, \"error\");\n                    } else if (error.request) {\n                        console.log(error.request);\n                    } else {\n                        console.log('Error', error.message);\n                    }\n                })\n\n            this.setState({\n                fullname: \"\",\n                email: \"\",\n                username: \"\",\n                password: \"\",\n                phone: \"\",\n                address: \"\",\n            });\n        }\n\n    }\n    render() {\n        return (\n            <section class=\"Form my-8 mx-5 pb-5 card-login\">\n                <div class=\"container\">\n                    <div class=\"row no-gutters row-box\">\n                        <div class=\"col-lg-6\">\n                            <img src=\"assets/images/cover4.jpg\" class=\"img-fluid img-page\" alt=\"\" />\n                        </div>\n                        <div class=\"col-lg-6 px-5 pt-3\">\n                            <img class=\"img-right img-page\" src=\"assets/images/book.png\" alt=\"\" />\n                            <h1 class=\"font-weight-bold py-2 bl-2\">Register</h1>\n                            <form className=\"demoForm\">\n                                <div class=\"col-lg-7\">\n                                    <div className={`form-group ${this.errorClass(this.state.formErrors.fullname)}`}>\n                                        <label htmlFor=\"email\">Enter Your Name</label>\n                                        <input type=\"tedt\" size=\"sm\" required class=\"form-control my-2 p-4 box email\" name=\"fullname\"\n                                            placeholder=\"Fullname\"\n                                            value={this.state.fullname}\n                                            onChange={this.handleUserInput} />\n                                    </div>\n                                    <div className={`form-group ${this.errorClass(this.state.formErrors.email)}`}>\n                                        <label htmlFor=\"email\">Email address</label>\n                                        <input type=\"email\" required class=\"form-control my-2 p-4 box email\" name=\"email\"\n                                            placeholder=\"Email\"\n                                            value={this.state.email}\n                                            onChange={this.handleUserInput} />\n                                    </div>\n                                    <div className={`form-group ${this.errorClass(this.state.formErrors.username)}`}>\n                                        <label htmlFor=\"username\">Username</label>\n                                        <input type=\"text\" required class=\"form-control my-2 p-4 box username\" name=\"username\"\n                                            placeholder=\"username\"\n                                            value={this.state.username}\n                                            onChange={this.handleUserInput} />\n                                    </div>\n                                    <div className={`form-group ${this.errorClass(this.state.formErrors.password)}`}>\n                                        <label htmlFor=\"password\">Password</label>\n                                        <input type=\"password\" class=\"form-control my-2 p-4 box password\" name=\"password\"\n                                            placeholder=\"Password\"\n                                            value={this.state.password}\n                                            onChange={this.handleUserInput} />\n                                    </div>\n                                    <div className={`form-group ${this.errorClass(this.state.formErrors.phone)}`}>\n                                        <label htmlFor=\"phone\">Phone</label>\n                                        <input type=\"number\" required class=\"form-control my-2 p-4 box phone\" name=\"phone\"\n                                            placeholder=\"phone\"\n                                            value={this.state.phone}\n                                            onChange={this.handleUserInput} />\n                                        <small className=\"text-danger\">\n                                            {(this.state.phone.length - 1) < 12 ? '- Minimal 12 digit -' : \"\"}\n                                        </small>\n                                    </div>\n                                    <div className={`form-group ${this.errorClass(this.state.formErrors.address)}`}>\n                                        <label htmlFor=\"address\">Address</label>\n                                        <textarea required className=\"form-control my-2 p-4 box\" placeholder=\"Address\" name=\"address\" rows=\"3\" value={this.state.address} onChange={this.handleUserInput}></textarea>\n                                    </div>\n                                    <i className=\"wrong-user\"><FormErrors formErrors={this.state.formErrors} /></i>\n\n                                    <div class=\"col-lg-5\">\n                                        <button disabled={!this.state.fullname || !this.state.email || !this.state.username || !this.state.password || !this.state.phone || !this.state.address || (this.state.phone.length - 1) < 12 || !this.state.email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)} type=\"button\" onClick={this.registerUser} class=\"btn-login mt-3\">Sign Up</button>\n                                    </div>\n                                    <div class=\"col-lg-5\">\n                                        <Link to=\"/\">\n                                            <a href=\"login.html\"><button type=\"button\"\n                                                class=\"btn-sign-up mt-3 mb-5\">Login</button></a>\n                                        </Link>\n                                    </div>\n                                </div>\n                            </form>\n\n\n                            <p className=\"txt-3 mg-0\">By signing up, you agree to E-Perpus's</p>\n                            <p className=\"txt-3\"><a class=\"txt-3\"\n                                href=\"https://web.kominfo.go.id/sites/default/files/users/4761/UU%2019%20Tahun%202016.pdf\"\n                                target=\"blank\"><b>Terms and Conditions & Privacy Policy</b></a></p>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default withRouter(Register);\n","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Profile/Profile.js",["212","213","214","215"],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/DonationUser/index.js",["216"],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/UserManagement/usermanagement.js",["217","218","219","220","221","222","223","224"],"import React, { Component } from 'react'\nimport axios from \"../../Services/axios-instance\";\nimport Image from 'react-bootstrap/Image'\nimport { Modal, Button, Card, Table, Form, Row, Col, Badge } from 'react-bootstrap';\n//Datatable Modules\nimport \"datatables.net-dt/js/dataTables.dataTables\"\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\nimport $ from 'jquery';\nimport swal from 'sweetalert';\nimport Moment from 'react-moment';\nimport AuthService from \"../../Services/auth.service\";\n//css\nimport \"./usermanagement.css\"\n\n\nclass UserManagement extends Component {\n    constructor() {\n        super()\n        this.state = {\n            userList: [],\n            id: \"\",\n            userName: \"\",\n            fullName: \"\",\n            email: \"\",\n            status: \"\",\n            address: \"\",\n            profilePict: AuthService.API_URL() + \"getFile/user.png\",\n            unsuspenDate: \"\",\n        }\n    }\n\n    suspend = () => {\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once suspended, you will not be able to undo the action!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n        })\n            .then((Delete) => {\n                if (Delete) {\n                    swal('User will be suspended!', {\n                        icon: \"success\",\n                    })\n                } else {\n                    swal('User will not be suspended!');\n                }\n            })\n\n    };\n\n    alertEdit = () => {\n        swal(\"Success!\", \"User has been suspended\", \"success\").then(() => {\n            window.location.reload()\n        })\n    }\n\n    changeStatusHandler = (e) => {\n        this.setState({status: e.target.value})\n    }\n\n    componentDidMount() {\n        $('.img-card').hover(makeBigger, returnToOriginalSize);\n        function makeBigger() {\n            $(this).css({ width: '+=30%', paddingRight: '20%'});\n        }\n        function returnToOriginalSize() {\n            $(this).css({ width: \"-=30%\" });\n        }\n\n        axios.get('user').then((e) => {\n            this.setState({ userList: e.data });\n\n            $(function () {\n                $('#historyUser').DataTable({\n                    responsive: true\n                });\n            });\n        })\n    }\n\n    getById(id) {\n        axios.get(`user/id-all/${id}`).then((res) => {\n            this.setState({\n                id: res.data.id,\n                userName: res.data.userName,\n                fullName: res.data.fullName,\n                address: res.data.address,\n                email: res.data.email,\n                phone: res.data.phone,\n                status: res.data.status,\n                profilePict: AuthService.API_URL() + \"getFile/\" + res.data.profilePict,\n            });\n        })\n    }\n\n    updateSuspend = (e) => {\n        let status = {\n            status: this.state.status\n        }\n        axios.put(`user/suspendate/${this.state.id}`, status).then((e) => {\n            this.alertEdit()\n        })\n    }\n\n    updateUnsuspend = (e) => {\n        let status = {}\n        axios.put(`user/unsuspendate/${this.state.id}`, status).then((e) => {\n            swal(\"Success!\", \"User has been unsuspended\", \"success\").then(() => {\n                window.location.reload()\n            })\n        })\n    }\n\n\n    setStatus(status) {\n        if (status === 1) {\n            return <span>Active</span>\n        } else if (status === 2) {\n            return <span>Suspend</span>\n        } else if (status === 0) {\n            return <span>Delete</span>\n        }\n    }\n\n    render() {\n        const { data, showSuspend, showCard } = this.state;\n\n        return (\n            <div className=\"right_col\" role=\"main\" style={{ minHeight: '100vh' }}>\n                <section className=\"mt-5 pt-5\">\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            <div className=\"col-12 col-lg-12\">\n                                <Card>\n                                    <Card.Header>\n                                        <h3>User Management</h3>\n                                    </Card.Header>\n                                    <Card.Body>\n                                        <Table responsive striped id=\"historyUser\" style={{ width: '100%' }}>\n                                            <thead>\n                                                <tr>\n                                                    <th>ID</th>\n                                                    <th>Action</th>\n                                                    <th>Username</th>\n                                                    <th>Name</th>\n                                                    <th>Email Addres</th>\n                                                    <th>Status</th>\n                                                    <th>Unsuspend Date</th>\n                                                    <th>Identification Card</th>\n\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                    {\n                                                        this.state.userList.map((user) => {\n                                                            return (\n                                                                <tr>\n                                                                    <td>{user.id}</td>\n                                                                    <td>\n                                                                        <span className=\"d-flex justify-content-center\" data-toggle=\"tooltip\" title=\"suspend\">\n                                                                        <button className=\"btn btn-danger btn-sm rounded-sm w-30 mr-1\" data-toggle=\"modal\" data-target=\"#suspend\" onClick={() => this.getById(user.id)}>\n                                                                        <i className=\"fa fa-gavel\"></i>\n                                                                        </button>\n                                                                        <button className=\"btn btn-success btn-sm rounded-sm w-30 mr-1\" data-toggle=\"modal\" data-target=\"#unsuspend\" onClick={() => this.getById(user.id)}>\n                                                                        <i className=\"fa fa-check\"></i>\n                                                                        </button>\n                                                                        </span>\n                                                                    </td>\n                                                                    <td>{user.userName}</td>\n                                                                    <td>{user.fullName}</td>\n                                                                    <td>{user.email}</td>\n                                                                    <td>{this.setStatus(user.status)}</td>\n                                                                    <td>\n                                                                    <Moment format=\"DD/MM/YYYY\">\n                                                                    {user.unsuspendDate}\n                                                                    </Moment>\n                                                                    </td>\n                                                                    <td className=\"text-center\">\n                                                                    <span className=\"d-flex justify-content-center\" data-toggle=\"tooltip\" title=\"card\">\n                                                                        <Button variant=\"primary\" size=\"sm\" data-toggle=\"modal\" data-target=\"#card\" onClick={() => this.getById(user.id)}>\n                                                                            <i className=\"fa fa-credit-card\"></i>\n                                                                        </Button>\n                                                                    </span>\n                                                                </td>\n                                                            </tr>\n                                                        )\n                                                    })\n                                                }\n                                            </tbody>\n                                        </Table>\n                                    </Card.Body>\n                                </Card>\n                            </div>\n                        </div>\n                    </div >\n                </section >\n    \n            {/* modal suspend */}                                        \n            <div className=\"modal fade\" id=\"suspend\" tabIndex=\"-1\" aria-labelledby=\"addLabel\" aria-hidden=\"true\">\n                    <div className=\"modal-dialog\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\" id=\"addLabel\">User Suspend</h5>\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\" className=\"modal-clear\">&times;</span>\n                                </button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <form>\n                                <input type=\"hidden\" readOnly className=\"form-control-plaintext\" value={this.state.id} />      \n                                <p>Are you sure this person will get suspend ?</p>\n                                <div class=\"form-group\">\n                                <label for=\"exampleFormControlSelect1\">How many weeks ?</label>\n                                <select class=\"form-control\" name=\"suspend\" id=\"\" value={this.state.status} onChange={this.changeStatusHandler}>\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                </select>\n                                </div>   \n                                </form>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button className=\"btn btn-secondary modal-clear\" data-dismiss=\"modal\">Cancel</button>\n                                <button className=\"btn btn-success\" data-dismiss=\"modal\" onClick={this.updateSuspend}>Suspend</button>\n                            </div>\n                        </div>\n                    </div>\n            </div>\n             {/* modal suspend*/}\n            {/* modal unsuspend */}                                        \n                <div className=\"modal fade\" id=\"unsuspend\" tabIndex=\"-1\" aria-labelledby=\"addLabel\" aria-hidden=\"true\">\n                    <div className=\"modal-dialog\">\n                        <div className=\"modal-content\">\n                                <div className=\"modal-header\">\n                                    <h5 className=\"modal-title\" id=\"addLabel\">User Suspend</h5>\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">                                        <span aria-hidden=\"true\" className=\"modal-clear\">&times;</span>\n                                    </button>\n                                </div>\n                                <div className=\"modal-body\">\n                                    <form>\n                                    <input type=\"hidden\" readOnly className=\"form-control-plaintext\" value={this.state.id} />      \n                                    <p>Are you sure this person will get unsuspend ?</p>\n                                    </form>\n                                </div>\n                                <div className=\"modal-footer\">\n                                    <button className=\"btn btn-secondary modal-clear\" data-dismiss=\"modal\">Cancel</button>\n                                    <button className=\"btn btn-success\" data-dismiss=\"modal\" onClick={this.updateUnsuspend}>Suspend</button>\n                                </div>\n                        </div>\n                    </div>\n                </div>\n            {/* modal unsuspend*/}                                  \n\n             {/* modal iden */}\n             <div className=\"modal fade\" id=\"card\" tabIndex=\"-1\" aria-labelledby=\"infoLabel\" aria-hidden=\"true\">\n                    <div className=\"modal-dialog\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\" id=\"infoLabel\">Kartu Identitas Perpus</h5>\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <div class=\"card mb-3\">\n                                    <div class=\"row no-gutters\">\n                                        <h3 class=\"judulKartu\"> Faraday E-Library </h3>\n                                    </div>\n                                    <div class=\"row no-gutters\">\n                                        <div class=\"col-md-8\">\n                                            <div class=\"card-body\">\n                                                <h5 class=\"card-title\"><input type=\"text\" readOnly className=\"form-control-plaintext\" value={this.state.userName} />\n                                                </h5>\n                                                <div class=\"form-group\">\n                                                    <div class=\"row\">\n                                                        <label for=\"fullName\" class=\"col-sm-4 col-form-label\"> FullName: </label>\n                                                        <div class=\"col-sm-6\">\n                                                        <input type=\"text\" readOnly className=\"form-control-plaintext\" id=\"fullName\" value={this.state.fullName} />\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <label for=\"fullName\" class=\"col-sm-3 col-form-label\"> Email: </label>\n                                                        <div class=\"col-sm-6\">\n                                                        <input type=\"text\" readOnly className=\"form-control-plaintext\" id=\"email\" value={this.state.email} />\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <label for=\"fullName\" class=\"col-sm-3 col-form-label\"> Address: </label>\n                                                        <div class=\"col-sm-6\">\n                                                        <input type=\"text\" readOnly className=\"form-control-plaintext\" id=\"address\" value={this.state.address} />\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"row\">\n                                                        <label for=\"fullName\" class=\"col-sm-3 col-form-label\"> Phone: </label>\n                                                        <div class=\"col-sm-6\">\n                                                        <input type=\"text\" readOnly className=\"form-control-plaintext\" id=\"phone\" value={this.state.phone} />\n                                                        </div>\n                                                    </div>\n                                                        \n                                                      \n                                                        <p class=\"card-text\"><small class=\"text-muted\">{this.setStatus(this.state.status)}</small></p>\n                                                 \n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-md-4\">\n                                            <Image className='photoOfOrder text-center img-card card-img-top' src={this.state.profilePict} wrapped ui={false} style={{ width: '100%', height: 'auto', paddingRight: '5%'}} />\n                                        </div>\n                                        \n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {/* modal iden */}\n            </div >\n        )\n\n    }\n}\n\nexport default UserManagement;","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/CategoryManagement/categoryManagement.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/SearchResult/SearchResult.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/CatagoryResult/CategoryResult.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/TopUpBar.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Login/FormErrors.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/components/Footer.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/DonationUser/indexForm.js",["225"],"import React, { Component } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\nimport swal from 'sweetalert'\nimport './donation-styles.css'\nimport axios from \"../../Services/axios-instance\";\nimport Select from 'react-select';\nimport AuthService from \"../../Services/auth.service\";\n\nclass DonationForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            categoryList: [],\n            bookTitle: '',\n            author: '',\n            category: '',\n            year: '',\n            description: '',\n            categoryName: '',\n            categoryCode: '',\n            button: 'Submit',\n            selectedFiles: undefined,\n            currentFile: undefined,\n            photo: AuthService.API_URL() + \"getFile/user.png\",\n            nameFileImage: \"\",\n        }\n    }\n\n    async getCategory() {\n        const res = await axios.get('category')\n        const data = res.data\n\n        const options = data.map(d => ({\n            \"value\": d.categoryCode,\n            \"label\": d.categoryName\n\n        }))\n\n        this.setState({ categoryList: options })\n\n    }\n\n    handleChange = (event) => {\n        if (event.target.name === \"bookTitle\") {\n            this.setState({\n                [event.target.name]: event.target.value,\n            });\n        }\n\n        if (event.target.name === \"author\") {\n            this.setState({\n                [event.target.name]: event.target.value,\n            });\n        }\n\n        if (event.target.name === \"year\") {\n            this.setState({\n                [event.target.name]: event.target.value,\n            });\n        }\n\n        if (event.target.name === \"description\") {\n            this.setState({\n                [event.target.name]: event.target.value,\n            });\n        }\n\n        if (event.target.name === \"photo\") {\n            this.setState({\n                [event.target.name]: event.target.value,\n            });\n        }\n\n    };\n\n    handleChangeCategory = (e) => {\n        this.setState({ categoryCode: e.value });\n    }\n\n    selectFile = (event) => {\n        this.setState({\n            selectedFiles: event.target.files,\n        });\n        var sampul = document.querySelector(\"#foto\"); //input type file\n        var sampulLabel = document.querySelector(\".custom-file-label\");\n\n        sampulLabel.textContent = sampul.files[0].name;\n\n        var fileSampul = new FileReader();\n        fileSampul.readAsDataURL(sampul.files[0]);\n    }\n\n\n    addDonation2 = () => {\n        let currentFile = this.state.selectedFiles[0];\n        console.log(this.state.selectedFiles)\n        console.log(currentFile);\n        this.setState({\n            currentFile: currentFile,\n        });\n        let formData = new FormData();\n        formData.append(\"file\", currentFile);\n        var newFileName = AuthService.getUserCode() + \"_donationPict_\";\n\n        axios.post(\"uploadFile/\" + newFileName, formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n            }\n        }).then((response) => {\n            console.log(response)\n            console.log(response.data.message)\n            console.log(this.state.nameFileImage)\n\n            this.setState({\n                photo: AuthService.API_URL() + \"getFile/\" + newFileName + currentFile.name,\n                nameFileImage: newFileName + currentFile.name\n            })\n\n            const donation = {\n                bookTitle: this.state.bookTitle,\n                author: this.state.author,\n                year: this.state.year,\n                photo: newFileName + currentFile.name,\n                description: this.state.description,\n                categoryCode: this.state.categoryCode,\n                userCode: AuthService.getUserCode()\n\n            };\n\n            axios.post(\"donation\", donation)\n                .then(() =>\n                    swal(\"Success!\", \"Donation Form Has Been Added\", \"success\")\n                );\n        }).catch(function (error) {\n            if (error.response) {\n                console.log(error.response.data);\n                console.log(error.response.status);\n                console.log(error.response.headers);\n            } else if (error.request) {\n                console.log(error.request);\n            } else {\n                console.log('Error', error.message);\n            }\n        })\n    };\n\n\n    addDonation = () => {\n        let donation = {\n            bookTitle: this.state.bookTitle,\n            author: this.state.author,\n            year: this.state.year,\n            photo: this.state.photo,\n            description: this.state.description,\n            categoryCode: this.state.categoryCode\n        };\n\n        axios.post(\"donation\", donation)\n            .then(() =>\n                swal(\"Success!\", \"Donation Form Has Been Added\", \"success\")\n                    .then(window.location.reload()));\n\n    }\n\n    submitClick = () => {\n        swal(\"Thank You\", \"Book Donation Successfully Received\", \"success\");\n    }\n\n\n\n\n    componentDidMount() {\n        this.getCategory();\n    }\n\n    render() {\n        console.log(this.state.categoryList);\n        return (\n            <div class=\"right_col\" role=\"main\">\n                <div class=\"container history\">\n                    <h3 class=\"\">Donation</h3>\n                </div>\n                <div class=\"container-fluid\" id=\"demo\">\n                    <div class=\"row justify-content-md-center\">\n                        <img src=\"assets/images/donation3.png\" class=\"img-thumbnail\" alt=\"\" />\n                    </div>\n\n                    <div className=\"col-12 col-lg-9 mt-4 mt-lg-1\">\n\n                        <div className=\" form-group row\">\n                            <label htmlFor=\"title\" className=\"col-sm-2 col-form-label\">Title Book</label>\n                            <div className=\"col-sm-10\">\n                                <input type=\"text\" class=\"form-control\" name=\"bookTitle\" value={this.state.bookTitle} onChange={(e) => this.handleChange(e, e.target.value)}\n                                    placeholder=\"Bumi Manusia\" />\n                                <small className=\"text-danger\">\n                                    {this.state.bookTitle.length < 1 ? '- Please insert the book title -' : \"\"}\n                                </small>\n                            </div>\n                        </div>\n\n                        <div className=\" form-group row\">\n                            <label htmlFor=\"category\" className=\"col-sm-2 col-form-label\">Category</label>\n                            <div className=\"col-sm-10\">\n                                <Select name=\"category\" options={this.state.categoryList} onChange={this.handleChangeCategory} />\n                            </div>\n                        </div>\n\n                        <div className=\" form-group row\">\n                            <label htmlFor=\"year\" className=\"col-sm-2 col-form-label\">Year</label>\n                            <div className=\"col-sm-10\">\n                                <input type=\"text\" name=\"year\" class=\"form-control\" id=\"exampleFormControlInput1\"\n                                    placeholder=\"2020\" value={this.state.year} onChange={(e) => this.handleChange(e, e.target.value)} />\n                                <small className=\"text-danger\">\n                                    {this.state.year.length < 4 ? '- Please insert year of the book -' : \"\"}\n                                </small>\n                            </div>\n                        </div>\n\n                        <div className=\" form-group row\">\n                            <label htmlFor=\"author\" className=\"col-sm-2 col-form-label\">Author</label>\n                            <div className=\"col-sm-10\">\n                                <input type=\"text\" name=\"author\" class=\"form-control\" id=\"exampleFormControlInput1\"\n                                    placeholder=\"Pramodya A. Toer\" value={this.state.author} onChange={(e) => this.handleChange(e, e.target.value)} />\n                                <small className=\"text-danger\">\n                                    {this.state.author.length < 1 ? '- Please insert author of this book -' : \"\"}\n                                </small>\n                            </div>\n                        </div>\n\n                        <div className=\" form-group row\">\n                            <label htmlFor=\"author\" className=\"col-sm-2 col-form-label\">Description</label>\n                            <div className=\"col-sm-10\">\n                                <textarea name=\"description\" class=\"form-control\" value={this.state.description} onChange={(e) => this.handleChange(e, e.target.value)}></textarea>\n                                <small className=\"text-danger\">\n                                    {this.state.description.length < 10 ? '- Please insert description and condition of this book -' : \"\"}\n                                </small>\n                            </div>\n                        </div>\n\n\n                        <div className=\"custom-file\">\n                            {/* <input class=\"form-control\" type=\"text\" id=\"avatar\" name=\"photo\"\n                                    value={this.state.photo} onChange={(e) => this.handleChange(e, e.target.value)} /> */}\n\n                            <input id=\"foto\" name=\"foto\" onChange={this.selectFile} type=\"file\" className=\"custom-file-input\" />\n                            <label className=\"custom-file-label\"\n                                htmlFor=\"foto\">Choose Photo Book</label>\n                        </div>\n                        <small>*format gambar berupa .jpg dengan ukuran\n                                                                        maksimal 1MB</small>\n\n                        <br /><br />\n                        <button\n                            className=\"btn btn-success btn-block\"\n                            onClick={this.addDonation2}\n                            disabled={!this.state.bookTitle || !this.state.description || !this.state.year || !this.state.photo}\n                        >\n                            {this.state.button}\n                        </button>\n                    </div>\n                </div>\n\n            </div >\n\n\n        )\n    }\n}\n\nexport default withRouter(DonationForm);","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/PublisherManagement/publishermanagement.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Catalog/Catalog.js",["226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250"],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/DebitModal.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Services/axios-instance.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Services/auth.service.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Wishlist/Wishlist.js",["251","252","253","254","255"],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Register/registerAdmin.js",["256"],"import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport './Register-style.css'\nimport { FormErrors } from '../Login/FormErrors';\nimport swal from \"sweetalert\";\nimport axios from \"../../Services/axios-instance\";\n// import axios from \"axios\";\nimport AuthService from \"../../Services/auth.service\";\n\nclass Register extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            fullname: '',\n            email: '',\n            username: '',\n            password: '',\n            phone: '',\n            address: '',\n            profilePict: 'profile.jpg',\n            formErrors: { fullname: '', email: '', username: '', password: '', phone: '', address: '' },\n            nameValid: false,\n            emailValid: false,\n            passwordValid: false,\n            formValid: false\n        }\n    }\n\n    handleUserInput = (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({ [name]: value },\n            () => { this.validateField(name, value) });\n    }\n\n    validateField(fieldName, value) {\n        let fieldValidationErrors = this.state.formErrors;\n        let nameValid = this.state.nameValid;\n        let emailValid = this.state.emailValid;\n        let passwordValid = this.state.passwordValid;\n\n        switch (fieldName) {\n            case 'fullname':\n                // passwordValid = value.length >= 6;\n                // fieldValidationErrors.fullname = nameValid ? '' : ' is too short';\n                break;\n            case 'email':\n                emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n                fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n                break;\n            case 'password':\n                passwordValid = value.length >= 8;\n                fieldValidationErrors.password = passwordValid ? '' : ' is too short';\n                break;\n            default:\n                break;\n        }\n        this.setState({\n            formErrors: fieldValidationErrors,\n            nameValid: nameValid,\n            emailValid: emailValid,\n            passwordValid: passwordValid\n        }, this.validateForm);\n    }\n\n    validateForm() {\n        this.setState({ formValid: this.state.nameValid && this.state.emailValid && this.state.passwordValid });\n    }\n\n    errorClass(error) {\n        return (error.length === 0 ? '' : 'has-error');\n    }\n\n    registerUser = () => {\n        const user = {\n            fullName: this.state.fullname,\n            email: this.state.email,\n            userName: this.state.username,\n            password: this.state.password,\n            phone: this.state.phone,\n            address: this.state.address,\n            profilePict: this.state.profilePict,\n        }\n\n        // const API_URL = AuthService.api_Url()\n        // console.log(user)\n        // console.log(API_URL)\n        if (!this.state.fullname || !this.state.email || !this.state.username || !this.state.password || !this.state.phone || !this.state.address || (this.state.phone.length - 1) < 12) {\n            swal(\"Register User Failed\", \"datfa cannot be empty\", \"failed\");\n        } else {\n            axios.post('users/admin', user)\n                .then((response) => {\n                    console.log(response);\n                    console.log(response.status)\n                    swal(\"Successfully\", \"Registered User\", \"success\");\n                }).catch(function (error) {\n                    if (error.response) {\n                        console.log(error.response.data);\n                        console.log(error.response.status);\n                        console.log(error.response.headers);\n                        swal(\"Failed\", error.response.data.message, \"error\");\n                    } else if (error.request) {\n                        console.log(error.request);\n                    } else {\n                        console.log('Error', error.message);\n                    }\n                })\n\n            this.setState({\n                fullname: \"\",\n                email: \"\",\n                username: \"\",\n                password: \"\",\n                phone: \"\",\n                address: \"\",\n            });\n        }\n\n    }\n    render() {\n        return (\n            <section class=\"Form my-8 mx-5 pb-5 card-login\">\n                <div class=\"container\">\n                    <div class=\"row no-gutters row-box\">\n                        <div class=\"col-lg-6 px-5 pt-3\">\n                            <img class=\"img-right img-page\" src=\"assets/images/book.png\" alt=\"\" />\n                            <h1 class=\"font-weight-bold py-2 bl-2\">Register</h1>\n                            <form className=\"demoForm\">\n                                <div class=\"col-lg-7\">\n                                    <div className={`form-group ${this.errorClass(this.state.formErrors.fullname)}`}>\n                                        <label htmlFor=\"email\">Enter Your Name</label>\n                                        <input type=\"tedt\" size=\"sm\" required class=\"form-control my-2 p-4 box email\" name=\"fullname\"\n                                            placeholder=\"Fullname\"\n                                            value={this.state.fullname}\n                                            onChange={this.handleUserInput} />\n                                    </div>\n                                    <div className={`form-group ${this.errorClass(this.state.formErrors.email)}`}>\n                                        <label htmlFor=\"email\">Email address</label>\n                                        <input type=\"email\" required class=\"form-control my-2 p-4 box email\" name=\"email\"\n                                            placeholder=\"Email\"\n                                            value={this.state.email}\n                                            onChange={this.handleUserInput} />\n                                    </div>\n                                    <div className={`form-group ${this.errorClass(this.state.formErrors.username)}`}>\n                                        <label htmlFor=\"username\">Username</label>\n                                        <input type=\"text\" required class=\"form-control my-2 p-4 box username\" name=\"username\"\n                                            placeholder=\"username\"\n                                            value={this.state.username}\n                                            onChange={this.handleUserInput} />\n                                    </div>\n                                    <div className={`form-group ${this.errorClass(this.state.formErrors.password)}`}>\n                                        <label htmlFor=\"password\">Password</label>\n                                        <input type=\"password\" class=\"form-control my-2 p-4 box password\" name=\"password\"\n                                            placeholder=\"Password\"\n                                            value={this.state.password}\n                                            onChange={this.handleUserInput} />\n                                    </div>\n                                    <div className={`form-group ${this.errorClass(this.state.formErrors.phone)}`}>\n                                        <label htmlFor=\"phone\">Phone</label>\n                                        <input type=\"number\" required class=\"form-control my-2 p-4 box phone\" name=\"phone\"\n                                            placeholder=\"phone\"\n                                            value={this.state.phone}\n                                            onChange={this.handleUserInput} />\n                                        <small className=\"text-danger\">\n                                            {(this.state.phone.length - 1) < 12 ? '- Minimal 12 digit -' : \"\"}\n                                        </small>\n                                    </div>\n                                    <div className={`form-group ${this.errorClass(this.state.formErrors.address)}`}>\n                                        <label htmlFor=\"address\">Address</label>\n                                        <textarea required className=\"form-control my-2 p-4 box\" placeholder=\"Address\" name=\"address\" rows=\"3\" value={this.state.address} onChange={this.handleUserInput}></textarea>\n                                    </div>\n                                    <i className=\"wrong-user\"><FormErrors formErrors={this.state.formErrors} /></i>\n\n                                    <div class=\"col-lg-5\">\n                                        <button disabled={!this.state.fullname || !this.state.email || !this.state.username || !this.state.password || !this.state.phone || !this.state.address || (this.state.phone.length - 1) < 12 || !this.state.email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)} type=\"button\" onClick={this.registerUser} class=\"btn-login mt-3\">Sign Up</button>\n                                    </div>\n                                    <div class=\"col-lg-5\">\n                                        <Link to=\"/\">\n                                            <a href=\"login.html\"><button type=\"button\"\n                                                class=\"btn-sign-up mt-3 mb-5\">Login</button></a>\n                                        </Link>\n                                    </div>\n                                </div>\n                            </form>\n\n\n                            <p className=\"txt-3 mg-0\">By signing up, you agree to E-Perpus's</p>\n                            <p className=\"txt-3\"><a class=\"txt-3\"\n                                href=\"https://web.kominfo.go.id/sites/default/files/users/4761/UU%2019%20Tahun%202016.pdf\"\n                                target=\"blank\"><b>Terms and Conditions & Privacy Policy</b></a></p>\n                        </div>\n\n                        <div class=\"col-lg-6\">\n                            <img src=\"assets/images/cover.jpg\" class=\"img-fluid img-page\" alt=\"\" />\n                        </div>\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default withRouter(Register);\n","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/History/History.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/AuthorManagement/AuthorManagement.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/ProfileUser/ProfileUser.js",["257","258","259","260"],"import React, { Component } from 'react';\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\nimport Axios from \"../../Services/axios-instance\";\nimport AuthService from \"../../Services/auth.service\";\n\nexport default class ProfileUser extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userCode: \"UU001\",\n            fullName: \"James Rodriguez\",\n            email: \"james@gmail.com\",\n            profilePict: AuthService.API_URL() + \"getFile/user.png\",\n            nameFileImage: \"\",\n            balance: \"5000\",\n            address: \"\",\n            username: \"\",\n            userData: [],\n            id: \"\",\n            password: \"\",\n            password2: \"\",\n            notNullPhone: \"\",\n            selectedFiles: undefined,\n            currentFile: undefined,\n        }\n        this.userChange = this.userChange.bind(this)\n    }\n\n    componentDidMount() {\n        Axios.get(\"user/code/\" + AuthService.getUserCode()).then((resp) => {\n            this.setState({\n                username: resp.data.userName,\n                userCode: resp.data.userCode,\n                fullName: resp.data.fullName,\n                email: resp.data.email,\n                phone: resp.data.phone,\n                address: resp.data.address,\n                id: resp.data.id,\n                profilePict: AuthService.API_URL() + \"getFile/\" + resp.data.profilePict,\n                nameFileImage: resp.data.profilePict\n            })\n        }).catch(function (error) {\n            if (error.response) {\n                console.log(error.response.data);\n                console.log(error.response.status);\n                console.log(error.response.headers);\n            } else if (error.request) {\n                console.log(error.request);\n            } else {\n                console.log('Error', error.message);\n            }\n        })\n    }\n    selectFile = (event) => {\n        this.setState({\n            selectedFiles: event.target.files,\n        });\n        var sampul = document.querySelector(\"#foto\"); //input type file\n        var sampulLabel = document.querySelector(\".custom-file-label\");\n        var imgPreview = document.querySelector(\".img-preview\");\n\n        sampulLabel.textContent = sampul.files[0].name;\n\n        var fileSampul = new FileReader();\n        fileSampul.readAsDataURL(sampul.files[0]);\n\n        fileSampul.onload = function (e) {\n            imgPreview.src = e.target.result;\n        };\n    }\n    updateBtn = (id) => {\n        let currentFile = this.state.selectedFiles[0];\n        // console.log(this.state.selectedFiles)\n        console.log(currentFile);\n        this.setState({\n            currentFile: currentFile,\n        });\n        let formData = new FormData();\n        formData.append(\"file\", currentFile);\n        var newFileName = AuthService.getUserCode() + \"_profilePict_\";\n        Axios.post(\"uploadFile/\" + newFileName, formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n            }\n        }).then((response) => {\n            console.log(response)\n            console.log(response.data.message)\n            console.log(this.state.nameFileImage)\n            if (this.state.nameFileImage === \"user.png\" || this.state.nameFileImage == newFileName + currentFile.name) {\n                this.setState({\n                    profilePict: AuthService.API_URL() + \"getFile/\" + newFileName + currentFile.name,\n                    nameFileImage: newFileName + currentFile.name\n                })\n                const userDto = {\n                    phone: this.state.phone,\n                    address: this.state.address,\n                    profilePict: newFileName + currentFile.name,\n                }\n                if (!this.state.phone || !this.state.address) {\n                    swal(\"Failed\", \"Changed profile\", \"failed\");\n                } else {\n                    Axios.put('user/profile/' + id, userDto)\n                        .then((response) => {\n                            console.log(response);\n                        })\n                    swal(\"Successfully\", \"Changed profile\", \"success\").then(function () {\n                        window.location.reload()\n                    })\n                }\n            } else {\n                Axios.delete(\"deleteFile/\" + this.state.nameFileImage).then((resp) => {\n                    console.log(resp)\n                    this.setState({\n                        profilePict: AuthService.API_URL() + \"getFile/\" + newFileName + currentFile.name,\n                        nameFileImage: newFileName + currentFile.name\n                    })\n                    const userDto = {\n                        phone: this.state.phone,\n                        address: this.state.address,\n                        profilePict: newFileName + currentFile.name,\n                    }\n                    if (!this.state.phone || !this.state.address) {\n                        swal(\"Failed\", \"Changed profile\", \"failed\");\n                    } else {\n                        Axios.put('user/profile/' + id, userDto)\n                            .then((response) => {\n                                console.log(response);\n                            })\n                        swal(\"Successfully\", \"Changed profile\", \"success\").then(function () {\n                            window.location.reload()\n                        })\n                    }\n                }).catch(function (error) {\n                    if (error.response) {\n                        console.log(error.response.data);\n                        console.log(error.response.status);\n                        console.log(error.response.headers);\n                    } else if (error.request) {\n                        console.log(error.request);\n                    } else {\n                        console.log('Error', error.message);\n                    }\n                })\n            }\n        }).catch(function (error) {\n            if (error.response) {\n                console.log(error.response.data);\n                console.log(error.response.status);\n                console.log(error.response.headers);\n            } else if (error.request) {\n                console.log(error.request);\n            } else {\n                console.log('Error', error.message);\n            }\n        })\n    };\n\n    updatePassword = (id) => {\n        const userDto = {\n            password: this.state.password\n        }\n        Axios.put('user/password/' + id, userDto)\n            .then((response) => {\n                console.log(response);\n            })\n        this.setState({\n            password: \"\",\n            password2: \"\",\n        });\n        document.getElementById(\"passmatch\").style.display = \"none\";\n        swal(\"Successfully\", \"Changed password\", \"success\");\n    }\n\n    userChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value,\n        });\n        console.log(this.state.phone.length)\n        if (this.state.phone.length < 12) {\n            this.setState({\n                notNullPhone: \"minimal 12 digit\",\n            });\n        } else {\n            this.setState({\n                notNullPhone: \"\",\n            });\n        }\n    }\n\n    cekPass1 = (e) => {\n        // alert(e);\n        this.setState({\n            password: e,\n        });\n        if (document.getElementById(\"password2\").value === e) {\n            document.getElementById(\"pwmatch\").classList.remove(\"fa-close\");\n            document.getElementById(\"pwmatch\").classList.add(\"fa-check\");\n            document.getElementById(\"pwmatch\").style.color = \"#00A41E\";\n        } else {\n            document.getElementById(\"pwmatch\").classList.remove(\"fa-check\");\n            document.getElementById(\"pwmatch\").classList.add(\"fa-close\");\n            document.getElementById(\"pwmatch\").style.color = \"#FF0004\";\n        }\n    };\n\n    cekPass2 = (e) => {\n        // alert(e);\n        document.getElementById(\"passmatch\").style.display = \"\";\n        if (document.getElementById(\"password1\").value === e) {\n            document.getElementById(\"pwmatch\").classList.remove(\"fa-close\");\n            document.getElementById(\"pwmatch\").classList.add(\"fa-check\");\n            document.getElementById(\"pwmatch\").style.color = \"#00A41E\";\n        } else {\n            document.getElementById(\"pwmatch\").classList.remove(\"fa-check\");\n            document.getElementById(\"pwmatch\").classList.add(\"fa-close\");\n            document.getElementById(\"pwmatch\").style.color = \"#FF0004\";\n        }\n        this.setState({\n            password2: e,\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"right_col\" role=\"main\" style={{ minHeight: '100vh' }}>\n                <section className=\"mt-5 pt-5\">\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            <div className=\"col-12 col-lg-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-header\">\n                                        <h3 className=\"card-title\">Profile</h3>\n                                    </div>\n                                    <div className=\"card-body\" style={{ minHeight: '650px' }}>\n                                        <div className=\"row\">\n                                            <div className=\"col-12 col-lg-3\">\n                                                <div className=\"nav flex-column nav-tabs h-100\" id=\"vert-tabs-tab\"\n                                                    role=\"tablist\" aria-orientation=\"vertical\">\n                                                    <a className=\"nav-link active\" id=\"vert-tabs-home-tab\"\n                                                        data-toggle=\"pill\" href=\"#vert-tabs-home\" role=\"tab\"\n                                                        aria-controls=\"vert-tabs-home\" aria-selected=\"true\">Profile</a>\n                                                    <a className=\"nav-link\" id=\"vert-tabs-password-tab\" data-toggle=\"pill\"\n                                                        href=\"#vert-tabs-password\" role=\"tab\"\n                                                        aria-controls=\"vert-tabs-password\" aria-selected=\"false\">Change\n                                                        Password</a>\n                                                </div>\n                                            </div>\n                                            <div className=\"col-12 col-lg-9 mt-4 mt-lg-1\">\n                                                <div className=\"tab-content\" id=\"vert-tabs-tabContent\">\n                                                    <div className=\"tab-pane text-left fade active show\" id=\"vert-tabs-home\"\n                                                        role=\"tabpanel\" aria-labelledby=\"vert-tabs-home-tab\">\n                                                        {/* <form className=\"form-horizontal\"\n                                                            encType=\"multipart/form-data\"> */}\n                                                        <div className=\"form-group row\">\n                                                            <label htmlFor=\"id\"\n                                                                className=\"col-sm-2 col-form-label\">User ID</label>\n                                                            <div className=\"col-sm-10\">\n                                                                <input type=\"text\" name=\"id\" className=\"form-control\"\n                                                                    id=\"id\" placeholder=\"masukan id...\" value={this.state.userCode}\n                                                                    readOnly />\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"form-group row\">\n                                                            <label htmlFor=\"nama\"\n                                                                className=\"col-sm-2 col-form-label\">Name</label>\n                                                            <div className=\"col-sm-10\">\n                                                                <input type=\"text\" className=\"form-control\" id=\"nama\"\n                                                                    name=\"nama\" value={this.state.fullName} readOnly />\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"form-group row\">\n                                                            <label htmlFor=\"email\"\n                                                                className=\"col-sm-2 col-form-label\">Email</label>\n                                                            <div className=\"col-sm-10\">\n                                                                <input type=\"text\" name=\"email\" className=\"form-control\"\n                                                                    id=\"email\" placeholder=\"masukan email...\"\n                                                                    value={this.state.email} readOnly />\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"form-group row\">\n                                                            <label htmlFor=\"username\"\n                                                                className=\"col-sm-2 col-form-label\">Username</label>\n                                                            <div className=\"col-sm-10\">\n                                                                <input type=\"text\" name=\"username\"\n                                                                    className=\"form-control\" id=\"username\"\n                                                                    placeholder=\"masukan username...\" value={this.state.username} readOnly />\n                                                            </div>\n                                                        </div>\n                                                        <div className=\" form-group row\">\n                                                            <label htmlFor=\"phone\" className=\"col-sm-2 col-form-label\">Phone</label>\n                                                            <div className=\"col-sm-10\">\n                                                                <input type=\"number\" name=\"phone\" className=\"form-control\"\n                                                                    id=\"phone\" value={this.state.phone} onChange={this.userChange} />\n                                                                <small className=\"text-danger\">\n                                                                    {this.state.notNullPhone}\n                                                                    {!this.state.phone ? '- not null -' : \"\"}\n                                                                </small>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\" form-group row\">\n                                                            <label htmlFor=\"address\" className=\"col-sm-2 col-form-label\">Address</label>\n                                                            <div className=\"col-sm-10\">\n                                                                <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" name=\"address\" rows=\"3\" value={this.state.address} onChange={this.userChange}></textarea>\n                                                                <small className=\"text-danger\">\n                                                                    {!this.state.address ? '- not null -' : \"\"}\n                                                                </small>\n                                                            </div>\n                                                        </div>\n\n\n                                                        <div className=\"form-group row\">\n                                                            <label htmlFor=\"inputEmail3\"\n                                                                className=\"col-sm-2 col-form-label\">Profile\n                                                                    Picture</label>\n                                                            <div className=\"col-sm-2\">\n                                                                <img src={this.state.profilePict} className=\"img-thumbnail img-preview\" />\n                                                            </div>\n                                                            <div className=\"col-sm-8\">\n                                                                <div className=\"custom-file\">\n                                                                    <input id=\"foto\" name=\"foto\" onChange={this.selectFile} type=\"file\" className=\"custom-file-input\" />\n                                                                    <label className=\"custom-file-label\"\n                                                                        htmlFor=\"foto\">Choose file</label>\n                                                                </div>\n                                                                <small>*format gambar berupa .jpg dengan ukuran\n                                                                        maksimal 1MB</small>\n                                                            </div>\n                                                        </div>\n                                                        <br />\n                                                        <div className=\"form-group\">\n                                                            <button disabled={!this.state.phone || !this.state.address || this.state.phone.length < 12}\n                                                                className=\"btn btn-primary btn-block\" onClick={() => this.updateBtn(this.state.id)}>Update</button>\n                                                        </div>\n                                                        {/* </form> */}\n                                                    </div>\n\n                                                    <div className=\"tab-pane fade\" id=\"vert-tabs-password\" role=\"tabpanel\"\n                                                        aria-labelledby=\"vert-tabs-password-tab\">\n                                                        {/* <form> */}\n                                                        <div className=\"card-body\">\n                                                            <div className=\"form-group\">\n                                                                <label htmlFor=\"password1\" className=\"\">\n                                                                    New Password\n                                                                </label>\n                                                                <input type=\"password\" onChange={(e) => this.cekPass1(e.target.value)} value={this.state.password} name=\"password\" required\n                                                                    autoComplete=\"off\" id=\"password1\"\n                                                                    className=\"form-control simm-inv\" />\n                                                                <small className=\"text-danger\">\n                                                                    {this.state.password.length < 8 ? '- minimal 8 digit -' : \"\"}\n                                                                </small>\n                                                            </div>\n                                                            <div className=\"form-group\">\n                                                                <label htmlFor=\"password2\" className=\"\">Confirm\n                                                                    Password</label><br />\n                                                                <input onChange={(e) => this.cekPass2(e.target.value)} type=\"password\" value={this.state.password2} name=\"password_confirm\"\n                                                                    required autoComplete=\"off\" id=\"password2\"\n                                                                    className=\"form-control simm-inv\" />\n                                                                <small id=\"passmatch\" style={{ display: 'none' }}><i\n                                                                    id=\"pwmatch\" className=\"fa fa-close\"\n                                                                    style={{ color: '#FF0004' }}></i> Passwords\n                                                                    Match</small>\n                                                            </div>\n                                                            <br />\n                                                            <div className=\"form-group\">\n                                                                <button id=\"btn-save\" disabled={this.state.password.length < 8 || this.state.password2 != this.state.password}\n                                                                    className=\"btn btn-primary btn-block\" onClick={() => this.updatePassword(this.state.id)}>Change</button>\n                                                            </div>\n                                                        </div>\n                                                        {/* </form> */}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div >\n                </section >\n            </div >\n        )\n    }\n}","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/FineLists.js",[],{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","replacedBy":"264"},{"ruleId":"261","replacedBy":"265"},{"ruleId":"263","replacedBy":"266"},{"ruleId":"261","replacedBy":"267"},{"ruleId":"263","replacedBy":"268"},{"ruleId":"269","severity":1,"message":"270","line":14,"column":13,"nodeType":"271","messageId":"272","endLine":14,"endColumn":16},{"ruleId":"261","replacedBy":"273"},{"ruleId":"263","replacedBy":"274"},{"ruleId":"269","severity":1,"message":"275","line":7,"column":8,"nodeType":"271","messageId":"272","endLine":7,"endColumn":13},{"ruleId":"269","severity":1,"message":"276","line":13,"column":8,"nodeType":"271","messageId":"272","endLine":13,"endColumn":13},{"ruleId":"269","severity":1,"message":"277","line":330,"column":9,"nodeType":"271","messageId":"272","endLine":330,"endColumn":13},{"ruleId":"278","severity":1,"message":"279","line":548,"column":76,"nodeType":"280","messageId":"281","endLine":548,"endColumn":78},{"ruleId":"278","severity":1,"message":"279","line":550,"column":76,"nodeType":"280","messageId":"281","endLine":550,"endColumn":78},{"ruleId":"282","severity":1,"message":"283","line":600,"column":47,"nodeType":"284","endLine":600,"endColumn":58},{"ruleId":"282","severity":1,"message":"283","line":656,"column":47,"nodeType":"284","endLine":656,"endColumn":58},{"ruleId":"285","severity":1,"message":"286","line":542,"column":110,"nodeType":"287","messageId":"288","endLine":542,"endColumn":112},{"ruleId":"285","severity":1,"message":"286","line":550,"column":100,"nodeType":"287","messageId":"288","endLine":550,"endColumn":102},{"ruleId":"285","severity":1,"message":"286","line":558,"column":104,"nodeType":"287","messageId":"288","endLine":558,"endColumn":106},{"ruleId":"285","severity":1,"message":"286","line":566,"column":106,"nodeType":"287","messageId":"288","endLine":566,"endColumn":108},{"ruleId":"285","severity":1,"message":"286","line":583,"column":111,"nodeType":"287","messageId":"288","endLine":583,"endColumn":113},{"ruleId":"285","severity":1,"message":"289","line":44,"column":47,"nodeType":"287","messageId":"290","endLine":44,"endColumn":49},{"ruleId":"291","severity":1,"message":"292","line":237,"column":69,"nodeType":"293","endLine":237,"endColumn":194},{"ruleId":"294","severity":1,"message":"295","line":244,"column":69,"nodeType":"293","endLine":244,"endColumn":170},{"ruleId":"294","severity":1,"message":"295","line":256,"column":41,"nodeType":"293","endLine":256,"endColumn":105},{"ruleId":"291","severity":1,"message":"292","line":278,"column":57,"nodeType":"293","endLine":278,"endColumn":202},{"ruleId":"269","severity":1,"message":"296","line":8,"column":8,"nodeType":"271","messageId":"272","endLine":8,"endColumn":19},{"ruleId":"269","severity":1,"message":"276","line":3,"column":8,"nodeType":"271","messageId":"272","endLine":3,"endColumn":13},{"ruleId":"278","severity":1,"message":"279","line":92,"column":85,"nodeType":"280","messageId":"281","endLine":92,"endColumn":87},{"ruleId":"294","severity":1,"message":"295","line":300,"column":65,"nodeType":"293","endLine":300,"endColumn":139},{"ruleId":"278","severity":1,"message":"297","line":346,"column":166,"nodeType":"280","messageId":"281","endLine":346,"endColumn":168},{"ruleId":"298","severity":1,"message":"299","line":35,"column":25,"nodeType":"293","endLine":35,"endColumn":96},{"ruleId":"269","severity":1,"message":"300","line":4,"column":10,"nodeType":"271","messageId":"272","endLine":4,"endColumn":15},{"ruleId":"269","severity":1,"message":"301","line":4,"column":38,"nodeType":"271","messageId":"272","endLine":4,"endColumn":42},{"ruleId":"269","severity":1,"message":"302","line":4,"column":44,"nodeType":"271","messageId":"272","endLine":4,"endColumn":47},{"ruleId":"269","severity":1,"message":"303","line":4,"column":49,"nodeType":"271","messageId":"272","endLine":4,"endColumn":52},{"ruleId":"269","severity":1,"message":"304","line":4,"column":54,"nodeType":"271","messageId":"272","endLine":4,"endColumn":59},{"ruleId":"269","severity":1,"message":"305","line":127,"column":17,"nodeType":"271","messageId":"272","endLine":127,"endColumn":21},{"ruleId":"269","severity":1,"message":"306","line":127,"column":23,"nodeType":"271","messageId":"272","endLine":127,"endColumn":34},{"ruleId":"269","severity":1,"message":"307","line":127,"column":36,"nodeType":"271","messageId":"272","endLine":127,"endColumn":44},{"ruleId":"269","severity":1,"message":"308","line":2,"column":22,"nodeType":"271","messageId":"272","endLine":2,"endColumn":26},{"ruleId":"269","severity":1,"message":"300","line":3,"column":23,"nodeType":"271","messageId":"272","endLine":3,"endColumn":28},{"ruleId":"269","severity":1,"message":"301","line":3,"column":30,"nodeType":"271","messageId":"272","endLine":3,"endColumn":34},{"ruleId":"269","severity":1,"message":"302","line":3,"column":36,"nodeType":"271","messageId":"272","endLine":3,"endColumn":39},{"ruleId":"269","severity":1,"message":"303","line":3,"column":41,"nodeType":"271","messageId":"272","endLine":3,"endColumn":44},{"ruleId":"269","severity":1,"message":"304","line":3,"column":46,"nodeType":"271","messageId":"272","endLine":3,"endColumn":51},{"ruleId":"269","severity":1,"message":"309","line":3,"column":53,"nodeType":"271","messageId":"272","endLine":3,"endColumn":59},{"ruleId":"269","severity":1,"message":"275","line":5,"column":8,"nodeType":"271","messageId":"272","endLine":5,"endColumn":13},{"ruleId":"269","severity":1,"message":"310","line":9,"column":8,"nodeType":"271","messageId":"272","endLine":9,"endColumn":14},{"ruleId":"269","severity":1,"message":"311","line":10,"column":8,"nodeType":"271","messageId":"272","endLine":10,"endColumn":18},{"ruleId":"269","severity":1,"message":"312","line":11,"column":8,"nodeType":"271","messageId":"272","endLine":11,"endColumn":11},{"ruleId":"269","severity":1,"message":"313","line":17,"column":8,"nodeType":"271","messageId":"272","endLine":17,"endColumn":11},{"ruleId":"269","severity":1,"message":"314","line":18,"column":8,"nodeType":"271","messageId":"272","endLine":18,"endColumn":11},{"ruleId":"278","severity":1,"message":"279","line":93,"column":18,"nodeType":"280","messageId":"281","endLine":93,"endColumn":20},{"ruleId":"278","severity":1,"message":"279","line":100,"column":25,"nodeType":"280","messageId":"281","endLine":100,"endColumn":27},{"ruleId":"278","severity":1,"message":"279","line":107,"column":25,"nodeType":"280","messageId":"281","endLine":107,"endColumn":27},{"ruleId":"278","severity":1,"message":"279","line":114,"column":25,"nodeType":"280","messageId":"281","endLine":114,"endColumn":27},{"ruleId":"278","severity":1,"message":"279","line":121,"column":25,"nodeType":"280","messageId":"281","endLine":121,"endColumn":27},{"ruleId":"269","severity":1,"message":"305","line":180,"column":17,"nodeType":"271","messageId":"272","endLine":180,"endColumn":21},{"ruleId":"285","severity":1,"message":"286","line":210,"column":140,"nodeType":"287","messageId":"288","endLine":210,"endColumn":142},{"ruleId":"285","severity":1,"message":"286","line":233,"column":140,"nodeType":"287","messageId":"288","endLine":233,"endColumn":142},{"ruleId":"269","severity":1,"message":"315","line":235,"column":75,"nodeType":"271","messageId":"272","endLine":235,"endColumn":80},{"ruleId":"294","severity":1,"message":"295","line":236,"column":76,"nodeType":"293","endLine":236,"endColumn":293},{"ruleId":"285","severity":1,"message":"286","line":241,"column":130,"nodeType":"287","messageId":"288","endLine":241,"endColumn":132},{"ruleId":"285","severity":1,"message":"286","line":248,"column":134,"nodeType":"287","messageId":"288","endLine":248,"endColumn":136},{"ruleId":"285","severity":1,"message":"286","line":255,"column":136,"nodeType":"287","messageId":"288","endLine":255,"endColumn":138},{"ruleId":"269","severity":1,"message":"276","line":9,"column":8,"nodeType":"271","messageId":"272","endLine":9,"endColumn":13},{"ruleId":"285","severity":1,"message":"289","line":32,"column":47,"nodeType":"287","messageId":"290","endLine":32,"endColumn":49},{"ruleId":"291","severity":1,"message":"292","line":127,"column":69,"nodeType":"293","endLine":128,"endColumn":114},{"ruleId":"291","severity":1,"message":"292","line":130,"column":69,"nodeType":"293","endLine":130,"endColumn":204},{"ruleId":"294","severity":1,"message":"295","line":137,"column":69,"nodeType":"293","endLine":137,"endColumn":133},{"ruleId":"269","severity":1,"message":"296","line":8,"column":8,"nodeType":"271","messageId":"272","endLine":8,"endColumn":19},{"ruleId":"269","severity":1,"message":"276","line":3,"column":8,"nodeType":"271","messageId":"272","endLine":3,"endColumn":13},{"ruleId":"278","severity":1,"message":"279","line":91,"column":85,"nodeType":"280","messageId":"281","endLine":91,"endColumn":87},{"ruleId":"294","severity":1,"message":"295","line":318,"column":65,"nodeType":"293","endLine":318,"endColumn":139},{"ruleId":"278","severity":1,"message":"297","line":366,"column":152,"nodeType":"280","messageId":"281","endLine":366,"endColumn":154},"no-native-reassign",["316"],"no-negated-in-lhs",["317"],["316"],["317"],["316"],["317"],"no-unused-vars","'get' is defined but never used.","Identifier","unusedVar",["316"],["317"],"'Image' is defined but never used.","'axios' is defined but never used.","'edit' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'AuthService' is defined but never used.","Expected '!==' and instead saw '!='.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Modal' is defined but never used.","'Form' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Badge' is defined but never used.","'data' is assigned a value but never used.","'showSuspend' is assigned a value but never used.","'showCard' is assigned a value but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'Rating' is defined but never used.","'Typography' is defined but never used.","'Box' is defined but never used.","'API' is defined but never used.","'api' is defined but never used.","'cover' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]