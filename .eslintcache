[{"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/App.js":"1","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/components/HeaderUser.js":"2","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/Index.js":"3","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/ForgotPassword/index.js":"4","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Form/ReturnForm.js":"5","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/FineManagement/fineManagement.js":"6","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/BookDetailManagement/bookdetailmanagement.js":"7","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/HistoryUser/HistoryUser.js":"8","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/ManageDonation/index.js":"9","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/SeeMoreBooks/SeeMoreBooks.js":"10","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/NoBills.js":"11","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/TopUpBox.js":"12","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/InstructionsMbank.js":"13","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/HistoryPayment.js":"14","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/api.js":"15","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/DetailPage/detailpage.js":"16","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/BookManagement/bookmanagement.js":"17","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/components/Content.js":"18","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/AllHistory.js":"19","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Login/Login.js":"20","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Cart/Cart.js":"21","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Register/Register.js":"22","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Profile/Profile.js":"23","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/DonationUser/index.js":"24","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/UserManagement/usermanagement.js":"25","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/CategoryManagement/categoryManagement.js":"26","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/SearchResult/SearchResult.js":"27","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/CatagoryResult/CategoryResult.js":"28","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/TopUpBar.js":"29","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Login/FormErrors.js":"30","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/components/Footer.js":"31","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/DonationUser/indexForm.js":"32","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/PublisherManagement/publishermanagement.js":"33","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Catalog/Catalog.js":"34","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/DebitModal.js":"35","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Services/axios-instance.js":"36","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Services/auth.service.js":"37","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Wishlist/Wishlist.js":"38","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Register/registerAdmin.js":"39","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/History/History.js":"40","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/AuthorManagement/AuthorManagement.js":"41"},{"size":268,"mtime":1609223960104,"results":"42","hashOfConfig":"43"},{"size":9355,"mtime":1610603917959,"results":"44","hashOfConfig":"43"},{"size":17307,"mtime":1610378454559,"results":"45","hashOfConfig":"43"},{"size":2907,"mtime":1609909299134,"results":"46","hashOfConfig":"43"},{"size":14942,"mtime":1610356075157,"results":"47","hashOfConfig":"43"},{"size":17227,"mtime":1610378454556,"results":"48","hashOfConfig":"43"},{"size":27284,"mtime":1610626355399,"results":"49","hashOfConfig":"43"},{"size":13592,"mtime":1610621804472,"results":"50","hashOfConfig":"43"},{"size":28971,"mtime":1610603917957,"results":"51","hashOfConfig":"43"},{"size":2907,"mtime":1610572601527,"results":"52","hashOfConfig":"43"},{"size":310,"mtime":1608733715161,"results":"53","hashOfConfig":"43"},{"size":1454,"mtime":1608733715162,"results":"54","hashOfConfig":"43"},{"size":5756,"mtime":1608733715161,"results":"55","hashOfConfig":"43"},{"size":2659,"mtime":1610572601525,"results":"56","hashOfConfig":"43"},{"size":199,"mtime":1609238997485,"results":"57","hashOfConfig":"43"},{"size":32281,"mtime":1610621917754,"results":"58","hashOfConfig":"43"},{"size":44459,"mtime":1610622910246,"results":"59","hashOfConfig":"43"},{"size":16768,"mtime":1610621804480,"results":"60","hashOfConfig":"43"},{"size":2989,"mtime":1610356075160,"results":"61","hashOfConfig":"43"},{"size":6491,"mtime":1610572601521,"results":"62","hashOfConfig":"43"},{"size":13796,"mtime":1610356075155,"results":"63","hashOfConfig":"43"},{"size":10195,"mtime":1610481581327,"results":"64","hashOfConfig":"43"},{"size":20331,"mtime":1610572601526,"results":"65","hashOfConfig":"43"},{"size":1900,"mtime":1609223960117,"results":"66","hashOfConfig":"43"},{"size":17752,"mtime":1610621804477,"results":"67","hashOfConfig":"43"},{"size":10860,"mtime":1610481581321,"results":"68","hashOfConfig":"43"},{"size":3900,"mtime":1610572601527,"results":"69","hashOfConfig":"43"},{"size":5434,"mtime":1610621804469,"results":"70","hashOfConfig":"43"},{"size":1356,"mtime":1610378454560,"results":"71","hashOfConfig":"43"},{"size":414,"mtime":1609223960119,"results":"72","hashOfConfig":"43"},{"size":482,"mtime":1606291945481,"results":"73","hashOfConfig":"43"},{"size":10303,"mtime":1610603917956,"results":"74","hashOfConfig":"43"},{"size":14487,"mtime":1610567871161,"results":"75","hashOfConfig":"43"},{"size":13912,"mtime":1610621804471,"results":"76","hashOfConfig":"43"},{"size":10296,"mtime":1610572601523,"results":"77","hashOfConfig":"43"},{"size":661,"mtime":1610622001240,"results":"78","hashOfConfig":"43"},{"size":897,"mtime":1610622007562,"results":"79","hashOfConfig":"43"},{"size":7240,"mtime":1610296980454,"results":"80","hashOfConfig":"43"},{"size":10194,"mtime":1610572601527,"results":"81","hashOfConfig":"43"},{"size":15748,"mtime":1610621804472,"results":"82","hashOfConfig":"43"},{"size":9770,"mtime":1610621804467,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"3s4fd1",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/App.js",[],["172","173"],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/components/HeaderUser.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/Index.js",[],["174","175"],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/ForgotPassword/index.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Form/ReturnForm.js",[],["176","177"],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/FineManagement/fineManagement.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/BookDetailManagement/bookdetailmanagement.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/HistoryUser/HistoryUser.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/ManageDonation/index.js",["178"],"import React, { Component } from \"react\";\nimport { Table, Modal, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Select from \"react-select\";\n\nimport axios from \"../../Services/axios-instance\";\nimport swal from \"sweetalert\";\n\nimport \"datatables.net-dt/js/dataTables.dataTables\";\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\nimport \"datatables.net-responsive-dt/js/responsive.dataTables.js\";\nimport \"datatables.net-responsive-dt/css/responsive.dataTables.css\";\nimport \"jquery/dist/jquery.min.js\";\nimport $, { get } from \"jquery\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-calendar/dist/Calendar.css';\n\nclass ManageDonation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      donationList: [],\n      allList: [],\n      id: \"\",\n      bookTitle: \"\",\n      author: \"\",\n      year: \"\",\n      photo: \"\",\n      status: \"\",\n      categoryCode: \"\",\n      button: \"Update Data\",\n      categoryList: [],\n      categoryName: \"\",\n      showAdd2: false,\n      showEdit: false,\n      data: [],\n      authorCode: \"\",\n      bookDetailCode: \"\",\n      publisherCode: \"\",\n      urlImage: \"\",\n      title: \"\",\n      subtitle: \"\",\n      publisherName: \"\",\n      publisherAddress: \"\",\n      description: \"\",\n      pages: \"\",\n      startDate: new Date(),\n      language: \"\",\n      length: \"\",\n      isbn: \"\",\n      weight: \"\",\n      width: \"\",\n      numberOfPages: \"\",\n      category: \"\",\n      baseImage: \"\",\n      authorList: \"\",\n      bookDetailList: \"\",\n      publisherList: \"\",\n      donationDate: \"\",\n      idAcc: \"\"\n    }\n    this.donationChange = this.donationChange.bind(this)\n  }\n\n  donationChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n\n\n  async getAllData() {\n    const res = await axios.get('author')\n    const dataAuthor = res.data\n\n    const options1 = dataAuthor.map(d => ({\n      \"value\": d.authorCode,\n      \"label\": d.authorName\n    }))\n    this.setState({ authorList: options1 })\n\n    const res2 = await axios.get('bookdetails')\n    const dataBookDetail = res2.data.data\n\n    const options2 = dataBookDetail.map(d => ({\n      \"value\": d.bookDetailCode,\n      \"label\": d.bookTitle\n    }))\n    this.setState({ bookDetailList: options2 })\n\n    const res3 = await axios.get('category')\n    const dataCategory = res3.data\n\n    const options3 = dataCategory.map(d => ({\n      \"value\": d.categoryCode,\n      \"label\": d.categoryName\n    }))\n    this.setState({ categoryList: options3 })\n\n    const res4 = await axios.get('publisher')\n    const dataPublisher = res4.data\n\n    const options4 = dataPublisher.map(d => ({\n      \"value\": d.publisherCode,\n      \"label\": d.publisherName\n    }))\n    this.setState({ publisherList: options4 })\n  }\n\n\n  handleChangeSelect1 = (e) => {\n    this.setState({ authorCode: e.value });\n  }\n\n  handleChangeSelect2 = (e) => {\n    this.setState({ bookDetailCode: e.value });\n  }\n\n  handleChangeSelect3 = (e) => {\n    this.setState({ categoryCode: e.value });\n  }\n\n  handleChangeSelect4 = (e) => {\n    this.setState({ publisherCode: e.value });\n  }\n\n  handleChangeDate = date => {\n    this.setState({\n      startDate: date\n    });\n  };\n\n\n\n  handleShowAdd2 = (getId) => {\n    this.setState({ showAddExist: false, showAdd2: true, idAcc: getId })\n\n  }\n\n\n  handleAddBook2 = () => {\n\n    if (this.state.startDate && this.state.isbn) {\n      this.setState({ showAdd2: false })\n      axios.post(\n        \"book\",\n        {\n          authorCode: this.state.authorCode,\n          bookDetailCode: this.state.bookDetailCode,\n          categoryCode: this.state.categoryCode,\n          publisherCode: this.state.publisherCode,\n          publishedDate: this.state.startDate,\n          isbn: this.state.isbn\n        },\n        {\n          headers: {\n            Accept: \"*/*\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n        .then(() => {\n          let donationList = {\n            status: this.state.status\n          };\n          axios.put(`acc-donation/${this.state.idAcc}`, donationList)\n            .then(() =>\n              swal(\"Success!\", \"Book Has Been Added\", \"success\")\n                .then(window.location.reload()));\n          this.setState({\n            showAdd2: false,\n            editClicked: true\n          })\n\n        })\n        .catch((error) => {\n          swal(\"Oops!\", \"Please try again\", \"error\");\n          console.log(error);\n        });\n    } else {\n      swal(\"Oops!\", \"Data is not valid\", \"error\");\n    }\n  }\n\n  handleCloseModal = () => {\n    this.setState({\n      showAdd2: false,\n      bookCode: \"\", authorCode: \"\", bookDetailCode: \"\", categoryCode: \"\", startDate: \"\", date: \"\", isbn: \"\", publisherCode: \"\"\n    })\n  }\n\n  componentDidMount() {\n    this.findPerson();\n    this.getCategory();\n    this.getAllData();\n  }\n\n  findPerson() {\n    axios.get(\"http://localhost:8500/api/donation\")\n      .then((response) => {\n        console.log(response);\n        this.setState({\n          donationList: response.data\n        })\n        $(function () {\n          $(\"#donation-list\").DataTable({\n            responsive: true,\n          });\n        });\n      });\n  }\n\n  delete = (getId) => {\n    axios\n      .delete(`http://localhost:8500/api/donation/${getId}`)\n      .then(() => window.location.reload());\n  };\n\n  accept = (getId) => {\n    let donationList = {\n      status: this.state.status\n    };\n    axios\n      .put(`acc-donation/${getId}`, donationList)\n      .then(() => window.location.reload());\n  }\n\n\n  getDetail = (getId) => {\n    this.setState({\n      id: getId,\n\n    });\n\n    axios.get(`http://localhost:8500/api/donation/id/${getId}`).then((e) => {\n      let res = e.data;\n      this.setState({\n        author: res.author,\n        bookTitle: res.bookTitle,\n        year: res.year,\n        description: res.description,\n        photo: res.photo,\n        status: res.status,\n        categoryCode: res.categoryEntity.categoryName,\n        donationDate: res.date\n      });\n    });\n  };\n\n  addUpdate = () => {\n    let donationList = {\n      author: this.state.author,\n      bookTitle: this.state.bookTitle,\n      year: this.state.year,\n      description: this.state.description,\n      categoryCode: this.state.categoryCode\n    };\n    axios\n      .put(`http://localhost:8500/api/donation-detail/${this.state.id}`, donationList)\n      .then(() => window.location.reload());\n  };\n\n\n  async getCategory() {\n    const res = await axios.get('category')\n    const data = res.data\n\n    const options = data.map(d => ({\n      \"value\": d.categoryCode,\n      \"label\": d.categoryName\n\n    }))\n\n    this.setState({ categoryList: options })\n\n  }\n\n  handleChange = (event) => {\n\n\n    if (event.target.name === \"bookTitle\") {\n      this.setState({\n        [event.target.name]: event.target.value,\n      });\n    }\n\n    if (event.target.name === \"author\") {\n      this.setState({\n        [event.target.name]: event.target.value,\n      });\n    }\n\n    if (event.target.name === \"year\") {\n      this.setState({\n        [event.target.name]: event.target.value,\n      });\n    }\n\n    if (event.target.name === \"description\") {\n      this.setState({\n        [event.target.name]: event.target.value,\n      });\n    }\n\n\n  };\n\n\n  handleChangeCategory = (e) => {\n    this.setState({ categoryCode: e.value });\n  }\n\n\n  submitReject = () => {\n    swal(\"Rejected\", \"Book Donation Rejected\", \"warning\");\n  };\n\n  submitAccept = () => {\n    swal(\"Thank You\", \"Book Donation Successfully Received\", \"success\");\n  };\n\n\n\n  render() {\n    const { showAdd2 } = this.state;\n    return (\n      <>\n        <div className=\"right_col\" role=\"main\" style={{ minHeight: \"100vh\" }}>\n          <section className=\"mt-5 pt-5\">\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-12 col-lg-12\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">Donation Management</h3>\n                    </div>\n                    <div className=\"card-body\">\n                      <Table\n                        responsive\n                        striped\n                        id=\"donation-list\"\n                        style={{ width: \"100%\" }}\n                      >\n                        <thead>\n                          <tr>\n                            <th>Book ID</th>\n                            <th>Action</th>\n                            <th>Book Title</th>\n                            <th>Author</th>\n                            <th>Categories</th>\n                            <th>Status</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {this.state.donationList.map((donation, index) => {\n                            return (\n                              <tr>\n                                <td>{donation.id}</td>\n                                <td>\n                                  <span className=\"d-flex justify-content-center\">\n                                    <button\n                                      className=\"btn btn-warning\"\n                                      data-toggle=\"modal\"\n                                      data-target=\"#edit\"\n                                      onClick={() => this.getDetail(donation.id)}\n                                    >\n                                      <i className=\"fa fa-eye\"></i>\n                                    </button>\n                                    <button\n                                      className=\"btn btn-success\"\n                                      data-toggle=\"modal\"\n                                      onClick={() => this.handleShowAdd2(donation.id)}\n                                    >\n                                      <i className=\"fa fa-check\"></i>\n                                    </button>\n                                    <button\n                                      className=\"btn btn-primary\"\n                                      onClick={() => this.getDetail(donation.id)}\n                                      data-toggle=\"modal\"\n                                      data-target=\"#fineModal\"\n                                    >\n                                      <i className=\"fa fa-edit\"></i>\n                                    </button>\n                                    <button\n                                      className=\"btn btn-danger\"\n                                      onClick={() => this.delete(donation.id)}\n                                    >\n                                      <i className=\"fa fa-eraser\"></i>\n                                    </button>\n                                  </span>\n                                </td>\n                                <td>{donation.bookTitle}</td>\n                                <td>{donation.author}</td>\n                                <td>{donation.categoryEntity.categoryName}</td>\n                                {donation.status === 3 && <td>Rejected</td>}\n                                {donation.status === 2 && <td>Accepted</td>}\n                                {donation.status === 1 && <td>Pending</td>}\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </Table>\n                    </div>\n                  </div>\n\n                  {/* UPDATE Modal */}\n                  <div className=\"modal fade\" tabindex=\"-1\" id=\"fineModal\">\n                    <div className=\"modal-dialog modal-dialog-centered\">\n                      <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                          <h4 className=\"modal-title\">Donation Update Data Form</h4>\n                          <button\n                            type=\"button\"\n                            class=\"close\"\n                            data-dismiss=\"modal\"\n                            aria-label=\"Close\"\n                          >\n                            <span aria-hidden=\"true\" onClick={this.clearModal} className=\"modal-clear\">\n                              &times;\n                            </span>\n                          </button>\n                        </div>\n                        <div className=\"modal-body\">\n                          <div class=\"container\">\n                            <form className=\"mb-4\">\n                              <div className=\"form-group row\">\n                                <label for=\"fineType\" className=\"col-sm-4\">\n                                  <b>Title</b></label>\n                                <input\n                                  name=\"bookTitle\"\n                                  className=\"col-sm-6\"\n                                  id=\"bookTitle\"\n                                  placeholder=\"Kisah Tanah Jawa\"\n                                  autoFocus\n                                  autoComplete=\"off\"\n                                  value={this.state.bookTitle}\n                                  onChange={(e) => this.handleChange(e, e.target.value)}\n                                ></input>\n                              </div>\n\n                              <div className=\"form-group row\">\n                                <label for=\"nominal\" className=\"col-sm-4\">\n                                  <b>Year</b>\n                                </label>\n                                <input\n                                  name=\"year\"\n                                  className=\"col-sm-6\"\n                                  id=\"year\"\n                                  placeholder=\"2021\"\n                                  autoComplete=\"off\"\n                                  value={this.state.year}\n                                  onChange={(e) => this.handleChange(e, e.target.value)}\n                                ></input>\n                              </div>\n\n                              <div className=\"form-group row\">\n                                <label for=\"validTo\" className=\"col-sm-4\">\n                                  <b>Author</b>\n                                </label>\n                                <input\n                                  name=\"author\"\n                                  className=\"col-sm-6\"\n                                  placeholder=\"Pramoedya A. TOer\"\n                                  id=\"author\"\n                                  autoComplete=\"off\"\n                                  value={this.state.author}\n                                  onChange={(e) => this.handleChange(e, e.target.value)}\n                                // onInput={this.maxLengthCheck}\n                                ></input>\n                              </div>\n\n                              <div className=\"form-group row\">\n                                <label for=\"category\" className=\"col-sm-4\">\n                                  <b>Category</b>\n                                </label>\n                                <Select className=\"col-sm-6\" name=\"category\" options={this.state.categoryList} onChange={this.handleChangeCategory} />\n                              </div>\n\n                              <div className=\"form-group row\">\n                                <label for=\"description\" className=\"col-sm-4\">\n                                  <b>Description/Condition</b>\n                                </label>\n                                <input\n                                  name=\"description\"\n                                  className=\"col-sm-6\"\n                                  placeholder=\"Description of book\"\n                                  id=\"description\"\n                                  autoComplete=\"off\"\n                                  value={this.state.description}\n                                  onChange={(e) => this.handleChange(e, e.target.value)}\n                                // onInput={this.maxLengthCheck}\n                                ></input>\n                              </div>\n\n\n                            </form>\n                          </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                          <button\n                            className=\"btn btn-secondary modal-clear\"\n                            data-dismiss=\"modal\"\n                            onClick=\"\"\n                          >\n                            <i class=\"fa fa-times-circle\"></i> Close\n                            </button>\n                          <button\n                            className=\"btn btn-success add-btn\"\n                            onClick={this.addUpdate}\n                            disabled={!this.state.bookTitle || !this.state.description || !this.state.year || !this.state.author || !this.state.categoryList}\n                          >\n                            <i class=\"fa fa-plus mr-1\"></i>\n                            {this.state.button}\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* MODAL DETAIL DATA */}\n\n                  <div\n                    class=\"modal fade\"\n                    id=\"edit\"\n                    tabindex=\"1\"\n                    aria-labelledby=\"editModalLabel\"\n                    aria-hidden=\"true\"\n                    key={this.state.id}\n                  >\n                    <div class=\"modal-dialog modal-lg\">\n                      <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                          <h5 class=\"modal-title\" id=\"editModalLabel\">\n                            Donation\n                          </h5>\n                          <button\n                            type=\"button\"\n                            class=\"close\"\n                            data-dismiss=\"modal\"\n                            aria-label=\"Close\"\n                          >\n                            <span aria-hidden=\"true\">&times;</span>\n                          </button>\n                        </div>\n                        <div class=\"modal-body\">\n                          <div class=\"container\" id=\"demo\">\n                            <div class=\"row justify-content-md-center\">\n                              <img\n                                src={this.state.photo}\n                                height=\"350\"\n                                alt=\"Donation Book\"\n                              />\n                            </div>\n                            <br />\n                            <div class=\"row justify-content-md-center\">\n                              <label\n                                for=\"editTitle\"\n                                class=\"col-sm-1 col-form-label\"\n                              >\n                                Title\n                            </label>\n                              <h5 class=\"col-lg-8 text-center\">\n                                {this.state.bookTitle}\n                              </h5>\n                            </div>\n                            <hr />\n                            <div class=\"row justify-content-md-center\">\n                              <label\n                                for=\"editTitle\"\n                                class=\"col-sm-1 col-form-label\"\n                              >\n                                Author\n                            </label>\n                              <h5 class=\"col-lg-8 text-center\">{this.state.author} </h5>\n                            </div>\n                            <hr />\n                            <div class=\"row justify-content-md-center\">\n                              <label\n                                for=\"editTitle\"\n                                class=\"col-sm-1 col-form-label\"\n                              >\n                                Category\n                            </label>\n                              <h5 class=\"col-lg-8 text-center\">\n                                {this.state.categoryCode}\n                              </h5>\n                            </div>\n                            <hr />\n                            <div class=\"row justify-content-md-center\">\n                              <label\n                                for=\"editTitle\"\n                                class=\"col-sm-1 col-form-label\"\n                              >\n                                Year\n                            </label>\n                              <h5 class=\"col-lg-8 text-center\">{this.state.year}</h5>\n                            </div>\n                            <hr />\n                            <div class=\"row justify-content-md-center\">\n                              <label\n                                for=\"editTitle\"\n                                class=\"col-sm-1 col-form-label\"\n                              >\n                                Condition\n                            </label>\n                              <p class=\"col-lg-8 text-center\">\n                                {this.state.description}\n                              </p>\n                            </div>\n                            <hr />\n                            <div class=\"row justify-content-md-center\">\n                              <label\n                                for=\"editTitle\"\n                                class=\"col-sm-1 col-form-label\"\n                              >\n                                Donatur\n                            </label>\n                              <h5 class=\"col-lg-8 text-center\">{this.state.author}</h5>\n                            </div>\n                            <hr />\n\n                            <div class=\"row justify-content-md-center\">\n                              <label\n                                for=\"editTitle\"\n                                class=\"col-sm-1 col-form-label\"\n                              >\n                                Donation Date\n                            </label>\n                              <h5 class=\"col-lg-8 text-center\">{this.state.donationDate}</h5>\n                            </div>\n                            <hr />\n                            <div class=\"row justify-content-md-center\">\n                              <label\n                                for=\"editTitle\"\n                                class=\"col-sm-1 col-form-label\"\n                              >\n                                Status\n                            </label>\n                              {this.state.status === 3 && <h5 class=\"col-lg-8 text-center\">Rejected</h5>}\n                              {this.state.status === 2 && <h5 class=\"col-lg-8 text-center\">Accepted</h5>}\n                              {this.state.status === 1 && <h5 class=\"col-lg-8 text-center\">Pending</h5>}\n\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n\n\n\n                  {/* modal add data exist*/}\n                  <Modal size=\"lg\" show={showAdd2} onHide={this.handleCloseModal}>\n                    <Modal.Header closeButton>\n                      <Modal.Title>Add Book Data</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                      <div class='container'>\n                        <div class=\"modal-body\">\n                          <form>\n                            <div class=\"form-group row\">\n                              <label for=\"addAuthorCode\" class=\"col-sm-2 col-form-label\">Author Name</label>\n                              <div class=\"col-sm-4 mb-3\">\n                                <Select\n                                  className=\"mb-2\"\n                                  options={this.state.authorList}\n                                  onChange={this.handleChangeSelect1}\n                                />\n                                <Link to=\"/page/manageAuthor\" className=\"btn btn-light\">\n                                  <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more author</small>\n                                </Link>\n                              </div>\n                              <label for=\"addBookDetailCode\" class=\"col-sm-2 col-form-label\">Book Details Info</label>\n                              <div class=\"col-sm-4\">\n                                <Select\n                                  className=\"mb-2\"\n                                  options={this.state.bookDetailList}\n                                  onChange={this.handleChangeSelect2}\n                                />\n                                <Link to=\"/page/manageBookDetail\" className=\"btn btn-light\">\n                                  <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more book details</small>\n                                </Link>\n                              </div>\n                            </div>\n\n                            <div class=\"form-group row\">\n                              <label for=\"addCategoryCode\" class=\"col-sm-2 col-form-label\">Category</label>\n                              <div class=\"col-sm-4 mb-3\">\n                                <Select\n                                  className=\"mb-2\"\n                                  options={this.state.categoryList}\n                                  onChange={this.handleChangeSelect3}\n                                />\n                                <Link to=\"/page/manageCategory\" className=\"btn btn-light\">\n                                  <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more category</small>\n                                </Link>\n                              </div>\n                              <label for=\"addPublisherCode\" class=\"col-sm-2 col-form-label\">Publisher</label>\n                              <div class=\"col-sm-4\">\n                                <Select\n                                  className=\"mb-2\"\n                                  options={this.state.publisherList}\n                                  onChange={this.handleChangeSelect4}\n                                />\n                                <Link to=\"/page/managePublisher\" className=\"btn btn-light\">\n                                  <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more publisher</small>\n                                </Link>\n                              </div>\n                            </div>\n\n                            <div class=\"form-group row\">\n                              <label for=\"addPublishedDate\" class=\"col-sm-2 col-form-label\">Published Date</label>\n                              <div class=\"col-sm-4\">\n                                <DatePicker\n                                  selected={this.state.startDate}\n                                  onChange={this.handleChangeDate}\n                                  dateFormat='yyyy-MM-dd'\n                                />\n                                <br />\n                                <small className=\"text-muted\">(yyyy-MM-dd)</small>\n                              </div>\n                              <label for=\"addIsbn\" class=\"col-sm-2 col-form-label\">ISBN</label>\n                              <div class=\"col-sm-4\">\n                                <input\n                                  type=\"text\"\n                                  name=\"isbn\"\n                                  class=\"form-control\"\n                                  id=\"isbn\"\n                                  placeholder=\"ISBN...\"\n                                  onChange={(e) => this.setState({ isbn: e.target.value })}\n                                  value={this.state.isbn}\n                                  data-attribute-name=\"isbn\"\n                                  data-async\n                                />\n                              </div>\n                            </div>\n\n                          </form>\n                        </div>\n                      </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                      <Button className=\"btn btn-secondary\" variant=\"secondary\" onClick={this.handleCloseModal}>\n                        <i class=\"fa fa-times-circle\"></i> Close\n                        </Button>\n                      <Button id=\"buttonAddBook\" type=\"submit\" className=\"btn btn-success\" variant=\"primary\" onClick={this.handleAddBook2}>\n                        <i class=\"fa fa-plus\"></i> Add\n                        </Button>\n                    </Modal.Footer>\n                  </Modal>\n                  {/* modal add data exist*/}\n\n\n\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ManageDonation;\n","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/SeeMoreBooks/SeeMoreBooks.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/NoBills.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/TopUpBox.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/InstructionsMbank.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/HistoryPayment.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/api.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/DetailPage/detailpage.js",["179","180","181","182","183","184","185","186"],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/BookManagement/bookmanagement.js",["187","188","189","190","191"],"import React, { Component } from 'react';\nimport { Table, Modal, Button } from 'react-bootstrap';\nimport swal from \"sweetalert\";\nimport { Link } from 'react-router-dom';\n//Datatable Modules\nimport 'datatables.net-dt/js/dataTables.dataTables'\nimport 'datatables.net-dt/css/jquery.dataTables.min.css'\nimport 'datatables.net-responsive-dt/js/responsive.dataTables.js'\nimport 'datatables.net-responsive-dt/css/responsive.dataTables.css'\nimport Axios from \"../../Services/axios-instance\";\nimport AuthService from \"../../Services/auth.service\";\nimport $ from 'jquery'; \nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-calendar/dist/Calendar.css';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport Select from 'react-select';\n\nclass BookManagement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      subtitle: \"\",\n      author: \"\",\n      publisherName: \"\",\n      publisherAddress: \"\",\n      description: \"\",\n      category: \"\",\n      numberOfPages: \"\",\n      startDate: new Date(),\n      isbn: \"\",\n      language: \"\",\n\n      nameFileImage : \"\",\n      urlImage: \"\",\n      selectedFiles: \"\",\n      currentFile: \"\",\n\n      data:[],\n      errors: [],\n      editClicked: false,\n      bookCode: \"\",\n      showAddExist: false,\n      showAdd1: false,\n      showAdd2: false,\n      showEdit: false,\n      showDelete: false,\n      authorCode: \"\",\n      bookDetailCode: \"\",\n      categoryCode: \"\",\n      publisherCode: \"\",\n      baseImage: \"\",\n      authorList: \"\",\n      bookDetailList: \"\",\n      categoryList: \"\",\n      publisherList: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    // DATA TABEL\n    try {\n      const res = await Axios.get(`books`);\n      const tabledata = res.data.data;\n\n      this.setState({ \n        data: tabledata,\n        urlImage: AuthService.API_URL() + \"getFile/\" + res.data.data.cover \n      });\n\n      $(function () {\n        $('#bookmanagement').DataTable({\n          responsive: true\n        });\n      });\n\n    } catch (error) {\n      console.log(error);\n    }\n    this.getCategory();\n  }\n\n  handleExistOrNot = () => {\n    this.setState({ showAddExist: true })\n  }\n\n  handleShowAdd = () => {\n    this.setState({ showAddExist: false, showAdd1: true })\n  }\n\n  selectFile = (event) => {\n    this.setState({\n        selectedFiles: event.target.files,\n    });\n    console.log(this.state.selectedFiles)\n  }\n\n  handleAddBook = () => {\n    this.setState({ showAdd2: false });\n\n    const { \n      title,\n      author,\n      publisherName,\n      publisherAddress,\n      category,\n      numberOfPages,\n      isbn,\n      language\n     } = this.state;\n\n    const errors = this.validateForm(\n      title,\n      author,\n      publisherName,\n      publisherAddress,\n      category,\n      numberOfPages,\n      isbn,\n      language);\n\n    if (errors.length > 0) {\n      this.setState({ errors });\n      return;\n    }\n\n    //ngambil inputan\n    let currentFile = this.state.selectedFiles[0];\n    console.log(currentFile);\n        this.setState({\n            currentFile: currentFile,\n        });\n\n    //post file to dir\n    let formData = new FormData();\n    formData.append(\"file\", currentFile);\n    var newFileName = \"_bookCover_\";\n\n    Axios.post(\"uploadFile/\" + newFileName, formData, {\n      headers: {\n          \"Content-Type\": \"multipart/form-data\",\n      }\n    }).then((response) => {\n        console.log(response)\n        this.setState({\n          urlImage: AuthService.API_URL() + \"getFile/\" + newFileName + currentFile.name,\n          nameFileImage : newFileName + currentFile.name\n        });\n\n        //save filename to db\n        Axios.post(\n          `newbooks`,\n          {\n            publisherName: this.state.publisherName,\n            address: this.state.publisherAddress,\n            bookTitle: this.state.title,\n            bookSubtitle: this.state.subtitle,\n            authorName: this.state.author,\n            cover: this.state.nameFileImage,\n            description: this.state.description,\n            categoryName: this.state.category,\n            numberOfPages: this.state.numberOfPages,\n            publishedDate: this.state.startDate,\n            isbn: this.state.isbn,\n            language: this.state.language\n          })\n          .then(() => {\n            this.setState({ \n              showAdd1: false,\n              editClicked: true\n             })\n            swal(\"Success!\", \"Book Has Been Added\", \"success\");\n          })\n          .catch((error) => {\n            swal(\"Oops!\", \"Please check again due to duplication data entry\", \"error\");\n            console.log(error);\n          });\n          this.setState({editClicked:true, showAdd1: false})\n      })\n    }\n\n  handleShowAdd2 = () => {\n    this.setState({ showAddExist: false, showAdd2: true })\n  }\n\n  handleAddBook2 = () => {\n\n    const { \n      authorCode,\n      bookDetailCode,\n      categoryCode,\n      publisherCode,\n      isbn\n     } = this.state;\n\n    const errors = this.validateForm2(\n      authorCode,\n      bookDetailCode,\n      categoryCode,\n      publisherCode,\n      isbn);\n\n    if (errors.length > 0) {\n      this.setState({ errors });\n      return;\n    }\n\n    if (this.state.startDate && this.state.isbn) {\n      this.setState({ showAdd2: false })\n      Axios.post(\n      `book`,\n      {\n        authorCode: this.state.authorCode,\n        bookDetailCode: this.state.bookDetailCode,\n        categoryCode: this.state.categoryCode,\n        publisherCode: this.state.publisherCode,\n        publishedDate: this.state.startDate,\n        isbn: this.state.isbn\n      })\n      .then(() => {\n        this.setState({ \n          showAdd2: false,\n          editClicked: true\n         })\n        swal(\"Success!\", \"Book Has Been Added\", \"success\");\n      })\n      .catch((error) => {\n        swal(\"Oops!\", \"Please try again\", \"error\");\n        console.log(error);\n      });\n    } else {\n      swal(\"Oops!\", \"Data is not valid\", \"error\");\n    }\n  }\n\n  //button edit\n  handleShowEdit = (bkcd) => {\n    this.setState({showEdit: true, bookCode : bkcd})\n    Axios.get(`book/${bkcd}`).then((res) => {\n      let response = res.data.data;\n      let date = moment(response.publishedDate).toDate();\n      this.setState({\n        authorCode: response.authorEntity.authorCode,\n        bookDetailCode: response.bookDetailsEntity.bookDetailCode,\n        categoryCode: response.categoryEntity.categoryCode,\n        publisherCode: response.publisherEntity.publisherCode,\n        startDate: date,\n        isbn: response.isbn,\n        bookCode: response.bookCode\n      });\n    });\n  };\n\n  handleSaveEdit = () => {\n\n    const { \n      authorCode,\n      bookDetailCode,\n      categoryCode,\n      publisherCode,\n      isbn\n     } = this.state;\n\n    const errors = this.validateForm2(\n      authorCode,\n      bookDetailCode,\n      categoryCode,\n      publisherCode,\n      isbn);\n\n    if (errors.length > 0) {\n      this.setState({ errors });\n      return;\n    }\n\n    this.setState({ showEdit: false, })\n\n    Axios.put(\n      `book/${this.state.bookCode}`,\n      {\n        authorCode: this.state.authorCode,\n        bookDetailCode: this.state.bookDetailCode,\n        categoryCode: this.state.categoryCode,\n        publisherCode: this.state.publisherCode,\n        publishedDate: this.state.startDate,\n        isbn: this.state.isbn,\n        bookCode: this.state.bookCode\n      })\n      .then(() => {\n        this.setState({ editClicked: true })\n        swal(\"Great!\", \"Book Has Been edited\", \"success\");\n      })\n      .catch((error) => {\n        swal(\"Oops!\", \"Please try again\", \"error\");\n        console.log(error);\n      });\n  }\n\n  //button delete\n  handleShowDelete = (bkcd) => {\n    this.setState({ showDelete: true, bookCode: bkcd })\n  }\n\n  handleDelete = () => {\n    Axios.delete(`book/${this.state.bookCode}`)\n      .then(()=>window.location.reload())\n    // swal(\"Deleted!\", \"Book Is Successfully Deleted\", \"success\");\n    // this.setState({showDelete: false})\n  }\n\n  // utils\n  handleCloseModal = () => {\n    this.setState({ showAddExist: false, showAdd1: false, showEdit: false, showDelete: false, showAdd2: false,\n      editClicked: true })\n  }\n\n  async getCategory() {\n    const res = await Axios.get('author')\n    const dataAuthor = res.data\n\n    const options1 = dataAuthor.map(d => ({\n      \"value\": d.authorCode,\n      \"label\": d.authorName\n    }))\n    this.setState({ authorList: options1 })\n\n    const res2 = await Axios.get('bookdetails')\n    const dataBookDetail = res2.data.data\n\n    const options2 = dataBookDetail.map(d => ({\n      \"value\": d.bookDetailCode,\n      \"label\": d.bookTitle\n    }))\n    this.setState({ bookDetailList: options2 })\n\n    const res3 = await Axios.get('category')\n    const dataCategory = res3.data\n\n    const options3 = dataCategory.map(d => ({\n      \"value\": d.categoryCode,\n      \"label\": d.categoryName\n    }))\n    this.setState({ categoryList: options3 })\n\n    const res4 = await Axios.get('publisher/active')\n    const dataPublisher = res4.data\n\n    const options4 = dataPublisher.map(d => ({\n      \"value\": d.publisherCode,\n      \"label\": d.publisherName\n    }))\n    this.setState({ publisherList: options4 })\n  }\n\n  handleChangeSelect1 = (e) => {\n    this.setState({ authorCode: e.value });\n  }\n\n  handleChangeSelect2 = (e) => {\n    this.setState({ bookDetailCode: e.value });\n  }\n\n  handleChangeSelect3 = (e) => {\n    this.setState({ categoryCode: e.value });\n  }\n\n  handleChangeSelect4 = (e) => {\n    this.setState({ publisherCode: e.value });\n  }\n\n  handleChange = date => {\n    this.setState({\n      startDate: date\n    });\n  };\n\n  async componentDidUpdate(prevState) {\n    if (this.state.editClicked) {\n      try {\n        const res = await Axios.get(`books`,\n        {\n            headers: {\n              Accept: \"*/*\",\n              \"Content-Type\": \"application/json\",\n            }\n          });\n        const tabledata = res.data.data;\n        this.setState({\n          data: tabledata,\n          editClicked: false,\n          authorCode: \"\",\n          bookDetailCode: \"\",\n          categoryCode: \"\",\n          publisherCode: \"\",\n          publishedDate: \"\",\n\n          title: \"\",\n          subtitle: \"\",\n          author: \"\",\n          publisherName: \"\",\n          publisherAddress: \"\",\n          urlImage: \"\",\n          description: \"\",\n          category: \"\",\n          numberOfPages: \"\",\n          startDate: new Date(),\n          isbn: \"\",\n          language: \"\",\n          errors: [],\n         });\n      } catch (error) {\n        console.log(error);\n      };\n    }\n  }\n\n  validateForm = () => {\n      const errors = [];\n    \n      if (this.state.title.length === 0) {\n        errors.push(\"title can't be empty\");\n      }\n    \n      if (this.state.author.length === 0) {\n        errors.push(\"author can't be empty\");\n      }\n\n      if (this.state.publisherName.length === 0) {\n        errors.push(\"publisher name can't be empty\");\n      }\n\n      if (this.state.publisherAddress.length === 0) {\n        errors.push(\"publisher address can't be empty\");\n      }\n\n      if (this.state.category.length === 0) {\n        errors.push(\"category can't be empty\");\n      }\n\n      if (this.state.numberOfPages.length === 0) {\n        errors.push(\"pages can't be empty\");\n      }\n\n      if (this.state.isbn.length !== 13) {\n        errors.push(\"isbn 13 invalid\");\n      }\n\n      if (this.state.language.length === 0) {\n        errors.push(\"language can't be empty\");\n      }\n    \n      return errors;\n  }\n\n  validateForm2 = () => {\n    const errors = [];\n  \n    if (this.state.authorCode.length === 0) {\n      errors.push(\"author can't be empty\");\n    }\n  \n    if (this.state.bookDetailCode.length === 0) {\n      errors.push(\"book details can't be empty\");\n    }\n\n    if (this.state.publisherCode.length === 0) {\n      errors.push(\"publisher can't be empty\");\n    }\n\n    if (this.state.categoryCode.length === 0) {\n      errors.push(\"category can't be empty\");\n    }\n\n    if (this.state.isbn.length !== 13) {\n      errors.push(\"isbn 13 invalid\");\n    }\n  \n    return errors;\n}\n  \n\n  render() {\n    const { data, showAdd1, showAdd2, showAddExist, showEdit, showDelete, errors } = this.state;\n\n    return (\n      // page content\n      <div className=\"right_col\" role=\"main\" style={{ minHeight: '100vh' }}>\n        <section className=\"mt-5 pt-5\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-12 col-lg-12\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <h3 className=\"card-title\">Book Management</h3>\n                  </div>\n                  <div className=\"card-body\">\n\n\n                    {/* title */}\n                    <div class=\"\">\n                      <Button className=\"mb-5\" variant=\"success\" onClick={this.handleExistOrNot}>\n                        <i class=\"fa fa-plus\"></i> Add Book\n                      </Button>\n                    </div>\n                    {/* title */}\n\n\n                    {/* book management table */}\n                    <Table responsive striped id=\"bookmanagement\" style={{ width: '100%' }}>\n                      <thead>\n                        <tr>\n                          <th>Book Code</th>\n                          <th>Action</th>\n                          <th>Book Title</th>\n                          <th>Author</th>\n                          <th>Categories</th>\n                          <th>Publisher</th>\n                          <th>Published Date</th>\n                          <th>ISBN</th>\n                          <th>Book Cover</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {\n                          data.map((book, index) => {\n                            return (\n                              <tr key={index}>\n                                <td>\n                                  <p>{book.bookCode}</p>\n                                </td>\n                                <td>\n                                  <div class='d-flex justify-content-around mt-4' style={{ border: 'none' }}>\n                                    <button class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#edit\" onClick={() => { this.handleShowEdit(book.bookCode) }}><i\n                                      class=\"fa fa-edit\"></i></button>\n                                    <button class=\"btn btn-danger\" data-toggle=\"modal\" data-target=\"#delete\" onClick={() => { this.handleShowDelete(book.bookCode) }}><i\n                                      class=\"fa fa-trash\"></i></button>\n                                  </div>\n                                </td>\n                                <td>\n                                  {Object.keys(book.bookDetailsEntity ? book.bookDetailsEntity : \"\").map(key => {\n                                    if (key === \"bookTitle\") {\n                                      const judul = (book.bookDetailsEntity[key])\n                                      return judul;\n                                    }\n                                  })}\n                                </td>\n                                <td>\n                                  {Object.keys(book.authorEntity ? book.authorEntity : \"\").map(key => {\n                                    if (key === \"authorName\") {\n                                      const author = (book.authorEntity[key])\n                                      return author;\n                                    }\n                                  })}\n                                </td>\n                                <td>\n                                  {Object.keys(book.categoryEntity ? book.categoryEntity : \"\").map(key => {\n                                    if (key === \"categoryName\") {\n                                      const category = (book.categoryEntity[key])\n                                      return category;\n                                    }\n                                  })}\n                                </td>\n                                <td>\n                                  {Object.keys(book.publisherEntity ? book.publisherEntity : \"\").map(key => {\n                                    if (key === \"publisherName\") {\n                                      const publisher = (book.publisherEntity[key])\n                                      return publisher;\n                                    }\n                                  })}\n                                </td>\n                                <td>\n                                  <Moment format=\"DD/MM/YYYY\">\n                                    {book.publishedDate}\n                                  </Moment>\n                                </td>\n                                <td>\n                                  <p>{book.isbn}</p>\n                                </td>\n                                <td class=\"text-center\">\n                                  {\n                                    Object.keys(book.bookDetailsEntity ? book.bookDetailsEntity : \"\").map(key => {\n                                      if (key === \"cover\") {\n                                        const cover = (book.bookDetailsEntity[key])\n                                        return <img height=\"80\"\n\n\n                                          // JANGAN LUPA DIHAPUS\n                                          src={AuthService.API_URL() + \"getFile/\" + cover}\n                                          // src={cover}\n\n\n                                          alt=\"bookimage\" />\n                                      }\n                                    })\n                                  }\n                                </td>\n                              </tr>\n                            )\n                          })\n                        }\n                      </tbody>\n                    </Table>\n                    {/* book management table */}\n\n\n                    {/* modal if*/}\n                    <Modal size=\"lg\" show={showAddExist} onHide={this.handleCloseModal}>\n                      <Modal.Header closeButton>\n                        <Modal.Title>Add Book Data</Modal.Title>\n                      </Modal.Header>\n                      <Modal.Body>\n                        <p>Does Author, Book details, Category and Publisher information already exist?</p>\n                      </Modal.Body>\n                      <Modal.Footer>\n                        <Button className=\"btn btn-secondary\" variant=\"secondary\" onClick={this.handleShowAdd}>\n                          <i class=\"fa fa-times-circle\"></i> No\n                        </Button>\n                        <Button id=\"buttonAddBook\" type=\"submit\" className=\"btn btn-success\" variant=\"primary\" onClick={this.handleShowAdd2}>\n                          <i class=\"fa fa-plus\"></i> Yes\n                        </Button>\n                      </Modal.Footer>\n                    </Modal>\n                    {/* modal add if*/}\n\n\n                    {/* modal add if data not exist*/}\n                    <Modal size=\"lg\" show={showAdd1} onHide={this.handleCloseModal}>\n                      <Modal.Header closeButton>\n                        <Modal.Title>Add Book Data</Modal.Title>\n                      </Modal.Header>\n                      <Modal.Body>\n                        <div class='container'>\n                          <div class=\"modal-body\">\n                          <form>\n                          {errors.map(error => (\n                            <div>\n                            <label key={error} style={{color:\"red\"}} for=\"titleErr\">Error: {error}</label>\n                            <br/>\n                            </div>\n                          ))}\n                            </form>\n                            <form>\n                              <div class=\"form-group row\">\n                                <label for=\"addTitle\" class=\"col-sm-2 col-form-label\">Title</label>\n                                <div class=\"col-sm-10\">\n                                  <input\n                                    type=\"text\"\n                                    name=\"title\"\n                                    class=\"form-control\"\n                                    id=\"addTitle\"\n                                    placeholder=\"Title...\"\n                                    onChange={(e) => this.setState({ title: e.target.value })}\n                                    value={this.state.title}\n                                    data-attribute-name=\"Title\"\n                                    data-async\n                                  />\n                                </div>\n                              </div>\n                              <div class=\"form-group row\">\n                                <label for=\"addSubtitle\" class=\"col-sm-2 col-form-label\">Subtitle</label>\n                                <div class=\"col-sm-10\">\n                                  <input\n                                    type=\"text\"\n                                    name=\"subtitle\"\n                                    class=\"form-control\"\n                                    id=\"addSubtitle\"\n                                    placeholder=\"Subtitle...\"\n                                    onChange={(e) => this.setState({ subtitle: e.target.value })}\n                                    value={this.state.subtitle}\n                                    data-attribute-name=\"Subtitle\"\n                                    data-async\n                                  />\n                                </div>\n                              </div>\n                              <div class=\"form-group row\">\n                                <label for=\"addAuthor\" class=\"col-sm-2 col-form-label\">Author</label>\n                                <div class=\"col-sm-10\">\n                                  <input\n                                    type=\"text\"\n                                    name=\"author\"\n                                    class=\"form-control\"\n                                    id=\"addAuthor\"\n                                    placeholder=\"Author...\"\n                                    onChange={(e) => this.setState({ author: e.target.value })}\n                                    value={this.state.author}\n                                    data-attribute-name=\"Author\"\n                                    data-async\n                                  />\n                                </div>\n                              </div>\n                              <div class=\"form-group row\">\n                                <label for=\"addPublisher\" class=\"col-sm-2 col-form-label\">Publisher</label>\n                                <div class=\"col-sm-10\">\n                                  <input\n                                    type=\"text\"\n                                    name=\"publisher\"\n                                    class=\"form-control\"\n                                    id=\"addPublisher\"\n                                    placeholder=\"Publisher...\"\n                                    onChange={(e) => this.setState({ publisherName: e.target.value })}\n                                    value={this.state.publisher}\n                                    data-attribute-name=\"Publisher\"\n                                    data-async\n                                  />\n                                </div>\n                              </div>\n                              <div class=\"form-group row\">\n                                <label for=\"addPublisher\" class=\"col-sm-2 col-form-label\">Publisher Address</label>\n                                <div class=\"col-sm-10\">\n                                  <input\n                                    type=\"text\"\n                                    name=\"publisherAddress\"\n                                    class=\"form-control\"\n                                    id=\"addPublisherAddress\"\n                                    placeholder=\"Publisher Adress...\"\n                                    onChange={(e) => this.setState({ publisherAddress: e.target.value })}\n                                    value={this.state.publisherAddress}\n                                    data-attribute-name=\"publisherAddress\"\n                                    data-async\n                                  />\n                                </div>\n                              </div>\n                              <div class=\"form-group row\">\n                                <label for=\"addImage\" class=\"col-sm-2 col-form-label\">Url Image</label>\n                                <div class=\"col-sm-10\">\n                                  <input \n                                    id=\"addBookCover\" \n                                    name=\"bookCover\" \n                                    onChange={this.selectFile} \n                                    type=\"file\" \n                                    class=\"form-control\"\n                                  />\n                                </div>\n                              </div>\n                              <div class=\"form-group row\">\n                                <label for=\"addDesc\" class=\"col-sm-2 col-form-label\">Description</label>\n                                <div class=\"col-sm-10\">\n                                  <input\n                                    type=\"text\"\n                                    name=\"description\"\n                                    class=\"form-control\"\n                                    id=\"addDescription\"\n                                    placeholder=\"Description...\"\n                                    onChange={(e) => this.setState({ description: e.target.value })}\n                                    value={this.state.description}\n                                    data-attribute-name=\"description\"\n                                    data-async\n                                  />\n                                </div>\n                              </div>\n                              <div class=\"form-group row\">\n                                <label for=\"addDesc\" class=\"col-sm-2 col-form-label\">Category</label>\n                                <div class=\"col-sm-10\">\n                                  <input\n                                    type=\"text\"\n                                    name=\"category\"\n                                    class=\"form-control\"\n                                    id=\"addcategory\"\n                                    placeholder=\"Category...\"\n                                    onChange={(e) => this.setState({ category: e.target.value })}\n                                    value={this.state.category}\n                                    data-attribute-name=\"category\"\n                                    data-async\n                                  />\n                                </div>\n                              </div>\n                              <hr />\n                              <div class=\"form-group row\">\n                                <label for=\"addPages\" class=\"col-sm-2 col-form-label\">Number of Pages</label>\n                                <div class=\"col-sm-4\">\n                                <input \n                                  type=\"text\" \n                                  name=\"numberOfPages\"\n                                  class=\"form-control\" \n                                  id=\"addNumberOfPages\" \n                                  placeholder=\"Number of Pages...\" \n                                  onChange={(e) => this.setState({numberOfPages : e.target.value.replace(/\\D/,'')})}\n                                  value={this.state.numberOfPages} \n                                  data-attribute-name=\"numberOfPages\"\n                                  data-async\n                                  />\n                                </div>\n                                <label for=\"addIsbn\" class=\"col-sm-2 col-form-label\">ISBN</label>\n                                <div class=\"col-sm-4\">\n                                <input \n                                  type=\"text\" \n                                  name=\"isbn\"\n                                  class=\"form-control\" \n                                  id=\"isbn\" \n                                  placeholder=\"ISBN...\" \n                                  onChange={(e) => this.setState({isbn : e.target.value.replace(/\\D/,'')})}\n                                  value={this.state.isbn} \n                                  data-attribute-name=\"isbn\"\n                                  data-async\n                                  />\n                                </div>\n                              </div>\n                              <div class=\"form-group row\">\n                                <label for=\"addPublishedDate\" class=\"col-sm-2 col-form-label\">Published Date</label>\n                                <div class=\"col-sm-4\">\n                                  <DatePicker\n                                    selected={this.state.startDate}\n                                    onChange={this.handleChange}\n                                    dateFormat='yyyy-MM-dd'\n                                  />\n                                  <br />\n                                  <small className=\"text-muted\">(yyyy-MM-dd)</small>\n                                </div>\n                                <label for=\"addWeight\" class=\"col-sm-2 col-form-label\">Language</label>\n                                <div class=\"col-sm-4\">\n                                  <input\n                                    type=\"text\"\n                                    name=\"language\"\n                                    class=\"form-control\"\n                                    id=\"language\"\n                                    placeholder=\"Language...\"\n                                    onChange={(e) => this.setState({ language: e.target.value })}\n                                    value={this.state.language}\n                                    data-attribute-name=\"language\"\n                                    data-async\n                                  />\n                                </div>\n                              </div>\n                            </form>\n                          </div>\n                        </div>\n                      </Modal.Body>\n                      <Modal.Footer>\n                        <Button className=\"btn btn-secondary\" variant=\"secondary\" onClick={this.handleCloseModal}>\n                          <i class=\"fa fa-times-circle\"></i> Close\n                        </Button>\n                        <Button id=\"buttonAddBook\" type=\"submit\" className=\"btn btn-success\" variant=\"primary\" onClick={this.handleAddBook}>\n                          <i class=\"fa fa-plus\"></i> Add\n                        </Button>\n                      </Modal.Footer>\n                    </Modal>\n                    {/* modal add if data not exist*/}\n\n\n                    {/* modal add data exist*/}\n                    <Modal size=\"lg\" show={showAdd2} onHide={this.handleCloseModal}>\n                      <Modal.Header closeButton>\n                        <Modal.Title>Add Book Data</Modal.Title>\n                      </Modal.Header>\n                      <Modal.Body>\n                        <div class='container'>\n                          <div class=\"modal-body\">\n                            <form>\n                            {errors.map(error => (\n                              <div>\n                                <label key={error} style={{color:\"red\"}} for=\"titleErr\">Error: {error}</label>\n                                <br/>\n                              </div>\n                            ))}\n                              <div class=\"form-group row\">\n                                <label for=\"addAuthorCode\" class=\"col-sm-2 col-form-label\">Author Name</label>\n                                <div class=\"col-sm-4 mb-3\">\n                                  <Select\n                                    className=\"mb-2\"\n                                    options={this.state.authorList}\n                                    onChange={this.handleChangeSelect1}\n                                  />\n                                  <Link to=\"/page/manageAuthor\" className=\"btn btn-light\">\n                                    <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more author</small>\n                                  </Link>\n                                </div>\n                                <label for=\"addBookDetailCode\" class=\"col-sm-2 col-form-label\">Book Details Info</label>\n                                <div class=\"col-sm-4\">\n                                  <Select\n                                    className=\"mb-2\"\n                                    options={this.state.bookDetailList}\n                                    onChange={this.handleChangeSelect2}\n                                  />\n                                  <Link to=\"/page/manageBookDetail\" className=\"btn btn-light\">\n                                    <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more book details</small>\n                                  </Link>\n                                </div>\n                              </div>\n\n                              <div class=\"form-group row\">\n                                <label for=\"addCategoryCode\" class=\"col-sm-2 col-form-label\">Category</label>\n                                <div class=\"col-sm-4 mb-3\">\n                                  <Select\n                                    className=\"mb-2\"\n                                    options={this.state.categoryList}\n                                    onChange={this.handleChangeSelect3}\n                                  />\n                                  <Link to=\"/page/manageCategory\" className=\"btn btn-light\">\n                                    <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more category</small>\n                                  </Link>\n                                </div>\n                                <label for=\"addPublisherCode\" class=\"col-sm-2 col-form-label\">Publisher</label>\n                                <div class=\"col-sm-4\">\n                                  <Select\n                                    className=\"mb-2\"\n                                    options={this.state.publisherList}\n                                    onChange={this.handleChangeSelect4}\n                                  />\n                                  <Link to=\"/page/managePublisher\" className=\"btn btn-light\">\n                                    <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more publisher</small>\n                                  </Link>\n                                </div>\n                              </div>\n\n                              <div class=\"form-group row\">\n                                <label for=\"addPublishedDate\" class=\"col-sm-2 col-form-label\">Published Date</label>\n                                <div class=\"col-sm-4\">\n                                  <DatePicker\n                                    selected={this.state.startDate}\n                                    onChange={this.handleChange}\n                                    dateFormat='yyyy-MM-dd'\n                                  />\n                                  <br />\n                                  <small className=\"text-muted\">(yyyy-MM-dd)</small>\n                                </div>\n                                <label for=\"addIsbn\" class=\"col-sm-2 col-form-label\">ISBN</label>\n                                <div class=\"col-sm-4\">\n                                  <input\n                                    type=\"text\"\n                                    name=\"isbn\"\n                                    class=\"form-control\"\n                                    id=\"isbn\"\n                                    placeholder=\"ISBN...\"\n                                    onChange={(e) => this.setState({ isbn: e.target.value.replace(/\\D/,'')})}\n                                    value={this.state.isbn}\n                                    data-attribute-name=\"isbn\"\n                                    data-async\n                                  />\n                                </div>\n                              </div>\n\n                            </form>\n                          </div>\n                        </div>\n                      </Modal.Body>\n                      <Modal.Footer>\n                        <Button className=\"btn btn-secondary\" variant=\"secondary\" onClick={this.handleCloseModal}>\n                          <i class=\"fa fa-times-circle\"></i> Close\n                        </Button>\n                        <Button id=\"buttonAddBook\" type=\"submit\" className=\"btn btn-success\" variant=\"primary\" onClick={this.handleAddBook2}>\n                          <i class=\"fa fa-plus\"></i> Add\n                        </Button>\n                      </Modal.Footer>\n                    </Modal>\n                    {/* modal add data exist*/}\n\n\n                    {/* modal edit */}\n                    <Modal size=\"lg\" show={showEdit} onHide={this.handleCloseModal}>\n                      <Modal.Header closeButton>\n                        <Modal.Title>Edit Book Data</Modal.Title>\n                      </Modal.Header>\n                      <Modal.Body>\n                        <div class='container'>\n                          <div class=\"modal-body\">\n                            <form>\n                              {errors.map(error => (\n                                <div>\n                                  <label key={error} style={{color:\"red\"}} for=\"titleErr\">Error: {error}</label>\n                                  <br/>\n                                </div>\n                              ))}\n                              <div class=\"form-group row\">\n                                <label for=\"addAuthorCode\" class=\"col-sm-2 col-form-label\">Author Name</label>\n                                <div class=\"col-sm-4\">\n                                  <Select\n                                    className=\"mb-2\"\n                                    options={this.state.authorList}\n                                    onChange={this.handleChangeSelect1}\n                                  />\n                                  <Link to=\"/page/manageAuthor\" className=\"btn btn-light\">\n                                    <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more author</small>\n                                  </Link>\n                                </div>\n                                <label for=\"addBookDetailCode\" class=\"col-sm-2 col-form-label\">Book Details Info</label>\n                                <div class=\"col-sm-4\">\n                                  <Select\n                                    className=\"mb-2\"\n                                    options={this.state.bookDetailList}\n                                    onChange={this.handleChangeSelect2}\n                                  />\n                                  <Link to=\"/page/manageBookDetail\" className=\"btn btn-light\">\n                                    <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more book details</small>\n                                  </Link>\n                                </div>\n                              </div>\n\n                              <div class=\"form-group row\">\n                                <label for=\"addCategoryCode\" class=\"col-sm-2 col-form-label\">Category</label>\n                                <div class=\"col-sm-4\">\n                                  <Select\n                                    className=\"mb-2\"\n                                    options={this.state.categoryList}\n                                    onChange={this.handleChangeSelect3}\n                                  />\n                                  <Link to=\"/page/manageCategory\" className=\"btn btn-light\">\n                                    <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more category</small>\n                                  </Link>\n                                </div>\n                                <label for=\"addPublisherCode\" class=\"col-sm-2 col-form-label\">Publisher</label>\n                                <div class=\"col-sm-4\">\n                                  <Select\n                                    className=\"mb-2\"\n                                    options={this.state.publisherList}\n                                    onChange={this.handleChangeSelect4}\n                                  />\n                                  <Link to=\"/page/managePublisher\" className=\"btn btn-light\">\n                                    <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more publisher</small>\n                                  </Link>\n                                </div>\n                              </div>\n\n                              <div class=\"form-group row\">\n                                <label for=\"addPublishedDate\" class=\"col-sm-2 col-form-label\">Published Date</label>\n                                <div class=\"col-sm-4\">\n                                  <DatePicker\n                                    selected={this.state.startDate}\n                                    onChange={this.handleChange}\n                                    dateFormat='yyyy-MM-dd'\n                                  />\n                                  <br />\n                                  <small className=\"text-muted\">(yyyy-MM-dd)</small>\n                                </div>\n                                <label for=\"addIsbn\" class=\"col-sm-2 col-form-label\">ISBN</label>\n                                <div class=\"col-sm-4\">\n                                  <input\n                                    type=\"text\"\n                                    name=\"isbn\"\n                                    class=\"form-control\"\n                                    id=\"isbn\"\n                                    placeholder=\"ISBN...\"\n                                    onChange={(e) => this.setState({ isbn: e.target.value.replace(/\\D/,'') })}\n                                    value={this.state.isbn}\n                                    data-attribute-name=\"isbn\"\n                                    data-async\n                                  />\n                                </div>\n                              </div>\n\n                            </form>\n                          </div>\n                        </div>\n                      </Modal.Body>\n                      <Modal.Footer>\n                        <Button className=\"btn btn-secondary\" variant=\"secondary\" onClick={this.handleCloseModal}>\n                          Cancel\n                        </Button>\n                        <Button className=\"btn btn-success\" variant=\"primary\" onClick={this.handleSaveEdit}>\n                          Save\n                        </Button>\n                      </Modal.Footer>\n                    </Modal>\n                    {/* modal edit */}\n\n\n                    {/* modal delete */}\n                    <Modal show={showDelete} onHide={this.handleCloseModal}>\n                      <Modal.Header closeButton>\n                        <Modal.Title>Delete Data</Modal.Title>\n                      </Modal.Header>\n                      <Modal.Body>\n                        <div class='container'>\n                          <p>Are you sure you want to delete book data?</p>\n                        </div>\n                      </Modal.Body>\n                      <Modal.Footer>\n                        <Button className=\"btn btn-secondary\" variant=\"secondary\" onClick={this.handleCloseModal}>\n                          Close\n                        </Button>\n                        <Button className=\"btn btn-warning\" variant=\"primary\" onClick={this.handleDelete}>\n                          Delete\n                        </Button>\n                      </Modal.Footer>\n                    </Modal>\n                    {/* modal delete */}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div >\n        </section >\n      </div >\n    );\n  }\n}\n\nexport default BookManagement;","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/components/Content.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/AllHistory.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Login/Login.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Cart/Cart.js",["192","193","194","195","196"],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Register/Register.js",["197"],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Profile/Profile.js",["198","199","200"],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/DonationUser/index.js",["201"],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/UserManagement/usermanagement.js",["202","203","204","205","206","207","208","209"],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/CategoryManagement/categoryManagement.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/SearchResult/SearchResult.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/CatagoryResult/CategoryResult.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/TopUpBar.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Login/FormErrors.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/components/Footer.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/DonationUser/indexForm.js",["210"],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/PublisherManagement/publishermanagement.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Catalog/Catalog.js",["211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235"],"import React, { Component } from 'react'\nimport axios from \"../../Services/axios-instance\";\nimport { Card, Table, Modal, Form, Row, Col, Badge, Button } from 'react-bootstrap';\nimport swal from \"sweetalert\";\nimport Image from 'react-bootstrap/Image'\nimport './Catalog.css'\nimport AuthService from \"../../Services/auth.service\";\n// Rating\nimport Rating from '@material-ui/lab/Rating';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\n//Datatable Modules\nimport \"datatables.net-dt/js/dataTables.dataTables\"\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\nimport $ from 'jquery';\nimport API from \"../../api\";\nimport api from '../../api';\nimport { Link } from 'react-router-dom';\n\nclass Catalog extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n\n            catalogData: [],\n            detailData: [],\n            reviewData: [],\n            id: \"\",\n            bookCode: \"\",\n            bookTitle: \"\",\n            cover: \"\",\n            authorName: \"\",\n            categoryName: \"\",\n            publisherName: '',\n            isbn: '',\n            language: '',\n            numberOfPages: '',\n            description: '',\n            publishedDate: '',\n            bookSubtitle: '',\n            review: '',\n            rate: \"\",\n            userName: \"\",\n            userCode: \"\",\n            bookDetailsCode: '',\n            catalog: ''\n        }\n\n    };\n\n    componentDidMount() {\n\n        $('.img-book').hover(makeBigger, returnToOriginalSize);\n        function makeBigger() {\n            $(this).css({ width: '+=10%' });\n        }\n        function returnToOriginalSize() {\n            $(this).css({ width: \"-=10%\" });\n        }\n\n        axios.get(\"catalog\").then((e) => {\n            this.setState({ catalogData: e.data.data });\n            console.log(e.data.data[0]);\n\n            $(function () {\n                $('#historyUser').DataTable({\n                    responsive: true\n                });\n            });\n        });\n\n\n    }\n\n    getById(id) {\n        axios.get(`detailBook/${id}`).then((res) => {\n            this.setState({\n                description: res.data.bookDetailsEntity.description,\n                numberOfPages: res.data.bookDetailsEntity.numberOfPages,\n                publishedDate: res.data.publishedDate,\n                language: res.data.bookDetailsEntity.language,\n                publisher: res.data.publisherEntity.publisherName,\n                isbn: res.data.isbn,\n                bookSubtitle: res.data.bookDetailsEntity.bookSubtitle,\n                bookCode: res.data.bookCode,\n                bookDetailsCode: res.data.bookDetailCode,\n            });\n        })\n    }\n\n    setRate(rate) {\n        if (rate == 1) {\n            return <div> <span class=\"fa fa-star checked\"></span>\n                <span class=\"fa fa-star\"></span>\n                <span class=\"fa fa-star \"></span>\n                <span class=\"fa fa-star\"></span>\n                <span class=\"fa fa-star\"></span>\n            </div>\n        } else if (rate == 2) {\n            return <div> <span class=\"fa fa-star checked\"></span>\n                <span class=\"fa fa-star checked\"></span>\n                <span class=\"fa fa-star \"></span>\n                <span class=\"fa fa-star\"></span>\n                <span class=\"fa fa-star\"></span>\n            </div>\n        } else if (rate == 3) {\n            return <div> <span class=\"fa fa-star checked\"></span>\n                <span class=\"fa fa-star checked\"></span>\n                <span class=\"fa fa-star checked\"></span>\n                <span class=\"fa fa-star\"></span>\n                <span class=\"fa fa-star\"></span>\n            </div>\n        } else if (rate == 4) {\n            return <div> <span class=\"fa fa-star checked\"></span>\n                <span class=\"fa fa-star checked\"></span>\n                <span class=\"fa fa-star checked\"></span>\n                <span class=\"fa fa-star checked\"></span>\n                <span class=\"fa fa-star \"></span>\n            </div>\n        } else if (rate == 5) {\n            return <div> <span class=\"fa fa-star checked\"></span>\n                <span class=\"fa fa-star checked\"></span>\n                <span class=\"fa fa-star checked\"></span>\n                <span class=\"fa fa-star checked\"></span>\n                <span class=\"fa fa-star checked\"></span>\n            </div>\n        }\n    }\n\n    handleCart = (bookDetailCode) => {\n        const wishdto = {\n            bookDetailsCode: bookDetailCode,\n            userCode: AuthService.getUserCode()\n        }\n        console.log(wishdto)\n        axios.post('cart', wishdto)\n            .then((response) => {\n                console.log(response);\n                swal(\"Success!\", \"Book Has Been Added To Your Cart\", \"success\").then(function () {\n                    window.location.reload()\n                })\n            }).catch(function (error) {\n                if (error.response) {\n                    console.log(error.response.data);\n                    console.log(error.response.status);\n                    console.log(error.response.headers);\n                } else if (error.request) {\n                    console.log(error.request);\n                } else {\n                    console.log('Error', error.message);\n                }\n            })\n    }\n\n    handleWishlist = (bookDetailCode) => {\n        const wishdto = {\n            bookDetailsCode: bookDetailCode,\n            userCode: AuthService.getUserCode()\n        }\n        console.log(wishdto)\n        axios.post('wishlist', wishdto)\n            .then((response) => {\n                console.log(response);\n                swal(\"Success!\", \"Book Has Been Added To Your Wishlist\", \"success\")\n            }).catch(function (error) {\n                if (error.response) {\n                    console.log(error.response.data);\n                    console.log(error.response.status);\n                    console.log(error.response.headers);\n                } else if (error.request) {\n                    console.log(error.request);\n                } else {\n                    console.log('Error', error.message);\n                }\n            })\n    }\n\n    render() {\n        const { data } = this.state;\n        return (\n            <div className=\"right_col\" role=\"main\" style={{ minHeight: '100vh' }}>\n                <section className=\"mt-5 pt-5\">\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            <div className=\"col-12 col-lg-12\">\n                                <Card>\n                                    <Card.Header>\n                                        <h3>Book Catalog</h3>\n                                    </Card.Header>\n                                    <Card.Body>\n                                        <Table responsive striped id=\"historyUser\" style={{ width: '100%' }}>\n                                            <thead>\n                                                <tr>\n                                                    <th>Book ID</th>\n                                                    <th>Book Title</th>\n                                                    <th>Action</th>\n                                                    <th>Book Cover</th>\n                                                    <th>Author</th>\n                                                    <th>Categories</th>\n                                                    <th>Publisher</th>\n\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {this.state.catalogData.map((user, index) => {\n                                                    return (\n                                                        <tr key={index}>\n                                                            <td>{user.bookCode}</td>\n                                                            <td>{Object.keys(user.bookDetailsEntity ? user.bookDetailsEntity : \"\").map(key => {\n                                                                if (key === \"bookTitle\") {\n                                                                    const judul = (user.bookDetailsEntity[key])\n                                                                    return judul;\n                                                                }\n                                                            })}\n                                                            </td>\n                                                            <td>\n                                                                <span className=\"d-flex justify-content-center\" data-toggle=\"tooltip\" title=\"detail\">\n                                                                    <Link to={{ pathname: `/page/detailpage/${user.bookCode}` }}>\n                                                                        <button className=\"btn btn-primary\">\n                                                                            <i className=\"fa fa-info-circle\"></i>\n                                                                            </button>\n                                                                            </Link>                                                             \n                                                                            \n                                                                            <button className=\"btn btn-warning\" data-toggle=\"modal\" data-target=\"#\">\n                                                                                <i className=\"fa fa-shopping-cart\"></i>\n                                                                            </button>\n                                                                            <button className=\"btn btn-info\" data-toggle=\"modal\" data-target=\"#\">\n                                                                                <i className=\"fa fa-bookmark\"></i>\n                                                                            </button>\n                                                                        </span>\n                                                                    </td>\n                                                                    <td>{Object.keys(user.bookDetailsEntity?user.bookDetailsEntity:\"\").map(key => {\n                                                                        if (key === \"cover\"){\n                                                                            const cover = (user.bookDetailsEntity[key])\n                                                                            return <img className='photoOfOrder text-center card-img-top img-book' src={AuthService.API_URL() + \"getFile/\" + user.bookDetailsEntity.cover} wrapped ui={false} style={{ width: '50%', height: 'auto', marginLeft: '20%' }} />\n                                                                                 \n                                                                        }\n                                                                        })}   \n                                                                    </td>\n                                                                    <td>{Object.keys(user.authorEntity?user.authorEntity:\"\").map(key => {\n                                                                        if (key === \"authorName\"){\n                                                                            const author = (user.authorEntity[key])\n                                                                            return author;\n                                                                        }\n                                                                        })}   \n                                                                    </td>\n                                                                    <td>{Object.keys(user.categoryEntity?user.categoryEntity:\"\").map(key => {\n                                                                        if (key === \"categoryName\"){\n                                                                            const category = (user.categoryEntity[key])\n                                                                            return category;\n                                                                        }\n                                                                        })}   \n                                                                    </td>\n                                                                    <td>{Object.keys(user.publisherEntity?user.publisherEntity:\"\").map(key => {\n                                                                        if (key === \"publisherName\"){\n                                                                            const publisher = (user.publisherEntity[key])\n                                                                            return publisher;\n                                                                        }\n                                                                        })}   \n                                                                    </td>\n                                                                </tr>\n                                                            );\n                                                        })}\n\n                                                </tbody>\n                                        </Table>\n                                    </Card.Body>\n                                </Card>\n                            </div>\n                        </div>\n                    </div >\n                </section >\n\n\n            </div >\n        )\n    }\n}\n\nexport default Catalog","/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Payment/DebitModal.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Services/axios-instance.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Services/auth.service.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Wishlist/Wishlist.js",["236","237","238","239","240"],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/Register/registerAdmin.js",["241"],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/History/History.js",[],"/Users/Todidewantoro/BCA-PKWT/bootcamp/React-Library/src/Screens/AuthorManagement/AuthorManagement.js",[],{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"242","replacedBy":"246"},{"ruleId":"244","replacedBy":"247"},{"ruleId":"242","replacedBy":"248"},{"ruleId":"244","replacedBy":"249"},{"ruleId":"250","severity":1,"message":"251","line":14,"column":13,"nodeType":"252","messageId":"253","endLine":14,"endColumn":16},{"ruleId":"250","severity":1,"message":"254","line":7,"column":8,"nodeType":"252","messageId":"253","endLine":7,"endColumn":13},{"ruleId":"250","severity":1,"message":"255","line":13,"column":8,"nodeType":"252","messageId":"253","endLine":13,"endColumn":13},{"ruleId":"256","severity":1,"message":"257","line":102,"column":65,"nodeType":"258","messageId":"259","endLine":102,"endColumn":67},{"ruleId":"250","severity":1,"message":"260","line":327,"column":9,"nodeType":"252","messageId":"253","endLine":327,"endColumn":13},{"ruleId":"256","severity":1,"message":"261","line":545,"column":76,"nodeType":"258","messageId":"259","endLine":545,"endColumn":78},{"ruleId":"256","severity":1,"message":"261","line":547,"column":76,"nodeType":"258","messageId":"259","endLine":547,"endColumn":78},{"ruleId":"262","severity":1,"message":"263","line":597,"column":47,"nodeType":"264","endLine":597,"endColumn":58},{"ruleId":"262","severity":1,"message":"263","line":653,"column":47,"nodeType":"264","endLine":653,"endColumn":58},{"ruleId":"265","severity":1,"message":"266","line":542,"column":110,"nodeType":"267","messageId":"268","endLine":542,"endColumn":112},{"ruleId":"265","severity":1,"message":"266","line":550,"column":100,"nodeType":"267","messageId":"268","endLine":550,"endColumn":102},{"ruleId":"265","severity":1,"message":"266","line":558,"column":104,"nodeType":"267","messageId":"268","endLine":558,"endColumn":106},{"ruleId":"265","severity":1,"message":"266","line":566,"column":106,"nodeType":"267","messageId":"268","endLine":566,"endColumn":108},{"ruleId":"265","severity":1,"message":"266","line":583,"column":111,"nodeType":"267","messageId":"268","endLine":583,"endColumn":113},{"ruleId":"265","severity":1,"message":"269","line":44,"column":47,"nodeType":"267","messageId":"270","endLine":44,"endColumn":49},{"ruleId":"271","severity":1,"message":"272","line":237,"column":69,"nodeType":"273","endLine":237,"endColumn":194},{"ruleId":"274","severity":1,"message":"275","line":244,"column":69,"nodeType":"273","endLine":244,"endColumn":133},{"ruleId":"274","severity":1,"message":"275","line":256,"column":41,"nodeType":"273","endLine":256,"endColumn":105},{"ruleId":"271","severity":1,"message":"272","line":278,"column":57,"nodeType":"273","endLine":278,"endColumn":202},{"ruleId":"250","severity":1,"message":"276","line":8,"column":8,"nodeType":"252","messageId":"253","endLine":8,"endColumn":19},{"ruleId":"250","severity":1,"message":"255","line":3,"column":8,"nodeType":"252","messageId":"253","endLine":3,"endColumn":13},{"ruleId":"274","severity":1,"message":"275","line":298,"column":65,"nodeType":"273","endLine":298,"endColumn":139},{"ruleId":"256","severity":1,"message":"257","line":344,"column":166,"nodeType":"258","messageId":"259","endLine":344,"endColumn":168},{"ruleId":"277","severity":1,"message":"278","line":35,"column":25,"nodeType":"273","endLine":35,"endColumn":96},{"ruleId":"250","severity":1,"message":"279","line":4,"column":10,"nodeType":"252","messageId":"253","endLine":4,"endColumn":15},{"ruleId":"250","severity":1,"message":"280","line":4,"column":38,"nodeType":"252","messageId":"253","endLine":4,"endColumn":42},{"ruleId":"250","severity":1,"message":"281","line":4,"column":44,"nodeType":"252","messageId":"253","endLine":4,"endColumn":47},{"ruleId":"250","severity":1,"message":"282","line":4,"column":49,"nodeType":"252","messageId":"253","endLine":4,"endColumn":52},{"ruleId":"250","severity":1,"message":"283","line":4,"column":54,"nodeType":"252","messageId":"253","endLine":4,"endColumn":59},{"ruleId":"250","severity":1,"message":"284","line":127,"column":17,"nodeType":"252","messageId":"253","endLine":127,"endColumn":21},{"ruleId":"250","severity":1,"message":"285","line":127,"column":23,"nodeType":"252","messageId":"253","endLine":127,"endColumn":34},{"ruleId":"250","severity":1,"message":"286","line":127,"column":36,"nodeType":"252","messageId":"253","endLine":127,"endColumn":44},{"ruleId":"250","severity":1,"message":"287","line":2,"column":22,"nodeType":"252","messageId":"253","endLine":2,"endColumn":26},{"ruleId":"250","severity":1,"message":"279","line":3,"column":23,"nodeType":"252","messageId":"253","endLine":3,"endColumn":28},{"ruleId":"250","severity":1,"message":"280","line":3,"column":30,"nodeType":"252","messageId":"253","endLine":3,"endColumn":34},{"ruleId":"250","severity":1,"message":"281","line":3,"column":36,"nodeType":"252","messageId":"253","endLine":3,"endColumn":39},{"ruleId":"250","severity":1,"message":"282","line":3,"column":41,"nodeType":"252","messageId":"253","endLine":3,"endColumn":44},{"ruleId":"250","severity":1,"message":"283","line":3,"column":46,"nodeType":"252","messageId":"253","endLine":3,"endColumn":51},{"ruleId":"250","severity":1,"message":"288","line":3,"column":53,"nodeType":"252","messageId":"253","endLine":3,"endColumn":59},{"ruleId":"250","severity":1,"message":"254","line":5,"column":8,"nodeType":"252","messageId":"253","endLine":5,"endColumn":13},{"ruleId":"250","severity":1,"message":"289","line":9,"column":8,"nodeType":"252","messageId":"253","endLine":9,"endColumn":14},{"ruleId":"250","severity":1,"message":"290","line":10,"column":8,"nodeType":"252","messageId":"253","endLine":10,"endColumn":18},{"ruleId":"250","severity":1,"message":"291","line":11,"column":8,"nodeType":"252","messageId":"253","endLine":11,"endColumn":11},{"ruleId":"250","severity":1,"message":"292","line":17,"column":8,"nodeType":"252","messageId":"253","endLine":17,"endColumn":11},{"ruleId":"250","severity":1,"message":"293","line":18,"column":8,"nodeType":"252","messageId":"253","endLine":18,"endColumn":11},{"ruleId":"256","severity":1,"message":"261","line":93,"column":18,"nodeType":"258","messageId":"259","endLine":93,"endColumn":20},{"ruleId":"256","severity":1,"message":"261","line":100,"column":25,"nodeType":"258","messageId":"259","endLine":100,"endColumn":27},{"ruleId":"256","severity":1,"message":"261","line":107,"column":25,"nodeType":"258","messageId":"259","endLine":107,"endColumn":27},{"ruleId":"256","severity":1,"message":"261","line":114,"column":25,"nodeType":"258","messageId":"259","endLine":114,"endColumn":27},{"ruleId":"256","severity":1,"message":"261","line":121,"column":25,"nodeType":"258","messageId":"259","endLine":121,"endColumn":27},{"ruleId":"250","severity":1,"message":"284","line":180,"column":17,"nodeType":"252","messageId":"253","endLine":180,"endColumn":21},{"ruleId":"265","severity":1,"message":"266","line":210,"column":140,"nodeType":"267","messageId":"268","endLine":210,"endColumn":142},{"ruleId":"265","severity":1,"message":"266","line":233,"column":144,"nodeType":"267","messageId":"268","endLine":233,"endColumn":146},{"ruleId":"250","severity":1,"message":"294","line":235,"column":83,"nodeType":"252","messageId":"253","endLine":235,"endColumn":88},{"ruleId":"274","severity":1,"message":"275","line":236,"column":84,"nodeType":"273","endLine":236,"endColumn":301},{"ruleId":"265","severity":1,"message":"266","line":241,"column":134,"nodeType":"267","messageId":"268","endLine":241,"endColumn":136},{"ruleId":"265","severity":1,"message":"266","line":248,"column":138,"nodeType":"267","messageId":"268","endLine":248,"endColumn":140},{"ruleId":"265","severity":1,"message":"266","line":255,"column":140,"nodeType":"267","messageId":"268","endLine":255,"endColumn":142},{"ruleId":"250","severity":1,"message":"255","line":9,"column":8,"nodeType":"252","messageId":"253","endLine":9,"endColumn":13},{"ruleId":"265","severity":1,"message":"269","line":32,"column":47,"nodeType":"267","messageId":"270","endLine":32,"endColumn":49},{"ruleId":"271","severity":1,"message":"272","line":127,"column":69,"nodeType":"273","endLine":128,"endColumn":114},{"ruleId":"271","severity":1,"message":"272","line":130,"column":69,"nodeType":"273","endLine":130,"endColumn":204},{"ruleId":"274","severity":1,"message":"275","line":137,"column":69,"nodeType":"273","endLine":137,"endColumn":133},{"ruleId":"250","severity":1,"message":"276","line":8,"column":8,"nodeType":"252","messageId":"253","endLine":8,"endColumn":19},"no-native-reassign",["295"],"no-negated-in-lhs",["296"],["295"],["296"],["295"],["296"],"no-unused-vars","'get' is defined but never used.","Identifier","unusedVar","'Image' is defined but never used.","'axios' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'edit' is defined but never used.","Expected '===' and instead saw '=='.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'AuthService' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Modal' is defined but never used.","'Form' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Badge' is defined but never used.","'data' is assigned a value but never used.","'showSuspend' is assigned a value but never used.","'showCard' is assigned a value but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'Rating' is defined but never used.","'Typography' is defined but never used.","'Box' is defined but never used.","'API' is defined but never used.","'api' is defined but never used.","'cover' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]