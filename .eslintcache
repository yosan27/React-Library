[{"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Profile\\Profile.js":"1","C:\\Users\\User\\Desktop\\React-Development\\src\\components\\SideBarUser.js":"2","C:\\Users\\User\\Desktop\\React-Development\\src\\components\\Content.js":"3","C:\\Users\\User\\Desktop\\React-Development\\src\\components\\HeaderUser.js":"4","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\CatagoryResult\\CategoryResult.js":"5","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\ProfileUser\\ProfileUser.js":"6","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Register\\registerAdmin.js":"7","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\DetailPage\\detailpage.js":"8","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\SeeMoreBooks\\SeeMoreBooks.js":"9","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\SearchResult\\SearchResult.js":"10","C:\\Users\\User\\Desktop\\React-Development\\src\\App.js":"11","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Cart\\Cart.js":"12","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Wishlist\\Wishlist.js":"13","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Payment\\AllHistory.js":"14","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Catalog\\Catalog.js":"15","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\DonationUser\\index.js":"16","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\UserManagement\\usermanagement.js":"17","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\History\\History.js":"18","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\ManageDonation\\index.js":"19","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\FineManagement\\fineManagement.js":"20","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\CategoryManagement\\categoryManagement.js":"21","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Payment\\TopUpBox.js":"22","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Payment\\InstructionsMbank.js":"23","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Payment\\TopUpBar.js":"24"},{"size":20692,"mtime":1610516984196,"results":"25","hashOfConfig":"26"},{"size":12736,"mtime":1610528565406,"results":"27","hashOfConfig":"26"},{"size":16969,"mtime":1610550703837,"results":"28","hashOfConfig":"26"},{"size":9770,"mtime":1610550540799,"results":"29","hashOfConfig":"26"},{"size":5158,"mtime":1610550530230,"results":"30","hashOfConfig":"26"},{"size":22722,"mtime":1610523131397,"results":"31","hashOfConfig":"26"},{"size":10398,"mtime":1610530593193,"results":"32","hashOfConfig":"26"},{"size":30238,"mtime":1610547855145,"results":"33","hashOfConfig":"26"},{"size":2994,"mtime":1610550224819,"results":"34","hashOfConfig":"26"},{"size":4010,"mtime":1610550324771,"results":"35","hashOfConfig":"26"},{"size":281,"mtime":1609123709684,"results":"36","hashOfConfig":"26"},{"size":14089,"mtime":1610331609547,"results":"37","hashOfConfig":"26"},{"size":7393,"mtime":1610112671820,"results":"38","hashOfConfig":"26"},{"size":3084,"mtime":1610335700427,"results":"39","hashOfConfig":"26"},{"size":12298,"mtime":1610443815317,"results":"40","hashOfConfig":"26"},{"size":1955,"mtime":1609222691681,"results":"41","hashOfConfig":"26"},{"size":17079,"mtime":1610547855146,"results":"42","hashOfConfig":"26"},{"size":14723,"mtime":1610416634753,"results":"43","hashOfConfig":"26"},{"size":29643,"mtime":1610416634753,"results":"44","hashOfConfig":"26"},{"size":17760,"mtime":1610366350217,"results":"45","hashOfConfig":"26"},{"size":11196,"mtime":1610416634753,"results":"46","hashOfConfig":"26"},{"size":1506,"mtime":1609122935710,"results":"47","hashOfConfig":"26"},{"size":5930,"mtime":1609122935708,"results":"48","hashOfConfig":"26"},{"size":1395,"mtime":1610373882192,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"14o26fl",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Profile\\Profile.js",["98","99","100"],"C:\\Users\\User\\Desktop\\React-Development\\src\\components\\SideBarUser.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\components\\Content.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\components\\HeaderUser.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\CatagoryResult\\CategoryResult.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\ProfileUser\\ProfileUser.js",["101","102","103"],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Register\\registerAdmin.js",["104"],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\DetailPage\\detailpage.js",["105","106","107","108","109","110"],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\SeeMoreBooks\\SeeMoreBooks.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\SearchResult\\SearchResult.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\App.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Cart\\Cart.js",["111","112","113","114","115"],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Wishlist\\Wishlist.js",["116","117","118","119","120"],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Payment\\AllHistory.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Catalog\\Catalog.js",["121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146"],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\DonationUser\\index.js",["147"],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\UserManagement\\usermanagement.js",["148","149","150","151","152","153","154","155"],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\History\\History.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\ManageDonation\\index.js",["156"],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\FineManagement\\fineManagement.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\CategoryManagement\\categoryManagement.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Payment\\TopUpBox.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Payment\\InstructionsMbank.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Payment\\TopUpBar.js",[],{"ruleId":"157","severity":1,"message":"158","line":3,"column":8,"nodeType":"159","messageId":"160","endLine":3,"endColumn":13},{"ruleId":"161","severity":1,"message":"162","line":298,"column":65,"nodeType":"163","endLine":298,"endColumn":139},{"ruleId":"164","severity":1,"message":"165","line":344,"column":166,"nodeType":"166","messageId":"167","endLine":344,"endColumn":168},{"ruleId":"157","severity":1,"message":"158","line":3,"column":8,"nodeType":"159","messageId":"160","endLine":3,"endColumn":13},{"ruleId":"161","severity":1,"message":"162","line":316,"column":65,"nodeType":"163","endLine":316,"endColumn":139},{"ruleId":"164","severity":1,"message":"165","line":364,"column":152,"nodeType":"166","messageId":"167","endLine":364,"endColumn":154},{"ruleId":"157","severity":1,"message":"168","line":8,"column":8,"nodeType":"159","messageId":"160","endLine":8,"endColumn":19},{"ruleId":"157","severity":1,"message":"169","line":7,"column":8,"nodeType":"159","messageId":"160","endLine":7,"endColumn":13},{"ruleId":"157","severity":1,"message":"158","line":13,"column":8,"nodeType":"159","messageId":"160","endLine":13,"endColumn":13},{"ruleId":"157","severity":1,"message":"170","line":286,"column":9,"nodeType":"159","messageId":"160","endLine":286,"endColumn":13},{"ruleId":"164","severity":1,"message":"171","line":484,"column":76,"nodeType":"166","messageId":"167","endLine":484,"endColumn":78},{"ruleId":"172","severity":1,"message":"173","line":534,"column":47,"nodeType":"174","endLine":534,"endColumn":58},{"ruleId":"172","severity":1,"message":"173","line":590,"column":47,"nodeType":"174","endLine":590,"endColumn":58},{"ruleId":"175","severity":1,"message":"176","line":44,"column":47,"nodeType":"177","messageId":"178","endLine":44,"endColumn":49},{"ruleId":"179","severity":1,"message":"180","line":237,"column":69,"nodeType":"163","endLine":237,"endColumn":194},{"ruleId":"161","severity":1,"message":"162","line":244,"column":69,"nodeType":"163","endLine":244,"endColumn":133},{"ruleId":"161","severity":1,"message":"162","line":256,"column":41,"nodeType":"163","endLine":256,"endColumn":105},{"ruleId":"179","severity":1,"message":"180","line":278,"column":57,"nodeType":"163","endLine":278,"endColumn":202},{"ruleId":"157","severity":1,"message":"158","line":9,"column":8,"nodeType":"159","messageId":"160","endLine":9,"endColumn":13},{"ruleId":"175","severity":1,"message":"176","line":32,"column":47,"nodeType":"177","messageId":"178","endLine":32,"endColumn":49},{"ruleId":"179","severity":1,"message":"180","line":127,"column":69,"nodeType":"163","endLine":128,"endColumn":114},{"ruleId":"179","severity":1,"message":"180","line":130,"column":69,"nodeType":"163","endLine":130,"endColumn":204},{"ruleId":"161","severity":1,"message":"162","line":137,"column":69,"nodeType":"163","endLine":137,"endColumn":133},{"ruleId":"157","severity":1,"message":"181","line":3,"column":22,"nodeType":"159","messageId":"160","endLine":3,"endColumn":27},{"ruleId":"157","severity":1,"message":"182","line":3,"column":29,"nodeType":"159","messageId":"160","endLine":3,"endColumn":33},{"ruleId":"157","severity":1,"message":"183","line":3,"column":35,"nodeType":"159","messageId":"160","endLine":3,"endColumn":38},{"ruleId":"157","severity":1,"message":"184","line":3,"column":40,"nodeType":"159","messageId":"160","endLine":3,"endColumn":43},{"ruleId":"157","severity":1,"message":"185","line":3,"column":45,"nodeType":"159","messageId":"160","endLine":3,"endColumn":50},{"ruleId":"157","severity":1,"message":"186","line":3,"column":52,"nodeType":"159","messageId":"160","endLine":3,"endColumn":58},{"ruleId":"157","severity":1,"message":"187","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":12},{"ruleId":"157","severity":1,"message":"169","line":5,"column":8,"nodeType":"159","messageId":"160","endLine":5,"endColumn":13},{"ruleId":"157","severity":1,"message":"168","line":7,"column":8,"nodeType":"159","messageId":"160","endLine":7,"endColumn":19},{"ruleId":"157","severity":1,"message":"188","line":9,"column":8,"nodeType":"159","messageId":"160","endLine":9,"endColumn":14},{"ruleId":"157","severity":1,"message":"189","line":10,"column":8,"nodeType":"159","messageId":"160","endLine":10,"endColumn":18},{"ruleId":"157","severity":1,"message":"190","line":11,"column":8,"nodeType":"159","messageId":"160","endLine":11,"endColumn":11},{"ruleId":"157","severity":1,"message":"191","line":17,"column":8,"nodeType":"159","messageId":"160","endLine":17,"endColumn":11},{"ruleId":"157","severity":1,"message":"192","line":18,"column":8,"nodeType":"159","messageId":"160","endLine":18,"endColumn":11},{"ruleId":"164","severity":1,"message":"171","line":90,"column":17,"nodeType":"166","messageId":"167","endLine":90,"endColumn":19},{"ruleId":"164","severity":1,"message":"171","line":97,"column":24,"nodeType":"166","messageId":"167","endLine":97,"endColumn":26},{"ruleId":"164","severity":1,"message":"171","line":104,"column":24,"nodeType":"166","messageId":"167","endLine":104,"endColumn":26},{"ruleId":"164","severity":1,"message":"171","line":111,"column":24,"nodeType":"166","messageId":"167","endLine":111,"endColumn":26},{"ruleId":"164","severity":1,"message":"171","line":118,"column":24,"nodeType":"166","messageId":"167","endLine":118,"endColumn":26},{"ruleId":"157","severity":1,"message":"193","line":129,"column":17,"nodeType":"159","messageId":"160","endLine":129,"endColumn":21},{"ruleId":"175","severity":1,"message":"194","line":159,"column":144,"nodeType":"177","messageId":"195","endLine":159,"endColumn":146},{"ruleId":"175","severity":1,"message":"194","line":182,"column":144,"nodeType":"177","messageId":"195","endLine":182,"endColumn":146},{"ruleId":"161","severity":1,"message":"162","line":185,"column":84,"nodeType":"163","endLine":185,"endColumn":249},{"ruleId":"175","severity":1,"message":"194","line":190,"column":134,"nodeType":"177","messageId":"195","endLine":190,"endColumn":136},{"ruleId":"175","severity":1,"message":"194","line":197,"column":138,"nodeType":"177","messageId":"195","endLine":197,"endColumn":140},{"ruleId":"175","severity":1,"message":"194","line":204,"column":140,"nodeType":"177","messageId":"195","endLine":204,"endColumn":142},{"ruleId":"196","severity":1,"message":"197","line":35,"column":25,"nodeType":"163","endLine":35,"endColumn":96},{"ruleId":"157","severity":1,"message":"181","line":4,"column":10,"nodeType":"159","messageId":"160","endLine":4,"endColumn":15},{"ruleId":"157","severity":1,"message":"182","line":4,"column":38,"nodeType":"159","messageId":"160","endLine":4,"endColumn":42},{"ruleId":"157","severity":1,"message":"183","line":4,"column":44,"nodeType":"159","messageId":"160","endLine":4,"endColumn":47},{"ruleId":"157","severity":1,"message":"184","line":4,"column":49,"nodeType":"159","messageId":"160","endLine":4,"endColumn":52},{"ruleId":"157","severity":1,"message":"185","line":4,"column":54,"nodeType":"159","messageId":"160","endLine":4,"endColumn":59},{"ruleId":"157","severity":1,"message":"193","line":145,"column":17,"nodeType":"159","messageId":"160","endLine":145,"endColumn":21},{"ruleId":"157","severity":1,"message":"198","line":145,"column":23,"nodeType":"159","messageId":"160","endLine":145,"endColumn":34},{"ruleId":"157","severity":1,"message":"199","line":145,"column":36,"nodeType":"159","messageId":"160","endLine":145,"endColumn":44},{"ruleId":"157","severity":1,"message":"200","line":14,"column":13,"nodeType":"159","messageId":"160","endLine":14,"endColumn":16},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'AuthService' is defined but never used.","'Image' is defined but never used.","'edit' is defined but never used.","Expected '===' and instead saw '=='.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Modal' is defined but never used.","'Form' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Badge' is defined but never used.","'Button' is defined but never used.","'swal' is defined but never used.","'Rating' is defined but never used.","'Typography' is defined but never used.","'Box' is defined but never used.","'API' is defined but never used.","'api' is defined but never used.","'data' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'showSuspend' is assigned a value but never used.","'showCard' is assigned a value but never used.","'get' is defined but never used."]   aria-controls=\"vert-tabs-password\" aria-selected=\"false\">Change\r\n                                                        Password</a>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-12 col-lg-9 mt-4 mt-lg-1\">\r\n                                                <div className=\"tab-content\" id=\"vert-tabs-tabContent\">\r\n                                                    <div className=\"tab-pane text-left fade active show\" id=\"vert-tabs-home\"\r\n                                                        role=\"tabpanel\" aria-labelledby=\"vert-tabs-home-tab\">\r\n                                                        {/* <form className=\"form-horizontal\"\r\n                                                            encType=\"multipart/form-data\"> */}\r\n                                                        <div className=\"form-group row\">\r\n                                                            <label htmlFor=\"id\"\r\n                                                                className=\"col-sm-2 col-form-label\">User ID</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input type=\"text\" name=\"id\" className=\"form-control\"\r\n                                                                    id=\"id\" placeholder=\"masukan id...\" value={this.state.userCode}\r\n                                                                    readOnly />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group row\">\r\n                                                            <label htmlFor=\"nama\"\r\n                                                                className=\"col-sm-2 col-form-label\">Name</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input type=\"text\" className=\"form-control\" id=\"nama\"\r\n                                                                    name=\"nama\" value={this.state.fullName} readOnly />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group row\">\r\n                                                            <label htmlFor=\"email\"\r\n                                                                className=\"col-sm-2 col-form-label\">Email</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input type=\"text\" name=\"email\" className=\"form-control\"\r\n                                                                    id=\"email\" placeholder=\"masukan email...\"\r\n                                                                    value={this.state.email} readOnly />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group row\">\r\n                                                            <label htmlFor=\"username\"\r\n                                                                className=\"col-sm-2 col-form-label\">Username</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input type=\"text\" name=\"username\"\r\n                                                                    className=\"form-control\" id=\"username\"\r\n                                                                    placeholder=\"masukan username...\" value={this.state.username} readOnly />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\" form-group row\">\r\n                                                            <label htmlFor=\"phone\" className=\"col-sm-2 col-form-label\">Phone</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input type=\"number\" name=\"phone\" className=\"form-control\"\r\n                                                                    id=\"phone\" value={this.state.phone} onChange={this.userChange} />\r\n                                                                <small className=\"text-danger\">\r\n                                                                    {this.state.notNullPhone}\r\n                                                                    {!this.state.phone ? '- not null -' : \"\"}\r\n                                                                </small>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\" form-group row\">\r\n                                                            <label htmlFor=\"address\" className=\"col-sm-2 col-form-label\">Address</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" name=\"address\" rows=\"3\" value={this.state.address} onChange={this.userChange}></textarea>\r\n                                                                <small className=\"text-danger\">\r\n                                                                    {!this.state.address ? '- not null -' : \"\"}\r\n                                                                </small>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n\r\n                                                        <div className=\"form-group row\">\r\n                                                            <label htmlFor=\"inputEmail3\"\r\n                                                                className=\"col-sm-2 col-form-label\">Profile\r\n                                                                    Picture</label>\r\n                                                            <div className=\"col-sm-2\">\r\n                                                                <img src={this.state.profilePict} className=\"img-thumbnail img-preview\" />\r\n                                                            </div>\r\n                                                            <div className=\"col-sm-8\">\r\n                                                                <div className=\"custom-file\">\r\n                                                                    <input id=\"foto\" name=\"foto\" onChange={this.selectFile} type=\"file\" className=\"custom-file-input\" />\r\n                                                                    <label className=\"custom-file-label\"\r\n                                                                        htmlFor=\"foto\">Choose file</label>\r\n                                                                </div>\r\n                                                                <small>*format gambar berupa .jpg dengan ukuran\r\n                                                                        maksimal 1MB</small>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <br />\r\n                                                        <div className=\"form-group\">\r\n                                                            <button disabled={!this.state.phone || !this.state.address || this.state.phone.length < 12}\r\n                                                                className=\"btn btn-primary btn-block\" onClick={() => this.updateBtn(this.state.id)}>Update</button>\r\n                                                        </div>\r\n                                                        {/* </form> */}\r\n                                                    </div>\r\n\r\n                                                    <div className=\"tab-pane fade\" id=\"vert-tabs-password\" role=\"tabpanel\"\r\n                                                        aria-labelledby=\"vert-tabs-password-tab\">\r\n                                                        {/* <form> */}\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"password1\" className=\"\">\r\n                                                                    New Password\r\n                                                                </label>\r\n                                                                <input type=\"password\" onChange={(e) => this.cekPass1(e.target.value)} value={this.state.password} name=\"password\" required\r\n                                                                    autoComplete=\"off\" id=\"password1\"\r\n                                                                    className=\"form-control simm-inv\" />\r\n                                                                <small className=\"text-danger\">\r\n                                                                    {this.state.password.length < 8 ? '- minimal 8 digit -' : \"\"}\r\n                                                                </small>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"password2\" className=\"\">Confirm\r\n                                                                    Password</label><br />\r\n                                                                <input onChange={(e) => this.cekPass2(e.target.value)} type=\"password\" value={this.state.password2} name=\"password_confirm\"\r\n                                                                    required autoComplete=\"off\" id=\"password2\"\r\n                                                                    className=\"form-control simm-inv\" />\r\n                                                                <small id=\"passmatch\" style={{ display: 'none' }}><i\r\n                                                                    id=\"pwmatch\" className=\"fa fa-close\"\r\n                                                                    style={{ color: '#FF0004' }}></i> Passwords\r\n                                                                    Match</small>\r\n                                                            </div>\r\n                                                            <br />\r\n                                                            <div className=\"form-group\">\r\n                                                                <button id=\"btn-save\" disabled={this.state.password.length < 8 || this.state.password2 != this.state.password}\r\n                                                                    className=\"btn btn-primary btn-block\" onClick={() => this.updatePassword(this.state.id)}>Change</button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        {/* </form> */}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div >\r\n                </section >\r\n            </div >\r\n        )\r\n    }\r\n}","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Register\\registerAdmin.js",["113"],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\DetailPage\\detailpage.js",["114","115","116","117","118","119"],"import React, { Component } from 'react'\r\nimport { Container, Jumbotron, Modal, Button } from 'react-bootstrap'\r\n// import API from \"../../api\";\r\nimport './detailpage.css'\r\nimport swal from 'sweetalert';\r\nimport Moment from 'react-moment';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Box from '@material-ui/core/Box';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Axios from \"../../Services/axios-instance\";\r\nimport AuthService from \"../../Services/auth.service\";\r\nimport axios from 'axios';\r\n\r\nclass DetailPage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editClicked: false,\r\n      bookDetailsCode: '',\r\n      heart: '\\u2661',\r\n      bookData: '',\r\n      imageAvailable: false,\r\n      bookAvailable: '',\r\n      title: '',\r\n      publishedDate: '',\r\n      subtitle: '',\r\n      author: '',\r\n      category: '',\r\n      categoryCode: '',\r\n      show: false,\r\n      register: '',\r\n      pages: '',\r\n      descriptions: '',\r\n      reviewData: [],\r\n      rate: '',\r\n      review: '',\r\n      date: '',\r\n      userCode: '',\r\n      id: '',\r\n      bookCode: this.props.match.params.bookcode,\r\n      popular: [],\r\n      errors: []\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      // const  { bookCode } = this.props.location.state;\r\n      const res = await Axios.get(`book/` + this.state.bookCode);\r\n      const bookData = res.data.data;\r\n      const bookDataImage = bookData.bookDetailsEntity.cover\r\n\r\n    //   if (bookData.id) {\r\n    //     this.setState({ bookAvailable: 'Available' });\r\n    //   } else {\r\n    //     this.setState({ bookAvailable: 'Not Available' });\r\n    //   }\r\n\r\n      if (bookData.bookDetailsEntity.bookSubtitle !== undefined) {\r\n        this.setState({ subtitle: bookData.bookDetailsEntity.bookSubtitle });\r\n      }\r\n\r\n      this.setState({ bookData: bookData });\r\n      this.setState({ register: bookData.bookCode });\r\n      this.setState({ bookDetailsCode: bookData.bookDetailsEntity.bookDetailCode });\r\n      this.setState({ title: bookData.bookDetailsEntity.bookTitle });\r\n      this.setState({ category: bookData.categoryEntity.categoryName });\r\n      this.setState({ categoryCode: bookData.categoryEntity.categoryCode });\r\n      this.setState({ publishedDate: bookData.publishedDate });\r\n      this.setState({ author: bookData.authorEntity.authorName });\r\n      this.setState({ pages: bookData.bookDetailsEntity.numberOfPages });\r\n      this.setState({ bookDataImage: bookDataImage })\r\n      this.setState({ descriptions: bookData.bookDetailsEntity.description })\r\n      console.log(this.state.categoryCode)\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    Axios.get(`popular/` + this.state.categoryCode).then((res) => {\r\n      const popular = res.data.data;\r\n      const popularWithoutCurrent = popular.filter((word) => word.bookCode !== this.state.bookCode);\r\n        this.setState({ popular: popularWithoutCurrent })\r\n    })\r\n\r\n      window.focus();\r\n      window.scrollBy({\r\n        top: 0,\r\n        left: 270,\r\n        behavior: 'smooth'\r\n      });\r\n  }\r\n\r\n  handleWishlist = () => {\r\n    const wishdto = {\r\n      bookDetailsCode: this.state.bookDetailsCode,\r\n      userCode: AuthService.getUserCode()\r\n    }\r\n    console.log(wishdto)\r\n    Axios.post('wishlist', wishdto)\r\n      .then((response) => {\r\n        console.log(response);\r\n        swal(\"Success!\", \"Book Has Been Added To Your Wishlist\", \"success\")\r\n      }).catch(function (error) {\r\n        if (error.response) {\r\n          console.log(error.response.data);\r\n          console.log(error.response.status);\r\n          console.log(error.response.headers);\r\n        } else if (error.request) {\r\n          console.log(error.request);\r\n        } else {\r\n          console.log('Error', error.message);\r\n        }\r\n      })\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ show: false })\r\n  }\r\n\r\n  handleCart = () => {\r\n    this.setState({ show: false })\r\n    const wishdto = {\r\n      bookDetailsCode: this.state.bookDetailsCode,\r\n      userCode: AuthService.getUserCode()\r\n    }\r\n    console.log(wishdto)\r\n    Axios.post('cart', wishdto)\r\n      .then((response) => {\r\n        console.log(response);\r\n        swal(\"Success!\", \"Book Has Been Added To Your Cart\", \"success\")\r\n        window.location.reload()\r\n      }).catch(function (error) {\r\n        if (error.response) {\r\n          console.log(error.response.data);\r\n          console.log(error.response.status);\r\n          console.log(error.response.headers);\r\n        } else if (error.request) {\r\n          console.log(error.request);\r\n        } else {\r\n          console.log('Error', error.message);\r\n        }\r\n      })\r\n  }\r\n\r\n  handleShow = () => {\r\n    this.setState({ show: true })\r\n  }\r\n\r\n  handlePopClick = (bkcd) => {\r\n    this.setState({ bookCode: bkcd, editClicked : true });\r\n  }\r\n\r\n  review = (bkcd) => {\r\n    Axios.get(`reviewLook/${bkcd}`).then((res) => {\r\n      this.setState({ reviewData: res.data });   \r\n      console.log(res.data)   \r\n    })\r\n  }\r\n\r\n  changeReviewHandler = (e) => {\r\n    this.setState({review: e.target.value})\r\n  }\r\n\r\n  changeRateHandler = (e) => {\r\n    this.setState({rate: e.target.value})\r\n  }\r\n\r\n  handlePostReview = () => {\r\n    let reviewData = {\r\n      userCode: AuthService.getUserCode(),\r\n      rate: this.state.rate,\r\n      review: this.state.review,\r\n      bookDetailCode: this.state.bookDetailsCode\r\n    }\r\n    Axios.post('review', reviewData).then(() => {\r\n      swal(\"Success!\", \"Review Data Has Been Added\", \"success\").then(() => {\r\n        window.location.reload()  \r\n    })\r\n    }) \r\n    .catch((error) => {\r\n      swal(\"Oops!\", \"Please try again\", \"error\");\r\n    })\r\n\r\n  }\r\n\r\n  handlePutReview = (e) => {\r\n        let edit ={\r\n          review: this.state.review,\r\n          rate: this.state.rate,\r\n          bookDetailCode: this.state.bookDetailsCode,\r\n          userCode: AuthService.getUserCode()\r\n        }\r\n        Axios.put(`review/${this.state.id}`, edit).then((e) => {\r\n          swal(\"Success!\", \"Review Data Has Been Added\", \"success\").then(() => {\r\n            window.location.reload()  \r\n        })\r\n        })\r\n        \r\n  }\r\n\r\n  getById(id) {\r\n    Axios.get(`review/${id}`).then((res) => {\r\n      this.setState({\r\n        id: res.data.id\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  async componentDidUpdate(prevState) {\r\n    if (this.state.editClicked) {\r\n      try {\r\n        const res = await Axios.get(`book/` + this.state.bookCode);\r\n        const bookData = res.data.data;\r\n        const bookDataImage = bookData.bookDetailsEntity.cover\r\n        this.setState({ \r\n          bookData: bookData,\r\n          register: bookData.bookCode,\r\n          bookDetailsCode: bookData.bookDetailsEntity.bookDetailCode, \r\n          title: bookData.bookDetailsEntity.bookTitle,\r\n          subtitle: bookData.bookDetailsEntity.bookSubtitle,\r\n          category: bookData.categoryEntity.categoryName,\r\n          categoryCode: bookData.categoryEntity.categoryCode,\r\n          publishedDate: bookData.publishedDate,\r\n          author: bookData.authorEntity.authorName,\r\n          pages: bookData.bookDetailsEntity.numberOfPages,\r\n          bookDataImage: bookDataImage,\r\n          descriptions: bookData.bookDetailsEntity.description\r\n        });\r\n\r\n        Axios.get(`popular/` + this.state.categoryCode).then((res) => {\r\n          const popular = res.data.data;\r\n          const popularWithoutCurrent = popular.filter((word) => word.bookCode !== this.state.bookCode);\r\n            this.setState({ popular: popularWithoutCurrent, editClicked: false })\r\n        });\r\n\r\n      } catch (error) {\r\n        console.log(error);\r\n      }; \r\n    }\r\n  }\r\n    \r\n  setRate(rate) {\r\n    if(rate === 1) {\r\n        return <div> <span class=\"fa fa-star checked\"></span>\r\n        <span class=\"fa fa-star\"></span>\r\n        <span class=\"fa fa-star \"></span>\r\n        <span class=\"fa fa-star\"></span>\r\n        <span class=\"fa fa-star\"></span>\r\n        </div>\r\n    } else if(rate === 2) {\r\n        return <div> <span class=\"fa fa-star checked\"></span>\r\n        <span class=\"fa fa-star checked\"></span>\r\n        <span class=\"fa fa-star \"></span>\r\n        <span class=\"fa fa-star\"></span>\r\n        <span class=\"fa fa-star\"></span>\r\n        </div>\r\n    } else if(rate === 3) {\r\n        return <div> <span class=\"fa fa-star checked\"></span>\r\n        <span class=\"fa fa-star checked\"></span>\r\n        <span class=\"fa fa-star checked\"></span>\r\n        <span class=\"fa fa-star\"></span>\r\n        <span class=\"fa fa-star\"></span>\r\n        </div>\r\n    } else if(rate === 4) {\r\n        return <div> <span class=\"fa fa-star checked\"></span>\r\n        <span class=\"fa fa-star checked\"></span>\r\n        <span class=\"fa fa-star checked\"></span>\r\n        <span class=\"fa fa-star checked\"></span>\r\n        <span class=\"fa fa-star \"></span>\r\n        </div>\r\n    } else if(rate === 5) {\r\n        return <div> <span class=\"fa fa-star checked\"></span>\r\n        <span class=\"fa fa-star checked\"></span>\r\n        <span class=\"fa fa-star checked\"></span>\r\n        <span class=\"fa fa-star checked\"></span>\r\n        <span class=\"fa fa-star checked\"></span>\r\n        </div>\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { popular, bookData, register, bookDataImage, bookAvailable, title, subtitle, author, category, publishedDate, show, pages, descriptions } = this.state;\r\n    let edit;\r\n    return (\r\n      <div className=\"right_col\" role=\"main\" style={{ minHeight: '100vh' }}>\r\n        <section className=\"mt-5 pt-5\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12 col-lg-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <h3 className=\"card-title\">Details</h3>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    {/* banner */}\r\n                    <Jumbotron className=\"bannerDetail\"\r\n                      style={{ backgroundImage: `url(${(!!bookData && !!bookDataImage) ? bookDataImage : \"/assets/images/cover.png\"})` }}\r\n                      fluid>\r\n                      <Container>\r\n                      </Container>\r\n                    </Jumbotron>\r\n\r\n                    {/* Main Content */}\r\n                    <div className='container'>\r\n                      <div className='container absolute'>\r\n                        {/* info atas */}\r\n                        <div className=\"row description\">\r\n                          <div className=\"col-lg col-sm-4 text-center align-self-center\">\r\n                            <button id='bookCategories' type=\"button\" className=\"btn btn-warning novel mb-3\">{category}</button>\r\n                            <h1 id='bookTitle' className=\"text-uppercase mb-3\">{title}</h1>\r\n                            <p id='publishedAt' className='mb-3'>\r\n                              <Moment format=\"DD/MM/YYYY\">\r\n                                {publishedDate}\r\n                              </Moment>\r\n                            </p>\r\n                            <button id='bookWishlist' type=\"button\" className=\"btn btn-outline-dark mb-3\" onClick={this.handleWishlist}>\r\n                              <i class=\"fa fa-heart\" ></i>\r\n                            </button>\r\n                          </div>\r\n                          <div className=\"col-lg col-sm-4 text-center align-self-center\">\r\n                            <h4 id='isAvailable' className=\"text-success\">{bookAvailable}</h4>\r\n                          </div>\r\n                          <div className=\"col-lg col-sm-4 text-center align-self-center\">\r\n                            <img id='bookCover'\r\n                              src={bookDataImage ? bookDataImage : \"/assets/images/cover.png\"}\r\n                              alt=\"cover\" className=\"rounded novel\" />\r\n                          </div>\r\n                        </div>\r\n                        {/* info atas */}\r\n\r\n                        {/* info bawah */}\r\n                        {/* Descriptions & most popular */}\r\n                        <div class=\"row mt-5\">\r\n                          {/* Description */}\r\n                          <div class=\"col-lg-8\">\r\n                            <h5 class='pb-2'>Descriptions</h5>\r\n                            <hr style={{ border: \"5% solid  #f1f1f1\" }}></hr>\r\n                            <h5><b id='bookSubtitle'>{subtitle?subtitle:title}</b></h5>\r\n                            <p>- {author}</p>\r\n                            <div class=\" mb-5 text-justify\">\r\n                              <p id='bookDescriptionHead'>\r\n                                {descriptions}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                          {/* Description */}\r\n\r\n                          {/* most popular */}\r\n                          <div class=\"col-lg-3\">\r\n                            <h5 class='pb-2 text-center'>Popular {category} books</h5>\r\n                            <hr />\r\n\r\n                            {/* popular */}\r\n                            {\r\n                            popular.map((pop, index) => {\r\n                              return (\r\n                                  <Button \r\n                                    id=\"pop\"\r\n                                    className=\"ml-4\"\r\n                                    style={{\r\n                                      backgroundColor: \"Transparent\",\r\n                                      color: \"#000\",\r\n                                      border: \"none\",\r\n                                      cursor: \"pointer\"}}\r\n                                    onClick = { ()=> {this.handlePopClick(pop.bookCode)}}\r\n                                  >\r\n                                    <div class=\"row\">\r\n                                      <div class=\"col text-right pt-2\">\r\n                                        <img rounded height=\"80\" src={pop.bookDetailsEntity.cover} alt=\"\"/>\r\n                                      </div>\r\n                                      <div\r\n                                        class=\"col\"\r\n                                        style={{ display: 'flex', flexWrap: 'wrap', alignContent: 'center' }}>\r\n                                        <div>\r\n                                          <h6 class=\"mb-0 \">{pop.bookDetailsEntity.bookTitle}</h6>\r\n                                          <h6 class=\"mb-0 \">- {pop.authorEntity.authorName}</h6>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </Button>\r\n                                )\r\n                              })\r\n                            } \r\n                            {/* popular */}\r\n\r\n                            {/* button borrow */}\r\n                            <div className=\"text-center mt-5\">\r\n                              <Button className=\"btn btn-warning borrow\" variant=\"primary\" onClick={this.handleShow}>\r\n                                Borrow\r\n                              </Button>\r\n                              <button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#review\" onClick={() => this.review(this.state.bookDetailsCode)} >\r\n                                   Review\r\n                                </button>\r\n                            </div>\r\n                            {/* button borrow */}\r\n                          </div>\r\n                          {/* most popular */}\r\n                        </div>\r\n                        {/* Descriptions & most popular */}\r\n                        {/* info bawah */}\r\n                      </div>\r\n                    </div>\r\n                    {/* Main Content */}\r\n\r\n                    {/* modal borrow */}\r\n                    <Modal show={show} onHide={this.handleClose}>\r\n                      <Modal.Header closeButton>\r\n                        <Modal.Title>Book Loan Form</Modal.Title>\r\n                      </Modal.Header>\r\n                      <Modal.Body>\r\n                        <div class='container'>\r\n                          <div class=\"row-lg\">\r\n                            <div class=\"col-6-lg d-flex justify-content-center align-items-center\">\r\n                              <img class=\"rounded novel\" src={bookDataImage ? bookDataImage : 'https://res.cloudinary.com/todidewantoro/image/upload/v1604943658/bootcamp/covernya_ejy4v1.jpg'} alt=\"\"/>\r\n                            </div>\r\n                            <div\r\n                              className='container'>\r\n                              <div class=\"col-6-lg mt-3 justify-content-start\">\r\n                                <div>\r\n                                  <div class=\"row\">\r\n                                    <div class=\"col-5\">Register</div>\r\n                                    <div class=\"col-2\">:</div>\r\n                                    <div class=\"col-5\">{register}</div>\r\n                                  </div>\r\n                                  <div class=\"row\">\r\n                                    <div class=\"col-5\">Title</div>\r\n                                    <div class=\"col-2\">:</div>\r\n                                    <div class=\"col-5\">{title}</div>\r\n                                  </div>\r\n                                  <div class=\"row\">\r\n                                    <div class=\"col-5\">Author</div>\r\n                                    <div class=\"col-2\">:</div>\r\n                                    <div class=\"col-5\">{author}</div>\r\n                                  </div>\r\n                                  <div class=\"row\">\r\n                                    <div class=\"col-5\">Pages</div>\r\n                                    <div class=\"col-2\">:</div>\r\n                                    <div class=\"col-5\">{pages}</div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Modal.Body>\r\n                      <Modal.Footer>\r\n                        <Button className=\"btn btn-secondary\" variant=\"secondary\" onClick={this.handleClose}>\r\n                          <i class=\"fa fa-times-circle\"></i> Close\r\n                        </Button>\r\n                        <Button className=\"btn btn-success\" variant=\"primary\" onClick={this.handleCart}>\r\n                          <i class=\"fa fa-plus\"></i> Cart\r\n                        </Button>\r\n                      </Modal.Footer>\r\n                    </Modal>\r\n                    {/* modal borrow */}\r\n                    {/* modal look review*/}\r\n                    <div className=\"modal fade\" id=\"review\" tabIndex=\"-1\" aria-labelledby=\"infoLabel\" aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog\">\r\n                            <div className=\"modal-content\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"infoLabel\">Info Review</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                    <div className=\"modal-body\">\r\n                                    {this.state.reviewData.map((book, index) => {\r\n                                    return(\r\n                                        <form key={index}>\r\n                                                <div class=\"form-group row\">\r\n                                                <label for=\"editImage\" class=\"col-sm-3 col-form-label\">By {book.userEntity.userName}              \r\n                                                <br />       \r\n                                                {this.setRate(book.rate)} \r\n                                               \r\n                                                </label>\r\n                                                <div class=\"col-sm-7\" >\r\n                                                    {book.review}\r\n                                                </div>\r\n                                                <div class=\"col-sm-2\" >\r\n                                               \r\n                                                { book.userEntity.userCode == AuthService.getUserCode()? <button type=\"button\" className=\"btn-sm btn-secondary\" data-toggle=\"modal\" data-target=\"#reviewEdit\" onClick={() => this.getById(book.id)}>Edit</button>\r\n                                                : <p></p>}\r\n                                            \r\n                                                </div>\r\n                                                </div>\r\n                                                <hr />\r\n                                        </form>   \r\n                                        );\r\n                                    })}  \r\n                                        </div>\r\n                                    \r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    <button className=\"btn btn-primary btn-sm rounded-sm w-30 mr-1\" data-toggle=\"modal\" data-target=\"#reviewAdd\">\r\n                                        <i className=\"fa fa-edit\"></i>Add Review\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>                                           \r\n                    {/* Modal look review */}\r\n                    {/* Modal create review */}\r\n                    <div className=\"modal fade\" id=\"reviewAdd\" tabIndex=\"-1\" aria-labelledby=\"addLabel\" aria-hidden=\"true\">\r\n                          <div className=\"modal-dialog\">\r\n                              <div className=\"modal-content\">\r\n                                  <div className=\"modal-header\">\r\n                                      <h5 className=\"modal-title\" id=\"addLabel\">Add Review</h5>\r\n                                      <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                          <span aria-hidden=\"true\" className=\"modal-clear\">&times;</span>\r\n                                      </button>\r\n                                  </div>\r\n                                  <div className=\"modal-body\">\r\n                                      <form>\r\n                                      <div class=\"form-group row\">\r\n                                          <div class=\"col-sm-12 text-center\">\r\n                                          <img class=\"rounded novel\" src={bookDataImage ? bookDataImage : 'https://res.cloudinary.com/todidewantoro/image/upload/v1604943658/bootcamp/covernya_ejy4v1.jpg'} alt=\"\"/>\r\n                                          </div>\r\n                                      </div>\r\n                                      <div className=\"form-group row\">\r\n                                          <div className=\"col-sm-9\">\r\n                                              <input type=\"hidden\" className=\"form-control input\" name=\"bookDetailsCode\" readOnly\r\n                                              value={this.state.bookDetailsCode} />\r\n                                          </div>\r\n                                      </div>\r\n                                    <div class=\"form-group row\">\r\n                                          <label for=\"rating\" class=\"col-sm-2 col-form-label\">Rating</label>\r\n                                          <div class=\"col-sm-10\">\r\n                                          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n                                              <Rating\r\n                                              name=\"simple-controlled\"\r\n                                              name=\"rate\"\r\n                                              id=\"rate\"\r\n                                              onChange={this.changeRateHandler}\r\n                                              value={this.state.rate}\r\n                                              />\r\n                                          </Box>           \r\n                                          </div>\r\n                                      </div>\r\n                                      <div class=\"form-group row\">\r\n                                          <label for=\"editRev\" class=\"col-sm-2 col-form-label\">Review</label>\r\n                                          <div class=\"col-sm-10\">\r\n                                          <input className=\"form-control input\" name=\"review\" id=\"review\" placeholder=\"Review...\"\r\n                                              value={this.state.review} onChange={this.changeReviewHandler} />\r\n                                          </div>\r\n                                    </div>\r\n                                      </form>\r\n                                  </div>\r\n                                  <div className=\"modal-footer\">\r\n                                      <button className=\"btn btn-secondary modal-clear\" data-dismiss=\"modal\">Cancel</button>\r\n                                      <button className=\"btn btn-success\" data-dismiss=\"modal\" onClick={this.handlePostReview}>Add</button>\r\n                                  </div>\r\n                              </div>\r\n                          </div>\r\n                    </div>\r\n                    {/* modal create review */}\r\n                    {/* Modal edit review */}\r\n                    <div className=\"modal fade\" id=\"reviewEdit\" tabIndex=\"-1\" aria-labelledby=\"addLabel\" aria-hidden=\"true\">\r\n                          <div className=\"modal-dialog\">\r\n                              <div className=\"modal-content\">\r\n                                  <div className=\"modal-header\">\r\n                                      <h5 className=\"modal-title\" id=\"addLabel\">Add Review</h5>\r\n                                      <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                          <span aria-hidden=\"true\" className=\"modal-clear\">&times;</span>\r\n                                      </button>\r\n                                  </div>\r\n                                  <div className=\"modal-body\">\r\n                                      <form>\r\n                                      <div class=\"form-group row\">\r\n                                          <div class=\"col-sm-12 text-center\">\r\n                                          <img class=\"rounded novel\" src={bookDataImage ? bookDataImage : 'https://res.cloudinary.com/todidewantoro/image/upload/v1604943658/bootcamp/covernya_ejy4v1.jpg'} alt=\"\"/>\r\n                                          </div>\r\n                                      </div>\r\n                                      <div className=\"form-group row\">\r\n                                          <div className=\"col-sm-9\">\r\n                                              <input type=\"hidden\" readOnly className=\"form-control-plain text\" value={this.state.id} />      \r\n                              \r\n                                              <input type=\"hidden\" className=\"form-control input\" name=\"bookDetailsCode\" readOnly\r\n                                              value={this.state.bookDetailsCode} />\r\n                                          </div>\r\n                                      </div>\r\n                                    <div class=\"form-group row\">\r\n                                          <label for=\"rating\" class=\"col-sm-2 col-form-label\">Rating</label>\r\n                                          <div class=\"col-sm-10\">\r\n                                          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n                                              <Rating\r\n                                              name=\"simple-controlled\"\r\n                                              name=\"rate\"\r\n                                              id=\"rate\"\r\n                                              onChange={this.changeRateHandler}\r\n                                              value={this.state.rate}\r\n                                              />\r\n                                          </Box>           \r\n                                          </div>\r\n                                      </div>\r\n                                      <div class=\"form-group row\">\r\n                                          <label for=\"editRev\" class=\"col-sm-2 col-form-label\">Review</label>\r\n                                          <div class=\"col-sm-10\">\r\n                                          <input className=\"form-control input\" name=\"review\" id=\"review\" placeholder=\"Review...\"\r\n                                              value={this.state.review} onChange={this.changeReviewHandler} />\r\n                                          </div>\r\n                                    </div>\r\n                                      </form>\r\n                                  </div>\r\n                                  <div className=\"modal-footer\">\r\n                                      <button className=\"btn btn-secondary modal-clear\" data-dismiss=\"modal\">Cancel</button>\r\n                                      <button className=\"btn btn-success\" data-dismiss=\"modal\" onClick={() => this.handlePutReview(AuthService.getUserCode())}>Edit</button>\r\n                                  </div>\r\n                              </div>\r\n                          </div>\r\n                    </div>\r\n                    {/* modal edit review */}\r\n\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div >\r\n        </section >\r\n      </div >\r\n\r\n    );\r\n  }\r\n}\r\nexport default withRouter(DetailPage)\r\n","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\SeeMoreBooks\\SeeMoreBooks.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\SearchResult\\SearchResult.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\index.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\components\\Footer.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\HistoryUser\\HistoryUser.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Payment\\Index.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Login\\Login.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\ForgotPassword\\index.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\DonationUser\\indexForm.js",["120"],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\PublisherManagement\\publishermanagement.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\BookDetailManagement\\bookdetailmanagement.js",["121"],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\AuthorManagement\\AuthorManagement.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Services\\auth.service.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\api.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Payment\\FineLists.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Payment\\DebitModal.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Payment\\HistoryPayment.js",[],{"ruleId":"122","severity":1,"message":"123","line":3,"column":8,"nodeType":"124","messageId":"125","endLine":3,"endColumn":13},{"ruleId":"126","severity":1,"message":"127","line":298,"column":65,"nodeType":"128","endLine":298,"endColumn":139},{"ruleId":"129","severity":1,"message":"130","line":344,"column":166,"nodeType":"131","messageId":"132","endLine":344,"endColumn":168},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"122","severity":1,"message":"123","line":3,"column":8,"nodeType":"124","messageId":"125","endLine":3,"endColumn":13},{"ruleId":"126","severity":1,"message":"127","line":316,"column":65,"nodeType":"128","endLine":316,"endColumn":139},{"ruleId":"129","severity":1,"message":"130","line":364,"column":152,"nodeType":"131","messageId":"132","endLine":364,"endColumn":154},{"ruleId":"122","severity":1,"message":"137","line":8,"column":8,"nodeType":"124","messageId":"125","endLine":8,"endColumn":19},{"ruleId":"122","severity":1,"message":"138","line":7,"column":8,"nodeType":"124","messageId":"125","endLine":7,"endColumn":13},{"ruleId":"122","severity":1,"message":"123","line":13,"column":8,"nodeType":"124","messageId":"125","endLine":13,"endColumn":13},{"ruleId":"122","severity":1,"message":"139","line":286,"column":9,"nodeType":"124","messageId":"125","endLine":286,"endColumn":13},{"ruleId":"129","severity":1,"message":"140","line":484,"column":76,"nodeType":"131","messageId":"132","endLine":484,"endColumn":78},{"ruleId":"141","severity":1,"message":"142","line":534,"column":47,"nodeType":"143","endLine":534,"endColumn":58},{"ruleId":"141","severity":1,"message":"142","line":590,"column":47,"nodeType":"143","endLine":590,"endColumn":58},{"ruleId":"122","severity":1,"message":"144","line":2,"column":22,"nodeType":"124","messageId":"125","endLine":2,"endColumn":26},{"ruleId":"122","severity":1,"message":"145","line":11,"column":8,"nodeType":"124","messageId":"125","endLine":11,"endColumn":11},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-native-reassign",["146"],"no-negated-in-lhs",["147"],"'AuthService' is defined but never used.","'Image' is defined but never used.","'edit' is defined but never used.","Expected '===' and instead saw '=='.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Link' is defined but never used.","'API' is defined but never used.","no-global-assign","no-unsafe-negation"]