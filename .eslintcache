[{"C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\FineManagement\\fineManagement.js":"1","C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\ManageDonation\\index.js":"2","C:\\Users\\abdig\\Desktop\\React-Library\\src\\index.js":"3","C:\\Users\\abdig\\Desktop\\React-Library\\src\\components\\HeaderUser.js":"4","C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\DonationUser\\index.js":"5","C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\Cart\\Cart.js":"6","C:\\Users\\abdig\\Desktop\\React-Library\\src\\api.js":"7","C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\Payment\\DebitModal.js":"8","C:\\Users\\abdig\\Desktop\\React-Library\\src\\components\\Footer.js":"9","C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\Wishlist\\Wishlist.js":"10","C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\Form\\ReturnForm.js":"11","C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\BookManagement\\bookmanagement.js":"12","C:\\Users\\abdig\\Desktop\\React-Library\\src\\components\\Content.js":"13","C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\Login\\Login.js":"14","C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\Register\\Register.js":"15","C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\ProfileUser\\ProfileUser.js":"16","C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\BookDetailManagement\\bookdetailmanagement.js":"17","C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\Payment\\NoBills.js":"18","C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\Payment\\FineLists.js":"19","C:\\Users\\abdig\\Desktop\\React-Library\\src\\Navigations\\MainNavigationsUser.js":"20","C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\Payment\\TopUpBox.js":"21","C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\CategoryManagement\\categoryManagement.js":"22","C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\PublisherManagement\\publishermanagement.js":"23"},{"size":15576,"mtime":1610263003971,"results":"24","hashOfConfig":"25"},{"size":29541,"mtime":1610359415119,"results":"26","hashOfConfig":"25"},{"size":230,"mtime":1606460227538,"results":"27","hashOfConfig":"25"},{"size":14629,"mtime":1610248823052,"results":"28","hashOfConfig":"25"},{"size":1955,"mtime":1609213126726,"results":"29","hashOfConfig":"25"},{"size":11717,"mtime":1610248822912,"results":"30","hashOfConfig":"25"},{"size":207,"mtime":1609747739807,"results":"31","hashOfConfig":"25"},{"size":10195,"mtime":1609925625387,"results":"32","hashOfConfig":"25"},{"size":496,"mtime":1606460227503,"results":"33","hashOfConfig":"25"},{"size":7393,"mtime":1610248823005,"results":"34","hashOfConfig":"25"},{"size":15070,"mtime":1610248822916,"results":"35","hashOfConfig":"25"},{"size":43493,"mtime":1610115425547,"results":"36","hashOfConfig":"25"},{"size":14770,"mtime":1610248823039,"results":"37","hashOfConfig":"25"},{"size":6803,"mtime":1610250753307,"results":"38","hashOfConfig":"25"},{"size":10285,"mtime":1610250759850,"results":"39","hashOfConfig":"25"},{"size":19450,"mtime":1610248822951,"results":"40","hashOfConfig":"25"},{"size":23040,"mtime":1610094122057,"results":"41","hashOfConfig":"25"},{"size":323,"mtime":1609063861383,"results":"42","hashOfConfig":"25"},{"size":1808,"mtime":1609833371288,"results":"43","hashOfConfig":"25"},{"size":5973,"mtime":1610248822911,"results":"44","hashOfConfig":"25"},{"size":1506,"mtime":1609063861411,"results":"45","hashOfConfig":"25"},{"size":11196,"mtime":1610374321302,"results":"46","hashOfConfig":"25"},{"size":13334,"mtime":1610375144272,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"aafn0p",{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\FineManagement\\fineManagement.js",[],"C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\ManageDonation\\index.js",["98"],"C:\\Users\\abdig\\Desktop\\React-Library\\src\\index.js",[],["99","100"],"C:\\Users\\abdig\\Desktop\\React-Library\\src\\components\\HeaderUser.js",["101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124"],"import React, { Component } from 'react';\r\nimport { Redirect, Link, withRouter } from 'react-router-dom'\r\nimport './HeaderUser.style.css';\r\n// import axios from \"axios\";\r\nimport Axios from \"../Services/axios-instance\";\r\nimport AuthService from \"../Services/auth.service\";\r\n\r\nclass HeaderUser extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            condition: false,\r\n            username: \"\",\r\n            userCode: \"\",\r\n            userData: [],\r\n            countCart: \"0\",\r\n            statusUser: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            statusUser: AuthService.getStatusUser(),\r\n            username: AuthService.getUsername(),\r\n            userCode: AuthService.getUserCode()\r\n        })\r\n        Axios.get(\"cart/usercode/\" + AuthService.getUserCode()).then((resp) => {\r\n            this.setState({\r\n                countCart: resp.data.data.length\r\n            })\r\n        }).catch(function (error) {\r\n            if (error.response) {\r\n                console.log(error.response.data);\r\n                console.log(error.response.status);\r\n                console.log(error.response.headers);\r\n            } else if (error.request) {\r\n                console.log(error.request);\r\n            } else {\r\n                console.log('Error', error.message);\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { condition, username } = this.state;\r\n        const mystyle = {\r\n            color: \"#495464 !important\",\r\n            cursor: 'pointer',\r\n        };\r\n        const handleToggle = () => {\r\n            if (condition) {\r\n                document.body.classList.remove('nav-sm');\r\n                document.body.classList.add('nav-md');\r\n                document.getElementById('searchInput').style.display = \"\";\r\n            } else {\r\n                document.body.classList.remove('nav-md');\r\n                document.body.classList.add('nav-sm');\r\n                var x = window.matchMedia(\"(max-width: 320px)\");\r\n                if (x.matches) {\r\n                    document.getElementById('searchInput').style.display = \"none\";\r\n                }\r\n            }\r\n            this.setState({ condition: !condition })\r\n        };\r\n\r\n        if (this.state.statusUser === \"2\") {\r\n            return (\r\n                <nav className=\"navbar navbar-expand navbar-dark nav_menu shadow\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item pr-3\" >\r\n                            <a id=\"menu_toggle\" onClick={handleToggle} style={mystyle}><i className=\"fa fa-bars\"></i></a>\r\n                        </li>\r\n                        <li className=\"nav-item dropdown open\">\r\n                            <a href=\"\" className=\"dropdown-toggle info-number\" id=\"navbarDropdown2\" data-toggle=\"dropdown\"\r\n                                aria-expanded=\"false\" style={mystyle}>\r\n                                Categories\r\n                                </a>\r\n                            <ul className=\"dropdown-menu list-unstyled msg_list\" role=\"menu\" aria-labelledby=\"navbarDropdown2\">\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"dropdown-item\">\r\n                                        <span className=\"message\">\r\n                                            Action\r\n                                            </span>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"dropdown-item\">\r\n                                        <span className=\"message\">\r\n                                            Novel\r\n                                            </span>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"dropdown-item\">\r\n                                        <span className=\"message\">\r\n                                            Fiksi\r\n                                            </span>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <div className=\"text-center\">\r\n                                        <a className=\"dropdown-item\">\r\n                                            <strong>See All Categories</strong>\r\n                                            <i className=\"fa fa-angle-right\"></i>\r\n                                        </a>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                        </li>\r\n                    </ul>\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item\" style={{ paddingLeft: \"15px\" }}>\r\n                            <Link to=\"/page/cart\" className=\"nav-link\">\r\n                                <i className=\"fa fa-shopping-cart fa-lg\" style={{ fontSize: '17px' }}></i>\r\n                                <span id=\"cartCount\" className=\"badge badge-danger navbar-badge\">{this.state.countCart}</span>\r\n                            </Link>\r\n                        </li>\r\n                        <li id=\"searchInput\" className=\"nav-item\" style={{ paddingLeft: '15px' }}>\r\n                            <form className=\"form-inline pt-2\">\r\n                                <div className=\"input-group input-group-sm\">\r\n                                    <input className=\"form-control form-control-navbar\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"\r\n                                        style={{ backgroundColor: 'white', border: 0, borderTopLeftRadius: '25px', borderBottomLeftRadius: '25px', }} />\r\n                                    <div className=\"input-group-append\">\r\n                                        <button className=\"btn btn-navbar m-0\" type=\"submit\"\r\n                                            style={{ backgroundColor: 'white', border: 0, borderTopRightRadius: '25px', borderBottomRightRadius: '25px', }}>\r\n                                            <i className=\"fa fa-search pr-2\"></i>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </li>\r\n                    </ul>\r\n                </nav >\r\n            );\r\n        } else {\r\n            return (\r\n                <nav className=\"navbar navbar-expand navbar-dark nav_menu shadow\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item pr-3\" >\r\n                            <a id=\"menu_toggle\" onClick={handleToggle} style={mystyle}><i className=\"fa fa-bars\"></i></a>\r\n                        </li>\r\n                        <li className=\"nav-item dropdown open\">\r\n                            <a href=\"\" className=\"dropdown-toggle info-number\" id=\"navbarDropdown2\" data-toggle=\"dropdown\"\r\n                                aria-expanded=\"false\" style={mystyle}>\r\n                                Categories\r\n                                </a>\r\n                            <ul className=\"dropdown-menu list-unstyled msg_list\" role=\"menu\" aria-labelledby=\"navbarDropdown2\">\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"dropdown-item\">\r\n                                        <span className=\"message\">\r\n                                            Action\r\n                                            </span>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"dropdown-item\">\r\n                                        <span className=\"message\">\r\n                                            Novel\r\n                                            </span>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"dropdown-item\">\r\n                                        <span className=\"message\">\r\n                                            Fiksi\r\n                                            </span>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <div className=\"text-center\">\r\n                                        <a className=\"dropdown-item\">\r\n                                            <strong>See All Categories</strong>\r\n                                            <i className=\"fa fa-angle-right\"></i>\r\n                                        </a>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                        </li>\r\n                    </ul>\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li role=\"presentation\" className=\"nav-item dropdown open\" style={{ paddingLeft: '15px', paddingTop: '8px' }}>\r\n                            <a href=\"\" className=\"dropdown-toggle info-number\" id=\"navbarDropdown1\" data-toggle=\"dropdown\"\r\n                                aria-expanded=\"false\" style={mystyle}>\r\n                                <i className=\"fa fa-bell fa-lg\"></i>\r\n                            </a>\r\n                            <ul className=\"dropdown-menu list-unstyled msg_list\" role=\"menu\" aria-labelledby=\"navbarDropdown1\">\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"dropdown-item\">\r\n                                        <span className=\"image\"><img src=\"assets/images/user.png\" alt=\"Profile Image\" /></span>\r\n                                        <span>\r\n                                            <span>John Smith</span>\r\n                                        </span>\r\n                                        <span className=\"message\">\r\n                                            Film festivals used to be do-or-die moments for movie makers. They were where...\r\n                                            </span>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"dropdown-item\">\r\n                                        <span className=\"image\"><img src=\"assets/images/user.png\" alt=\"Profile Image\" /></span>\r\n                                        <span>\r\n                                            <span>John Smith</span>\r\n\r\n                                        </span>\r\n                                        <span className=\"message\">\r\n                                            Film festivals used to be do-or-die moments for movie makers. They were where...\r\n                                            </span>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"dropdown-item\">\r\n                                        <span className=\"image\"><img src=\"assets/images/user.png\" alt=\"Profile Image\" /></span>\r\n                                        <span>\r\n                                            <span>John Smith</span>\r\n\r\n                                        </span>\r\n                                        <span className=\"message\">\r\n                                            Film festivals used to be do-or-die moments for movie makers. They were where...\r\n                                            </span>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"dropdown-item\">\r\n                                        <span className=\"image\"><img src=\"assets/images/user.png\" alt=\"Profile Image\" /></span>\r\n                                        <span>\r\n                                            <span>John Smith</span>\r\n\r\n                                        </span>\r\n                                        <span className=\"message\">\r\n                                            Film festivals used to be do-or-die moments for movie makers. They were where...\r\n                                            </span>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <div className=\"text-center\">\r\n                                        <a className=\"dropdown-item\">\r\n                                            <strong>See All Alerts</strong>\r\n                                            <i className=\"fa fa-angle-right\"></i>\r\n                                        </a>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                        </li>\r\n                        <li id=\"searchInput\" className=\"nav-item\" style={{ paddingLeft: '15px' }}>\r\n                            <form className=\"form-inline pt-2\">\r\n                                <div className=\"input-group input-group-sm\">\r\n                                    <input className=\"form-control form-control-navbar\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"\r\n                                        style={{ backgroundColor: 'white', border: 0, borderTopLeftRadius: '25px', borderBottomLeftRadius: '25px', }} />\r\n                                    <div className=\"input-group-append\">\r\n                                        <button className=\"btn btn-navbar m-0\" type=\"submit\"\r\n                                            style={{ backgroundColor: 'white', border: 0, borderTopRightRadius: '25px', borderBottomRightRadius: '25px', }}>\r\n                                            <i className=\"fa fa-search pr-2\"></i>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </li>\r\n                    </ul>\r\n                </nav >\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(HeaderUser)",["125","126"],"C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\DonationUser\\index.js",["127"],"C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\Cart\\Cart.js",["128","129","130","131","132","133"],"C:\\Users\\abdig\\Desktop\\React-Library\\src\\api.js",[],"C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\Payment\\DebitModal.js",[],"C:\\Users\\abdig\\Desktop\\React-Library\\src\\components\\Footer.js",[],"C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\Wishlist\\Wishlist.js",["134","135","136","137","138"],"C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\Form\\ReturnForm.js",[],"C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\BookManagement\\bookmanagement.js",["139","140","141","142","143","144"],"import React, { Component } from 'react';\r\nimport { Table, Modal, Button } from 'react-bootstrap';\r\nimport swal from \"sweetalert\";\r\nimport { Link } from 'react-router-dom';\r\n//Datatable Modules\r\nimport 'datatables.net-dt/js/dataTables.dataTables'\r\nimport 'datatables.net-dt/css/jquery.dataTables.min.css'\r\nimport 'datatables.net-responsive-dt/js/responsive.dataTables.js'\r\nimport 'datatables.net-responsive-dt/css/responsive.dataTables.css'\r\nimport API from \"../../api\";\r\nimport $ from 'jquery';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\nimport Select from 'react-select';\r\n\r\nclass BookManagement extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      editClicked: false,\r\n      bookCode: \"\",\r\n      showAddExist: false,\r\n      showAdd1: false,\r\n      showAdd2: false,\r\n      showEdit: false,\r\n      showDelete: false,\r\n      authorCode: \"\",\r\n      bookDetailCode: \"\",\r\n      categoryCode: \"\",\r\n      publisherCode: \"\",\r\n      urlImage: \"\",\r\n      title: \"\",\r\n      subtitle: \"\",\r\n      author: \"\",\r\n      publisherName: \"\",\r\n      publisherAddress: \"\",\r\n      description: \"\",\r\n      pages: \"\",\r\n      startDate: new Date(),\r\n      language: \"\",\r\n      length: \"\",\r\n      isbn: \"\",\r\n      weight: \"\",\r\n      width: \"\",\r\n      numberOfPages: \"\",\r\n      category: \"\",\r\n      baseImage: \"\",\r\n      authorList: \"\",\r\n      bookDetailList: \"\",\r\n      categoryList: \"\",\r\n      publisherList: \"\"\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // DATA TABEL\r\n    try {\r\n      const res = await API.get(`/api/books`);\r\n      const tabledata = res.data.data;\r\n\r\n      this.setState({ data: tabledata });\r\n\r\n      $(function () {\r\n        $('#bookmanagement').DataTable({\r\n          responsive: true\r\n        });\r\n      });\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    this.getCategory();\r\n  }\r\n\r\n  // pickImage = (e) => {\r\n  //   const file = e.target.files[0];\r\n  //   if (file){\r\n  //     const reader = new FileReader();\r\n  //     reader.onload = this._handleReaderLoaded.bind(this)\r\n  //     reader.readAsDataURL(file)\r\n  //   }\r\n  // }\r\n\r\n  // _handleReaderLoaded = (e) => {\r\n  //   let binaryStr = e.target.result\r\n  //   this.setState({ baseImage: (binaryStr)})\r\n  //   console.log(this.state.baseImage)\r\n  // }\r\n\r\n\r\n  handleExistOrNot = () => {\r\n    this.setState({ showAddExist: true })\r\n  }\r\n\r\n  handleShowAdd = () => {\r\n    this.setState({ showAddExist: false, showAdd1: true })\r\n  }\r\n\r\n  handleAddBook = () => {\r\n    this.setState({ showAdd2: false })\r\n    API.post(\r\n      `api/newbooks`,\r\n      {\r\n        publisherName: this.state.publisherName,\r\n        address: this.state.publisherAddress,\r\n        bookTitle: this.state.title,\r\n        bookSubtitle: this.state.subtitle,\r\n        authorName: this.state.author,\r\n        cover: this.state.urlImage,\r\n        description: this.state.description,\r\n        categoryName: this.state.category,\r\n        numberOfPages: this.state.numberOfPages,\r\n        publishedDate: this.state.startDate,\r\n        isbn: this.state.isbn,\r\n        language: this.state.language\r\n      },\r\n      {\r\n        headers: {\r\n          Accept: \"*/*\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    )\r\n      .then(() => {\r\n        this.setState({\r\n          showAdd1: false,\r\n          editClicked: true\r\n        })\r\n        swal(\"Success!\", \"Book Has Been Added\", \"success\");\r\n      })\r\n      .catch((error) => {\r\n        swal(\"Oops!\", \"Please try again\", \"error\");\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  handleShowAdd2 = () => {\r\n    this.setState({ showAddExist: false, showAdd2: true })\r\n  }\r\n\r\n  handleAddBook2 = () => {\r\n    if (this.state.startDate && this.state.isbn) {\r\n      this.setState({ showAdd2: false })\r\n      API.post(\r\n        `api/book`,\r\n        {\r\n          authorCode: this.state.authorCode,\r\n          bookDetailCode: this.state.bookDetailCode,\r\n          categoryCode: this.state.categoryCode,\r\n          publisherCode: this.state.publisherCode,\r\n          publishedDate: this.state.startDate,\r\n          isbn: this.state.isbn\r\n        },\r\n        {\r\n          headers: {\r\n            Accept: \"*/*\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      )\r\n        .then(() => {\r\n          this.setState({\r\n            showAdd2: false,\r\n            editClicked: true\r\n          })\r\n          swal(\"Success!\", \"Book Has Been Added\", \"success\");\r\n        })\r\n        .catch((error) => {\r\n          swal(\"Oops!\", \"Please try again\", \"error\");\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      swal(\"Oops!\", \"Data is not valid\", \"error\");\r\n    }\r\n  }\r\n\r\n  //button edit\r\n  handleShowEdit = (bkcd) => {\r\n    this.setState({ showEdit: true, bookCode: bkcd })\r\n    API.get(`/api/book/${bkcd}`).then((res) => {\r\n      let response = res.data.data;\r\n      let date = moment(response.publishedDate).toDate();\r\n      this.setState({\r\n        authorCode: response.authorEntity.authorCode,\r\n        bookDetailCode: response.bookDetailsEntity.bookDetailCode,\r\n        categoryCode: response.categoryEntity.categoryCode,\r\n        publisherCode: response.publisherEntity.publisherCode,\r\n        startDate: date,\r\n        isbn: response.isbn,\r\n        bookCode: response.bookCode\r\n      });\r\n    });\r\n  };\r\n\r\n  handleSaveEdit = () => {\r\n    this.setState({ showEdit: false, })\r\n    API.put(\r\n      `api/book/${this.state.bookCode}`,\r\n      {\r\n        authorCode: this.state.authorCode,\r\n        bookDetailCode: this.state.bookDetailCode,\r\n        categoryCode: this.state.categoryCode,\r\n        publisherCode: this.state.publisherCode,\r\n        publishedDate: this.state.startDate,\r\n        isbn: this.state.isbn,\r\n        bookCode: this.state.bookCode\r\n      },\r\n      {\r\n        headers: {\r\n          Accept: \"*/*\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    )\r\n      .then(() => {\r\n        this.setState({ editClicked: true, bookCode: \"\", authorCode: \"\", bookDetailCode: \"\", categoryCode: \"\", publisherCode: \"\", publishedDate: \"\", isbn: \"\" })\r\n        swal(\"Great!\", \"Book Has Been edited\", \"success\");\r\n      })\r\n      .catch((error) => {\r\n        swal(\"Oops!\", \"Please try again\", \"error\");\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  //button delete\r\n  handleShowDelete = (bkcd) => {\r\n    this.setState({ showDelete: true, bookCode: bkcd })\r\n  }\r\n\r\n  handleDelete = () => {\r\n    API.delete(`/api/book/${this.state.bookCode}`)\r\n      .then(() => window.location.reload())\r\n    // swal(\"Deleted!\", \"Book Is Successfully Deleted\", \"success\");\r\n    this.setState({ showDelete: false })\r\n  }\r\n\r\n  // utils\r\n  handleCloseModal = () => {\r\n    this.setState({\r\n      showAddExist: false, showAdd1: false, showEdit: false, showDelete: false, showAdd2: false,\r\n      bookCode: \"\", authorCode: \"\", bookDetailCode: \"\", categoryCode: \"\", startDate: \"\", date: \"\", isbn: \"\"\r\n    })\r\n  }\r\n\r\n  async getCategory() {\r\n    const res = await API.get('/api/author')\r\n    const dataAuthor = res.data\r\n\r\n    const options1 = dataAuthor.map(d => ({\r\n      \"value\": d.authorCode,\r\n      \"label\": d.authorName\r\n    }))\r\n    this.setState({ authorList: options1 })\r\n\r\n    const res2 = await API.get('/api/bookdetails')\r\n    const dataBookDetail = res2.data.data\r\n\r\n    const options2 = dataBookDetail.map(d => ({\r\n      \"value\": d.bookDetailCode,\r\n      \"label\": d.bookTitle\r\n    }))\r\n    this.setState({ bookDetailList: options2 })\r\n\r\n    const res3 = await API.get('/api/category')\r\n    const dataCategory = res3.data\r\n\r\n    const options3 = dataCategory.map(d => ({\r\n      \"value\": d.categoryCode,\r\n      \"label\": d.categoryName\r\n    }))\r\n    this.setState({ categoryList: options3 })\r\n\r\n    const res4 = await API.get('/api/publisher/active')\r\n    const dataPublisher = res4.data\r\n\r\n    const options4 = dataPublisher.map(d => ({\r\n      \"value\": d.publisherCode,\r\n      \"label\": d.publisherName\r\n    }))\r\n    this.setState({ publisherList: options4 })\r\n  }\r\n\r\n  handleChangeSelect1 = (e) => {\r\n    this.setState({ authorCode: e.value });\r\n  }\r\n\r\n  handleChangeSelect2 = (e) => {\r\n    this.setState({ bookDetailCode: e.value });\r\n  }\r\n\r\n  handleChangeSelect3 = (e) => {\r\n    this.setState({ categoryCode: e.value });\r\n  }\r\n\r\n  handleChangeSelect4 = (e) => {\r\n    this.setState({ publisherCode: e.value });\r\n  }\r\n\r\n  handleChange = date => {\r\n    this.setState({\r\n      startDate: date\r\n    });\r\n  };\r\n\r\n  async componentDidUpdate(prevState) {\r\n    if (this.state.editClicked) {\r\n      try {\r\n        const res = await API.get(`/api/books`,\r\n          {\r\n            headers: {\r\n              Accept: \"*/*\",\r\n              \"Content-Type\": \"application/json\",\r\n            }\r\n          });\r\n        const tabledata = res.data.data;\r\n        this.setState({\r\n          data: tabledata,\r\n          editClicked: false,\r\n          // publisherName: \"\",\r\n          // address: \"\",\r\n          // bookTitle: \"\",\r\n          // bookSubtitle: \"\",\r\n          // authorName: \"\",\r\n          // cover: \"\",\r\n          // description: \"\",\r\n          // categoryName: \"\",\r\n          // numberOfPages: \"\",\r\n          startDate: \"\",\r\n          isbn: \"\",\r\n          // language: \"\",\r\n          // authorCode: \"\",\r\n          // bookDetailCode: \"\",\r\n          // categoryCode: \"\",\r\n          // publisherCode: \"\",\r\n          // publishedDate: \"\",\r\n          // isbn: \"\"\r\n\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      };\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { data, showAdd1, showAdd2, showAddExist, showEdit, showDelete, baseImage } = this.state;\r\n\r\n    return (\r\n      // page content\r\n      <div className=\"right_col\" role=\"main\" style={{ minHeight: '100vh' }}>\r\n        <section className=\"mt-5 pt-5\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12 col-lg-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <h3 className=\"card-title\">Book Management</h3>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n\r\n\r\n                    {/* title */}\r\n                    <div class=\"\">\r\n                      <Button className=\"mb-5\" variant=\"success\" onClick={this.handleExistOrNot}>\r\n                        <i class=\"fa fa-plus\"></i> Add Book\r\n                      </Button>\r\n                    </div>\r\n                    {/* title */}\r\n\r\n\r\n                    {/* book management table */}\r\n                    <Table responsive striped id=\"bookmanagement\" style={{ width: '100%' }}>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Book Code</th>\r\n                          <th>Action</th>\r\n                          <th>Book Title</th>\r\n                          <th>Author</th>\r\n                          <th>Categories</th>\r\n                          <th>Publisher</th>\r\n                          <th>Published Date</th>\r\n                          <th>ISBN</th>\r\n                          <th>Book Cover</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {\r\n                          data.map((book, index) => {\r\n                            return (\r\n                              <tr key={index}>\r\n                                <td>\r\n                                  <p>{book.bookCode}</p>\r\n                                </td>\r\n                                <td>\r\n                                  <div class='d-flex justify-content-around mt-4' style={{ border: 'none' }}>\r\n                                    <button class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#edit\" onClick={() => { this.handleShowEdit(book.bookCode) }}><i\r\n                                      class=\"fa fa-edit\"></i></button>\r\n                                    <button class=\"btn btn-danger\" data-toggle=\"modal\" data-target=\"#delete\" onClick={() => { this.handleShowDelete(book.bookCode) }}><i\r\n                                      class=\"fa fa-trash\"></i></button>\r\n                                  </div>\r\n                                </td>\r\n                                <td>\r\n                                  {Object.keys(book.bookDetailsEntity ? book.bookDetailsEntity : \"\").map(key => {\r\n                                    if (key === \"bookTitle\") {\r\n                                      const judul = (book.bookDetailsEntity[key])\r\n                                      return judul;\r\n                                    }\r\n                                  })}\r\n                                </td>\r\n                                <td>\r\n                                  {Object.keys(book.authorEntity ? book.authorEntity : \"\").map(key => {\r\n                                    if (key === \"authorName\") {\r\n                                      const author = (book.authorEntity[key])\r\n                                      return author;\r\n                                    }\r\n                                  })}\r\n                                </td>\r\n                                <td>\r\n                                  {Object.keys(book.categoryEntity ? book.categoryEntity : \"\").map(key => {\r\n                                    if (key === \"categoryName\") {\r\n                                      const category = (book.categoryEntity[key])\r\n                                      return category;\r\n                                    }\r\n                                  })}\r\n                                </td>\r\n                                <td>\r\n                                  {Object.keys(book.publisherEntity ? book.publisherEntity : \"\").map(key => {\r\n                                    if (key === \"publisherName\") {\r\n                                      const publisher = (book.publisherEntity[key])\r\n                                      return publisher;\r\n                                    }\r\n                                  })}\r\n                                </td>\r\n                                <td>\r\n                                  <Moment format=\"DD/MM/YYYY\">\r\n                                    {book.publishedDate}\r\n                                  </Moment>\r\n                                </td>\r\n                                <td>\r\n                                  <p>{book.isbn}</p>\r\n                                </td>\r\n                                <td class=\"text-center\">\r\n                                  {\r\n                                    Object.keys(book.bookDetailsEntity ? book.bookDetailsEntity : \"\").map(key => {\r\n                                      if (key === \"cover\") {\r\n                                        const cover = (book.bookDetailsEntity[key])\r\n                                        return <img height=\"80\"\r\n                                          src={cover}\r\n                                          alt=\"bookimage\" />\r\n                                      }\r\n                                    })\r\n                                  }\r\n                                </td>\r\n                              </tr>\r\n                            )\r\n                          })\r\n                        }\r\n                      </tbody>\r\n                    </Table>\r\n                    {/* book management table */}\r\n\r\n\r\n                    {/* modal if*/}\r\n                    <Modal size=\"lg\" show={showAddExist} onHide={this.handleCloseModal}>\r\n                      <Modal.Header closeButton>\r\n                        <Modal.Title>Add Book Data</Modal.Title>\r\n                      </Modal.Header>\r\n                      <Modal.Body>\r\n                        <p>Does Author, Book details, Category and Publisher information already exist?</p>\r\n                      </Modal.Body>\r\n                      <Modal.Footer>\r\n                        <Button className=\"btn btn-secondary\" variant=\"secondary\" onClick={this.handleShowAdd}>\r\n                          <i class=\"fa fa-times-circle\"></i> No\r\n                        </Button>\r\n                        <Button id=\"buttonAddBook\" type=\"submit\" className=\"btn btn-success\" variant=\"primary\" onClick={this.handleShowAdd2}>\r\n                          <i class=\"fa fa-plus\"></i> Yes\r\n                        </Button>\r\n                      </Modal.Footer>\r\n                    </Modal>\r\n                    {/* modal add if*/}\r\n\r\n\r\n                    {/* modal add if data not exist*/}\r\n                    <Modal size=\"lg\" show={showAdd1} onHide={this.handleCloseModal}>\r\n                      <Modal.Header closeButton>\r\n                        <Modal.Title>Add Book Data</Modal.Title>\r\n                      </Modal.Header>\r\n                      <Modal.Body>\r\n                        <div class='container'>\r\n                          <div class=\"modal-body\">\r\n                            <form>\r\n                            </form>\r\n                            <form>\r\n                              <div class=\"form-group row\">\r\n                                <label for=\"addTitle\" class=\"col-sm-2 col-form-label\">Title</label>\r\n                                <div class=\"col-sm-10\">\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    name=\"title\"\r\n                                    class=\"form-control\"\r\n                                    id=\"addTitle\"\r\n                                    placeholder=\"Title...\"\r\n                                    onChange={(e) => this.setState({ title: e.target.value })}\r\n                                    value={this.state.title}\r\n                                    data-attribute-name=\"Title\"\r\n                                    data-async\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"form-group row\">\r\n                                <label for=\"addSubtitle\" class=\"col-sm-2 col-form-label\">Subtitle</label>\r\n                                <div class=\"col-sm-10\">\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    name=\"subtitle\"\r\n                                    class=\"form-control\"\r\n                                    id=\"addSubtitle\"\r\n                                    placeholder=\"Subtitle...\"\r\n                                    onChange={(e) => this.setState({ subtitle: e.target.value })}\r\n                                    value={this.state.subtitle}\r\n                                    data-attribute-name=\"Subtitle\"\r\n                                    data-async\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"form-group row\">\r\n                                <label for=\"addAuthor\" class=\"col-sm-2 col-form-label\">Author</label>\r\n                                <div class=\"col-sm-10\">\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    name=\"author\"\r\n                                    class=\"form-control\"\r\n                                    id=\"addAuthor\"\r\n                                    placeholder=\"Author...\"\r\n                                    onChange={(e) => this.setState({ author: e.target.value })}\r\n                                    value={this.state.author}\r\n                                    data-attribute-name=\"Author\"\r\n                                    data-async\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"form-group row\">\r\n                                <label for=\"addPublisher\" class=\"col-sm-2 col-form-label\">Publisher</label>\r\n                                <div class=\"col-sm-10\">\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    name=\"publisher\"\r\n                                    class=\"form-control\"\r\n                                    id=\"addPublisher\"\r\n                                    placeholder=\"Publisher...\"\r\n                                    onChange={(e) => this.setState({ publisherName: e.target.value })}\r\n                                    value={this.state.publisher}\r\n                                    data-attribute-name=\"Publisher\"\r\n                                    data-async\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"form-group row\">\r\n                                <label for=\"addPublisher\" class=\"col-sm-2 col-form-label\">Publisher Address</label>\r\n                                <div class=\"col-sm-10\">\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    name=\"publisherAddress\"\r\n                                    class=\"form-control\"\r\n                                    id=\"addPublisherAddress\"\r\n                                    placeholder=\"Publisher Adress...\"\r\n                                    onChange={(e) => this.setState({ publisherAddress: e.target.value })}\r\n                                    value={this.state.publisherAddress}\r\n                                    data-attribute-name=\"publisherAddress\"\r\n                                    data-async\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"form-group row\">\r\n                                <label for=\"addImage\" class=\"col-sm-2 col-form-label\">Url Image</label>\r\n                                <div class=\"col-sm-10\">\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    name=\"urlImage\"\r\n                                    class=\"form-control\"\r\n                                    id=\"addUrlImage\"\r\n                                    placeholder=\"URL Image...\"\r\n                                    onChange={(e) => this.setState({ urlImage: e.target.value })}\r\n                                    value={this.state.urlImage}\r\n                                    data-attribute-name=\"urlImage\"\r\n                                    data-async\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"form-group row\">\r\n                                <label for=\"addDesc\" class=\"col-sm-2 col-form-label\">Description</label>\r\n                                <div class=\"col-sm-10\">\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    name=\"description\"\r\n                                    class=\"form-control\"\r\n                                    id=\"addDescription\"\r\n                                    placeholder=\"Description...\"\r\n                                    onChange={(e) => this.setState({ description: e.target.value })}\r\n                                    value={this.state.description}\r\n                                    data-attribute-name=\"description\"\r\n                                    data-async\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"form-group row\">\r\n                                <label for=\"addDesc\" class=\"col-sm-2 col-form-label\">Category</label>\r\n                                <div class=\"col-sm-10\">\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    name=\"category\"\r\n                                    class=\"form-control\"\r\n                                    id=\"addcategory\"\r\n                                    placeholder=\"Category...\"\r\n                                    onChange={(e) => this.setState({ category: e.target.value })}\r\n                                    value={this.state.category}\r\n                                    data-attribute-name=\"category\"\r\n                                    data-async\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                              <hr />\r\n                              <div class=\"form-group row\">\r\n                                <label for=\"addPages\" class=\"col-sm-2 col-form-label\">Number of Pages</label>\r\n                                <div class=\"col-sm-4\">\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    name=\"numberOfPages\"\r\n                                    class=\"form-control\"\r\n                                    id=\"addNumberOfPages\"\r\n                                    placeholder=\"Number of Pages...\"\r\n                                    onChange={(e) => this.setState({ numberOfPages: e.target.value })}\r\n                                    value={this.state.numberOfPages}\r\n                                    data-attribute-name=\"numberOfPages\"\r\n                                    data-async\r\n                                  />\r\n                                </div>\r\n                                <label for=\"addIsbn\" class=\"col-sm-2 col-form-label\">ISBN</label>\r\n                                <div class=\"col-sm-4\">\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    name=\"isbn\"\r\n                                    class=\"form-control\"\r\n                                    id=\"isbn\"\r\n                                    placeholder=\"ISBN...\"\r\n                                    onChange={(e) => this.setState({ isbn: e.target.value })}\r\n                                    value={this.state.isbn}\r\n                                    data-attribute-name=\"isbn\"\r\n                                    data-async\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"form-group row\">\r\n                                <label for=\"addPublishedDate\" class=\"col-sm-2 col-form-label\">Published Date</label>\r\n                                <div class=\"col-sm-4\">\r\n                                  <DatePicker\r\n                                    selected={this.state.startDate}\r\n                                    onChange={this.handleChange}\r\n                                    dateFormat='yyyy-MM-dd'\r\n                                  />\r\n                                  <br />\r\n                                  <small className=\"text-muted\">(yyyy-MM-dd)</small>\r\n                                </div>\r\n                                <label for=\"addWeight\" class=\"col-sm-2 col-form-label\">Language</label>\r\n                                <div class=\"col-sm-4\">\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    name=\"language\"\r\n                                    class=\"form-control\"\r\n                                    id=\"language\"\r\n                                    placeholder=\"Language...\"\r\n                                    onChange={(e) => this.setState({ language: e.target.value })}\r\n                                    value={this.state.language}\r\n                                    data-attribute-name=\"language\"\r\n                                    data-async\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                              {/* <div class=\"form-group row\">\r\n                                <label for=\"addLang\" class=\"col-sm-2 col-form-label\">Cover</label>\r\n                                <div class=\"col-sm-4\">\r\n                                <input \r\n                                    style={{display:'none'}}\r\n                                    type=\"file\" \r\n                                    name=\"urlImage\"\r\n                                    id=\"addImage\" \r\n                                    onBlur={this.form.handleBlurEvent}\r\n                                    // onChange={this.form.handleChangeEvent}\r\n                                    value={fields.urlImage} \r\n                                    data-attribute-name=\"Url Image\"\r\n                                    data-async\r\n                                    onChange={(e) => {\r\n                                      this.pickImage(e);\r\n                                    }}\r\n                                    accept=\".jpeg, .png, .jpg\"\r\n                                    ref={fileInput => this.fileInput = fileInput}\r\n                                  />\r\n                                  <Button onClick={() => this.fileInput.click()}>Pick Image</Button>\r\n                                  <br/><br/>\r\n                                  <img src={baseImage?baseImage:\"assets/images/cover.png\"} height=\"80vh\" alt = 'cover'/> */}\r\n                              {/* <label className=\"error\" style={{color: \"red\"}}>\r\n                                    {errors.urlImage ? errors.urlImage : \"\"}\r\n                                  </label> */}\r\n                              {/* </div>\r\n                              </div> */}\r\n                            </form>\r\n                          </div>\r\n                        </div>\r\n                      </Modal.Body>\r\n                      <Modal.Footer>\r\n                        <Button className=\"btn btn-secondary\" variant=\"secondary\" onClick={this.handleCloseModal}>\r\n                          <i class=\"fa fa-times-circle\"></i> Close\r\n                        </Button>\r\n                        <Button id=\"buttonAddBook\" type=\"submit\" className=\"btn btn-success\" variant=\"primary\" onClick={this.handleAddBook}>\r\n                          <i class=\"fa fa-plus\"></i> Add\r\n                        </Button>\r\n                      </Modal.Footer>\r\n                    </Modal>\r\n                    {/* modal add if data not exist*/}\r\n\r\n\r\n                    {/* modal add data exist*/}\r\n                    <Modal size=\"lg\" show={showAdd2} onHide={this.handleCloseModal}>\r\n                      <Modal.Header closeButton>\r\n                        <Modal.Title>Add Book Data</Modal.Title>\r\n                      </Modal.Header>\r\n                      <Modal.Body>\r\n                        <div class='container'>\r\n                          <div class=\"modal-body\">\r\n                            <form>\r\n                              <div class=\"form-group row\">\r\n                                <label for=\"addAuthorCode\" class=\"col-sm-2 col-form-label\">Author Name</label>\r\n                                <div class=\"col-sm-4 mb-3\">\r\n                                  <Select\r\n                                    className=\"mb-2\"\r\n                                    options={this.state.authorList}\r\n                                    onChange={this.handleChangeSelect1}\r\n                                  />\r\n                                  <Link to=\"/page/manageAuthor\" className=\"btn btn-light\">\r\n                                    <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more author</small>\r\n                                  </Link>\r\n                                </div>\r\n                                <label for=\"addBookDetailCode\" class=\"col-sm-2 col-form-label\">Book Details Info</label>\r\n                                <div class=\"col-sm-4\">\r\n                                  <Select\r\n                                    className=\"mb-2\"\r\n                                    options={this.state.bookDetailList}\r\n                                    onChange={this.handleChangeSelect2}\r\n                                  />\r\n                                  <Link to=\"/page/manageBookDetail\" className=\"btn btn-light\">\r\n                                    <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more book details</small>\r\n                                  </Link>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div class=\"form-group row\">\r\n                                <label for=\"addCategoryCode\" class=\"col-sm-2 col-form-label\">Category</label>\r\n                                <div class=\"col-sm-4 mb-3\">\r\n                                  <Select\r\n                                    className=\"mb-2\"\r\n                                    options={this.state.categoryList}\r\n                                    onChange={this.handleChangeSelect3}\r\n                                  />\r\n                                  <Link to=\"/page/manageCategory\" className=\"btn btn-light\">\r\n                                    <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more category</small>\r\n                                  </Link>\r\n                                </div>\r\n                                <label for=\"addPublisherCode\" class=\"col-sm-2 col-form-label\">Publisher</label>\r\n                                <div class=\"col-sm-4\">\r\n                                  <Select\r\n                                    className=\"mb-2\"\r\n                                    options={this.state.publisherList}\r\n                                    onChange={this.handleChangeSelect4}\r\n                                  />\r\n                                  <Link to=\"/page/managePublisher\" className=\"btn btn-light\">\r\n                                    <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more publisher</small>\r\n                                  </Link>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div class=\"form-group row\">\r\n                                <label for=\"addPublishedDate\" class=\"col-sm-2 col-form-label\">Published Date</label>\r\n                                <div class=\"col-sm-4\">\r\n                                  <DatePicker\r\n                                    selected={this.state.startDate}\r\n                                    onChange={this.handleChange}\r\n                                    dateFormat='yyyy-MM-dd'\r\n                                  />\r\n                                  <br />\r\n                                  <small className=\"text-muted\">(yyyy-MM-dd)</small>\r\n                                </div>\r\n                                <label for=\"addIsbn\" class=\"col-sm-2 col-form-label\">ISBN</label>\r\n                                <div class=\"col-sm-4\">\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    name=\"isbn\"\r\n                                    class=\"form-control\"\r\n                                    id=\"isbn\"\r\n                                    placeholder=\"ISBN...\"\r\n                                    onChange={(e) => this.setState({ isbn: e.target.value })}\r\n                                    value={this.state.isbn}\r\n                                    data-attribute-name=\"isbn\"\r\n                                    data-async\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n\r\n                            </form>\r\n                          </div>\r\n                        </div>\r\n                      </Modal.Body>\r\n                      <Modal.Footer>\r\n                        <Button className=\"btn btn-secondary\" variant=\"secondary\" onClick={this.handleCloseModal}>\r\n                          <i class=\"fa fa-times-circle\"></i> Close\r\n                        </Button>\r\n                        <Button id=\"buttonAddBook\" type=\"submit\" className=\"btn btn-success\" variant=\"primary\" onClick={this.handleAddBook2}>\r\n                          <i class=\"fa fa-plus\"></i> Add\r\n                        </Button>\r\n                      </Modal.Footer>\r\n                    </Modal>\r\n                    {/* modal add data exist*/}\r\n\r\n\r\n                    {/* modal edit */}\r\n                    <Modal size=\"lg\" show={showEdit} onHide={this.handleCloseModal}>\r\n                      <Modal.Header closeButton>\r\n                        <Modal.Title>Edit Book Data</Modal.Title>\r\n                      </Modal.Header>\r\n                      <Modal.Body>\r\n                        <div class='container'>\r\n                          <div class=\"modal-body\">\r\n                            <form>\r\n                              <div class=\"form-group row\">\r\n                                <label for=\"addAuthorCode\" class=\"col-sm-2 col-form-label\">Author Name</label>\r\n                                <div class=\"col-sm-4\">\r\n                                  <Select\r\n                                    className=\"mb-2\"\r\n                                    options={this.state.authorList}\r\n                                    onChange={this.handleChangeSelect1}\r\n                                  />\r\n                                  <Link to=\"/page/manageAuthor\" className=\"btn btn-light\">\r\n                                    <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more author</small>\r\n                                  </Link>\r\n                                </div>\r\n                                <label for=\"addBookDetailCode\" class=\"col-sm-2 col-form-label\">Book Details Info</label>\r\n                                <div class=\"col-sm-4\">\r\n                                  <Select\r\n                                    className=\"mb-2\"\r\n                                    options={this.state.bookDetailList}\r\n                                    onChange={this.handleChangeSelect2}\r\n                                  />\r\n                                  <Link to=\"/page/manageBookDetail\" className=\"btn btn-light\">\r\n                                    <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more book details</small>\r\n                                  </Link>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div class=\"form-group row\">\r\n                                <label for=\"addCategoryCode\" class=\"col-sm-2 col-form-label\">Category</label>\r\n                                <div class=\"col-sm-4\">\r\n                                  <Select\r\n                                    className=\"mb-2\"\r\n                                    options={this.state.categoryList}\r\n                                    onChange={this.handleChangeSelect3}\r\n                                  />\r\n                                  <Link to=\"/page/manageCategory\" className=\"btn btn-light\">\r\n                                    <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more category</small>\r\n                                  </Link>\r\n                                </div>\r\n                                <label for=\"addPublisherCode\" class=\"col-sm-2 col-form-label\">Publisher</label>\r\n                                <div class=\"col-sm-4\">\r\n                                  <Select\r\n                                    className=\"mb-2\"\r\n                                    options={this.state.publisherList}\r\n                                    onChange={this.handleChangeSelect4}\r\n                                  />\r\n                                  <Link to=\"/page/managePublisher\" className=\"btn btn-light\">\r\n                                    <i class=\"fa fa-plus\"></i><small className=\"text-muted\"> Add more publisher</small>\r\n                                  </Link>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div class=\"form-group row\">\r\n                                <label for=\"addPublishedDate\" class=\"col-sm-2 col-form-label\">Published Date</label>\r\n                                <div class=\"col-sm-4\">\r\n                                  <DatePicker\r\n                                    selected={this.state.startDate}\r\n                                    onChange={this.handleChange}\r\n                                    dateFormat='yyyy-MM-dd'\r\n                                  />\r\n                                  <br />\r\n                                  <small className=\"text-muted\">(yyyy-MM-dd)</small>\r\n                                </div>\r\n                                <label for=\"addIsbn\" class=\"col-sm-2 col-form-label\">ISBN</label>\r\n                                <div class=\"col-sm-4\">\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    name=\"isbn\"\r\n                                    class=\"form-control\"\r\n                                    id=\"isbn\"\r\n                                    placeholder=\"ISBN...\"\r\n                                    onChange={(e) => this.setState({ isbn: e.target.value })}\r\n                                    value={this.state.isbn}\r\n                                    data-attribute-name=\"isbn\"\r\n                                    data-async\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n\r\n                            </form>\r\n                          </div>\r\n                        </div>\r\n                      </Modal.Body>\r\n                      <Modal.Footer>\r\n                        <Button className=\"btn btn-secondary\" variant=\"secondary\" onClick={this.handleCloseModal}>\r\n                          Cancel\r\n                        </Button>\r\n                        <Button className=\"btn btn-success\" variant=\"primary\" onClick={this.handleSaveEdit}>\r\n                          Save\r\n                        </Button>\r\n                      </Modal.Footer>\r\n                    </Modal>\r\n                    {/* modal edit */}\r\n\r\n\r\n                    {/* modal delete */}\r\n                    <Modal show={showDelete} onHide={this.handleCloseModal}>\r\n                      <Modal.Header closeButton>\r\n                        <Modal.Title>Delete Data</Modal.Title>\r\n                      </Modal.Header>\r\n                      <Modal.Body>\r\n                        <div class='container'>\r\n                          <p>Are you sure you want to delete book data?</p>\r\n                        </div>\r\n                      </Modal.Body>\r\n                      <Modal.Footer>\r\n                        <Button className=\"btn btn-secondary\" variant=\"secondary\" onClick={this.handleCloseModal}>\r\n                          Close\r\n                        </Button>\r\n                        <Button className=\"btn btn-warning\" variant=\"primary\" onClick={this.handleDelete}>\r\n                          Delete\r\n                        </Button>\r\n                      </Modal.Footer>\r\n                    </Modal>\r\n                    {/* modal delete */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div >\r\n        </section >\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookManagement;","C:\\Users\\abdig\\Desktop\\React-Library\\src\\components\\Content.js",[],"C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\Login\\Login.js",["145"],"C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\Register\\Register.js",["146"],"C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\ProfileUser\\ProfileUser.js",["147","148","149"],"C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\BookDetailManagement\\bookdetailmanagement.js",[],"C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\Payment\\NoBills.js",[],"C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\Payment\\FineLists.js",[],"C:\\Users\\abdig\\Desktop\\React-Library\\src\\Navigations\\MainNavigationsUser.js",["150","151","152"],"C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\Payment\\TopUpBox.js",[],"C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\CategoryManagement\\categoryManagement.js",[],"C:\\Users\\abdig\\Desktop\\React-Library\\src\\Screens\\PublisherManagement\\publishermanagement.js",[],{"ruleId":"153","severity":1,"message":"154","line":14,"column":13,"nodeType":"155","messageId":"156","endLine":14,"endColumn":16},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"153","severity":1,"message":"161","line":2,"column":10,"nodeType":"155","messageId":"156","endLine":2,"endColumn":18},{"ruleId":"153","severity":1,"message":"162","line":45,"column":28,"nodeType":"155","messageId":"156","endLine":45,"endColumn":36},{"ruleId":"163","severity":1,"message":"164","line":71,"column":29,"nodeType":"165","endLine":71,"endColumn":88},{"ruleId":"163","severity":1,"message":"166","line":74,"column":29,"nodeType":"165","endLine":75,"endColumn":71},{"ruleId":"163","severity":1,"message":"164","line":80,"column":37,"nodeType":"165","endLine":80,"endColumn":66},{"ruleId":"163","severity":1,"message":"164","line":87,"column":37,"nodeType":"165","endLine":87,"endColumn":66},{"ruleId":"163","severity":1,"message":"164","line":94,"column":37,"nodeType":"165","endLine":94,"endColumn":66},{"ruleId":"163","severity":1,"message":"164","line":102,"column":41,"nodeType":"165","endLine":102,"endColumn":70},{"ruleId":"163","severity":1,"message":"164","line":140,"column":29,"nodeType":"165","endLine":140,"endColumn":88},{"ruleId":"163","severity":1,"message":"166","line":143,"column":29,"nodeType":"165","endLine":144,"endColumn":71},{"ruleId":"163","severity":1,"message":"164","line":149,"column":37,"nodeType":"165","endLine":149,"endColumn":66},{"ruleId":"163","severity":1,"message":"164","line":156,"column":37,"nodeType":"165","endLine":156,"endColumn":66},{"ruleId":"163","severity":1,"message":"164","line":163,"column":37,"nodeType":"165","endLine":163,"endColumn":66},{"ruleId":"163","severity":1,"message":"164","line":171,"column":41,"nodeType":"165","endLine":171,"endColumn":70},{"ruleId":"163","severity":1,"message":"166","line":182,"column":29,"nodeType":"165","endLine":183,"endColumn":71},{"ruleId":"163","severity":1,"message":"164","line":188,"column":37,"nodeType":"165","endLine":188,"endColumn":66},{"ruleId":"167","severity":1,"message":"168","line":189,"column":65,"nodeType":"165","endLine":189,"endColumn":121},{"ruleId":"163","severity":1,"message":"164","line":199,"column":37,"nodeType":"165","endLine":199,"endColumn":66},{"ruleId":"167","severity":1,"message":"168","line":200,"column":65,"nodeType":"165","endLine":200,"endColumn":121},{"ruleId":"163","severity":1,"message":"164","line":211,"column":37,"nodeType":"165","endLine":211,"endColumn":66},{"ruleId":"167","severity":1,"message":"168","line":212,"column":65,"nodeType":"165","endLine":212,"endColumn":121},{"ruleId":"163","severity":1,"message":"164","line":223,"column":37,"nodeType":"165","endLine":223,"endColumn":66},{"ruleId":"167","severity":1,"message":"168","line":224,"column":65,"nodeType":"165","endLine":224,"endColumn":121},{"ruleId":"163","severity":1,"message":"164","line":236,"column":41,"nodeType":"165","endLine":236,"endColumn":70},{"ruleId":"157","replacedBy":"169"},{"ruleId":"159","replacedBy":"170"},{"ruleId":"167","severity":1,"message":"168","line":35,"column":25,"nodeType":"165","endLine":35,"endColumn":96},{"ruleId":"153","severity":1,"message":"171","line":9,"column":8,"nodeType":"155","messageId":"156","endLine":9,"endColumn":13},{"ruleId":"172","severity":1,"message":"173","line":44,"column":47,"nodeType":"174","messageId":"175","endLine":44,"endColumn":49},{"ruleId":"163","severity":1,"message":"164","line":177,"column":69,"nodeType":"165","endLine":177,"endColumn":194},{"ruleId":"176","severity":1,"message":"177","line":184,"column":69,"nodeType":"165","endLine":184,"endColumn":133},{"ruleId":"176","severity":1,"message":"177","line":196,"column":41,"nodeType":"165","endLine":196,"endColumn":105},{"ruleId":"163","severity":1,"message":"164","line":218,"column":57,"nodeType":"165","endLine":218,"endColumn":192},{"ruleId":"153","severity":1,"message":"171","line":9,"column":8,"nodeType":"155","messageId":"156","endLine":9,"endColumn":13},{"ruleId":"172","severity":1,"message":"173","line":32,"column":47,"nodeType":"174","messageId":"175","endLine":32,"endColumn":49},{"ruleId":"163","severity":1,"message":"164","line":127,"column":69,"nodeType":"165","endLine":128,"endColumn":114},{"ruleId":"163","severity":1,"message":"164","line":130,"column":69,"nodeType":"165","endLine":130,"endColumn":204},{"ruleId":"176","severity":1,"message":"177","line":137,"column":69,"nodeType":"165","endLine":137,"endColumn":133},{"ruleId":"153","severity":1,"message":"178","line":351,"column":75,"nodeType":"155","messageId":"156","endLine":351,"endColumn":84},{"ruleId":"172","severity":1,"message":"179","line":408,"column":110,"nodeType":"174","messageId":"180","endLine":408,"endColumn":112},{"ruleId":"172","severity":1,"message":"179","line":416,"column":100,"nodeType":"174","messageId":"180","endLine":416,"endColumn":102},{"ruleId":"172","severity":1,"message":"179","line":424,"column":104,"nodeType":"174","messageId":"180","endLine":424,"endColumn":106},{"ruleId":"172","severity":1,"message":"179","line":432,"column":106,"nodeType":"174","messageId":"180","endLine":432,"endColumn":108},{"ruleId":"172","severity":1,"message":"179","line":449,"column":111,"nodeType":"174","messageId":"180","endLine":449,"endColumn":113},{"ruleId":"153","severity":1,"message":"181","line":8,"column":8,"nodeType":"155","messageId":"156","endLine":8,"endColumn":19},{"ruleId":"153","severity":1,"message":"181","line":8,"column":8,"nodeType":"155","messageId":"156","endLine":8,"endColumn":19},{"ruleId":"153","severity":1,"message":"171","line":3,"column":8,"nodeType":"155","messageId":"156","endLine":3,"endColumn":13},{"ruleId":"176","severity":1,"message":"177","line":245,"column":65,"nodeType":"165","endLine":246,"endColumn":109},{"ruleId":"182","severity":1,"message":"183","line":295,"column":152,"nodeType":"184","messageId":"185","endLine":295,"endColumn":154},{"ruleId":"153","severity":1,"message":"186","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":26},{"ruleId":"153","severity":1,"message":"187","line":26,"column":8,"nodeType":"155","messageId":"156","endLine":26,"endColumn":28},{"ruleId":"153","severity":1,"message":"181","line":31,"column":8,"nodeType":"155","messageId":"156","endLine":31,"endColumn":19},"no-unused-vars","'get' is defined but never used.","Identifier","unusedVar","no-native-reassign",["188"],"no-negated-in-lhs",["189"],"'Redirect' is defined but never used.","'username' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["188"],["189"],"'axios' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'baseImage' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'AuthService' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Component' is defined but never used.","'BookDetailManagement' is defined but never used.","no-global-assign","no-unsafe-negation"]