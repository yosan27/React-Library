[{"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\DetailPage\\detailpage.js":"1","C:\\Users\\User\\Desktop\\React-Development\\src\\Services\\auth.service.js":"2","C:\\Users\\User\\Desktop\\React-Development\\src\\Services\\axios-instance.js":"3","C:\\Users\\User\\Desktop\\React-Development\\src\\components\\Content.js":"4","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\CatagoryResult\\CategoryResult.js":"5","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\SearchResult\\SearchResult.js":"6","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\SeeMoreBooks\\SeeMoreBooks.js":"7","C:\\Users\\User\\Desktop\\React-Development\\src\\components\\HeaderUser.js":"8","C:\\Users\\User\\Desktop\\React-Development\\src\\Navigations\\MainNavigationsUser.js":"9","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Wishlist\\Wishlist.js":"10","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Cart\\Cart.js":"11","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Login\\Login.js":"12","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Register\\registerAdmin.js":"13","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Profile\\Profile.js":"14","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\ManageDonation\\index.js":"15","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\FineManagement\\fineManagement.js":"16","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\AuthorManagement\\AuthorManagement.js":"17","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Form\\ReturnForm.js":"18","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Payment\\InstructionsATM.js":"19","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Payment\\NoBills.js":"20","C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Payment\\TopUpBar.js":"21"},{"size":31615,"mtime":1610618240942,"results":"22","hashOfConfig":"23"},{"size":931,"mtime":1610619077025,"results":"24","hashOfConfig":"23"},{"size":678,"mtime":1610619082226,"results":"25","hashOfConfig":"23"},{"size":17255,"mtime":1610622944598,"results":"26","hashOfConfig":"23"},{"size":6179,"mtime":1610624155010,"results":"27","hashOfConfig":"23"},{"size":4570,"mtime":1610624206611,"results":"28","hashOfConfig":"23"},{"size":3608,"mtime":1610624222033,"results":"29","hashOfConfig":"23"},{"size":9668,"mtime":1610624004061,"results":"30","hashOfConfig":"23"},{"size":6932,"mtime":1610553486081,"results":"31","hashOfConfig":"23"},{"size":7393,"mtime":1610553486127,"results":"32","hashOfConfig":"23"},{"size":14089,"mtime":1610553486087,"results":"33","hashOfConfig":"23"},{"size":6682,"mtime":1610553486107,"results":"34","hashOfConfig":"23"},{"size":10398,"mtime":1610553486122,"results":"35","hashOfConfig":"23"},{"size":20850,"mtime":1610607277601,"results":"36","hashOfConfig":"23"},{"size":29740,"mtime":1610601617334,"results":"37","hashOfConfig":"23"},{"size":17760,"mtime":1610553486100,"results":"38","hashOfConfig":"23"},{"size":9991,"mtime":1610607277591,"results":"39","hashOfConfig":"23"},{"size":25080,"mtime":1610625446365,"results":"40","hashOfConfig":"23"},{"size":1794,"mtime":1610553486113,"results":"41","hashOfConfig":"23"},{"size":323,"mtime":1610553486114,"results":"42","hashOfConfig":"23"},{"size":1395,"mtime":1610553486115,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"14o26fl",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\DetailPage\\detailpage.js",["88","89","90","91","92","93","94"],"import React, { Component } from 'react'\r\nimport { Container, Jumbotron, Modal, Button } from 'react-bootstrap'\r\n// import API from \"../../api\";\r\nimport './detailpage.css'\r\nimport swal from 'sweetalert';\r\nimport Moment from 'react-moment';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Box from '@material-ui/core/Box';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Axios from \"../../Services/axios-instance\";\r\nimport AuthService from \"../../Services/auth.service\";\r\nimport axios from 'axios';\r\n\r\nclass DetailPage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editClicked: false,\r\n      bookDetailsCode: '',\r\n      heart: '\\u2661',\r\n      bookData: '',\r\n      imageAvailable: false,\r\n      bookAvailable: '',\r\n      title: '',\r\n      publishedDate: '',\r\n      subtitle: '',\r\n      author: '',\r\n      category: '',\r\n      categoryCode: '',\r\n      show: false,\r\n      register: '',\r\n      pages: '',\r\n      descriptions: '',\r\n      reviewData: [],\r\n      rate: '',\r\n      review: '',\r\n      date: '',\r\n      userCode: '',\r\n      id: '',\r\n      bookCode: this.props.match.params.bookcode,\r\n      popular: [],\r\n      errors: []\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      // const  { bookCode } = this.props.location.state;\r\n      const res = await Axios.get(`book/` + this.state.bookCode);\r\n      const bookData = res.data.data;\r\n      const bookDataImage = bookData.bookDetailsEntity.cover\r\n\r\n    //   if (bookData.id) {\r\n    //     this.setState({ bookAvailable: 'Available' });\r\n    //   } else {\r\n    //     this.setState({ bookAvailable: 'Not Available' });\r\n    //   }\r\n\r\n      if (bookData.bookDetailsEntity.bookSubtitle !== undefined) {\r\n        this.setState({ subtitle: bookData.bookDetailsEntity.bookSubtitle });\r\n      }\r\n\r\n      this.setState({ bookData: bookData });\r\n      this.setState({ register: bookData.bookCode });\r\n      this.setState({ bookDetailsCode: bookData.bookDetailsEntity.bookDetailCode });\r\n      this.setState({ title: bookData.bookDetailsEntity.bookTitle });\r\n      this.setState({ category: bookData.categoryEntity.categoryName });\r\n      this.setState({ categoryCode: bookData.categoryEntity.categoryCode });\r\n      this.setState({ publishedDate: bookData.publishedDate });\r\n      this.setState({ author: bookData.authorEntity.authorName });\r\n      this.setState({ pages: bookData.bookDetailsEntity.numberOfPages });\r\n      this.setState({ bookDataImage: bookDataImage })\r\n      this.setState({ descriptions: bookData.bookDetailsEntity.description })\r\n      console.log(this.state.categoryCode)\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    Axios.get(`popular/` + this.state.categoryCode).then((res) => {\r\n      const popular = res.data.data;\r\n      const popularWithoutCurrent = popular.filter((word) => word.bookCode !== this.state.bookCode);\r\n        this.setState({ popular: popularWithoutCurrent })\r\n    })\r\n\r\n      window.focus();\r\n      window.scrollBy({\r\n        top: 0,\r\n        left: 270,\r\n        behavior: 'smooth'\r\n      });\r\n  }\r\n\r\n  handleWishlist = () => {\r\n    const wishdto = {\r\n      bookDetailsCode: this.state.bookDetailsCode,\r\n      userCode: AuthService.getUserCode()\r\n    }\r\n    console.log(wishdto)\r\n    Axios.post('wishlist', wishdto)\r\n      .then((response) => {\r\n        console.log(response);\r\n        swal(\"Success!\", \"Book Has Been Added To Your Wishlist\", \"success\")\r\n      }).catch(function (error) {\r\n        if (error.response) {\r\n          console.log(error.response.data);\r\n          console.log(error.response.status);\r\n          console.log(error.response.headers);\r\n        } else if (error.request) {\r\n          console.log(error.request);\r\n        } else {\r\n          console.log('Error', error.message);\r\n        }\r\n      })\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ show: false })\r\n  }\r\n\r\n  handleCart = () => {\r\n    this.setState({ show: false })\r\n    const wishdto = {\r\n      bookDetailsCode: this.state.bookDetailsCode,\r\n      userCode: AuthService.getUserCode()\r\n    }\r\n    console.log(wishdto)\r\n    Axios.post('cart', wishdto)\r\n      .then((response) => {\r\n        console.log(response);\r\n        swal(\"Success!\", \"Book Has Been Added To Your Cart\", \"success\")\r\n        window.location.reload()\r\n      }).catch(function (error) {\r\n        if (error.response) {\r\n          console.log(error.response.data);\r\n          console.log(error.response.status);\r\n          console.log(error.response.headers);\r\n        } else if (error.request) {\r\n          console.log(error.request);\r\n        } else {\r\n          console.log('Error', error.message);\r\n        }\r\n      })\r\n  }\r\n\r\n  handleShow = () => {\r\n    this.setState({ show: true })\r\n  }\r\n\r\n  handlePopClick = (bkcd) => {\r\n    this.setState({ bookCode: bkcd, editClicked : true });\r\n  }\r\n\r\n  review = (bkcd) => {\r\n    Axios.get(`reviewLook/${bkcd}`).then((res) => {\r\n      this.setState({ reviewData: res.data });   \r\n      console.log(res.data)   \r\n    })\r\n  }\r\n\r\n  changeReviewHandler = (e) => {\r\n    this.setState({review: e.target.value})\r\n  }\r\n\r\n  changeRateHandler = (e) => {\r\n    this.setState({rate: e.target.value})\r\n  }\r\n\r\n  handlePostReview = () => {\r\n    let reviewData = {\r\n      userCode: AuthService.getUserCode(),\r\n      rate: this.state.rate,\r\n      review: this.state.review,\r\n      bookDetailCode: this.state.bookDetailsCode\r\n    }\r\n    Axios.post('review', reviewData).then(() => {\r\n      swal(\"Success!\", \"Review Data Has Been Added\", \"success\").then(() => {\r\n        window.location.reload()  \r\n    })\r\n    }) \r\n    .catch((error) => {\r\n      swal(\"Oops!\", \"Please try again\", \"error\");\r\n    })\r\n\r\n  }\r\n\r\n  handlePutReview = (e) => {\r\n        let edit ={\r\n          review: this.state.review,\r\n          rate: this.state.rate,\r\n          bookDetailCode: this.state.bookDetailsCode,\r\n          userCode: AuthService.getUserCode()\r\n        }\r\n        Axios.put(`review/${this.state.id}`, edit).then((e) => {\r\n          swal(\"Success!\", \"Review Data Has Been Added\", \"success\").then(() => {\r\n            window.location.reload()  \r\n        })\r\n        })\r\n        \r\n  }\r\n\r\n  handleDeleteReview = (id) => {\r\n    Axios.delete(`review/${id}`).then(() => {\r\n      swal({\r\n        title: \"Are you sure?\",\r\n        text: \"Once deleted, you will not be able to recover this data!\",\r\n        icon: \"warning\",\r\n        buttons: true,\r\n        dangerMode: true\r\n      }).then((Delete) => {\r\n        if (Delete) {\r\n            swal(\"Deleted!\", \"Review Is Delete\", \"success\").then(() => {\r\n                this.setState({ buttonClick: true })\r\n                window.location.reload()\r\n            })\r\n        } else {\r\n            swal(\"Canceled!\", \"Review Is Safe\", \"error\")\r\n          }\r\n        }).catch(function(error){\r\n            swal(\"Failed!\", error.response.data.message, \"error\");\r\n        })\r\n    })\r\n  }\r\n\r\n  getById(id) {\r\n    Axios.get(`review/${id}`).then((res) => {\r\n      this.setState({\r\n        id: res.data.id\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  async componentDidUpdate(prevState) {\r\n    if (this.state.editClicked) {\r\n      try {\r\n        const res = await Axios.get(`book/` + this.state.bookCode);\r\n        const bookData = res.data.data;\r\n        const bookDataImage = bookData.bookDetailsEntity.cover\r\n        this.setState({ \r\n          bookData: bookData,\r\n          register: bookData.bookCode,\r\n          bookDetailsCode: bookData.bookDetailsEntity.bookDetailCode, \r\n          title: bookData.bookDetailsEntity.bookTitle,\r\n          subtitle: bookData.bookDetailsEntity.bookSubtitle,\r\n          category: bookData.categoryEntity.categoryName,\r\n          categoryCode: bookData.categoryEntity.categoryCode,\r\n          publishedDate: bookData.publishedDate,\r\n          author: bookData.authorEntity.authorName,\r\n          pages: bookData.bookDetailsEntity.numberOfPages,\r\n          bookDataImage: bookDataImage,\r\n          descriptions: bookData.bookDetailsEntity.description\r\n        });\r\n\r\n        Axios.get(`popular/` + this.state.categoryCode).then((res) => {\r\n          const popular = res.data.data;\r\n          const popularWithoutCurrent = popular.filter((word) => word.bookCode !== this.state.bookCode);\r\n            this.setState({ popular: popularWithoutCurrent, editClicked: false })\r\n        });\r\n\r\n      } catch (error) {\r\n        console.log(error);\r\n      }; \r\n    }\r\n  }\r\n    \r\n  setRate(rate) {\r\n    if(rate === 1) {\r\n        return <div> <span class=\"fa fa-star checked\"></span>\r\n        <span class=\"fa fa-star\"></span>\r\n        <span class=\"fa fa-star \"></span>\r\n        <span class=\"fa fa-star\"></span>\r\n        <span class=\"fa fa-star\"></span>\r\n        </div>\r\n    } else if(rate === 2) {\r\n        return <div> <span class=\"fa fa-star checked\"></span>\r\n        <span class=\"fa fa-star checked\"></span>\r\n        <span class=\"fa fa-star \"></span>\r\n        <span class=\"fa fa-star\"></span>\r\n        <span class=\"fa fa-star\"></span>\r\n        </div>\r\n    } else if(rate === 3) {\r\n        return <div> <span class=\"fa fa-star checked\"></span>\r\n        <span class=\"fa fa-star checked\"></span>\r\n        <span class=\"fa fa-star checked\"></span>\r\n        <span class=\"fa fa-star\"></span>\r\n        <span class=\"fa fa-star\"></span>\r\n        </div>\r\n    } else if(rate === 4) {\r\n        return <div> <span class=\"fa fa-star checked\"></span>\r\n        <span class=\"fa fa-star checked\"></span>\r\n        <span class=\"fa fa-star checked\"></span>\r\n        <span class=\"fa fa-star checked\"></span>\r\n        <span class=\"fa fa-star \"></span>\r\n        </div>\r\n    } else if(rate === 5) {\r\n        return <div> <span class=\"fa fa-star checked\"></span>\r\n        <span class=\"fa fa-star checked\"></span>\r\n        <span class=\"fa fa-star checked\"></span>\r\n        <span class=\"fa fa-star checked\"></span>\r\n        <span class=\"fa fa-star checked\"></span>\r\n        </div>\r\n    } \r\n  }\r\n\r\n  render() {\r\n    const { popular, bookData, register, bookDataImage, bookAvailable, title, subtitle, author, category, publishedDate, show, pages, descriptions } = this.state;\r\n    let edit;\r\n    return (\r\n      <div className=\"right_col\" role=\"main\" style={{ minHeight: '100vh' }}>\r\n        <section className=\"mt-5 pt-5\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12 col-lg-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <h3 className=\"card-title\">Details</h3>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    {/* banner */}\r\n                    <Jumbotron className=\"bannerDetail\"\r\n                      style={{ backgroundImage: `url(${(!!bookData && AuthService.API_URL() + \"getFile/\" + bookDataImage) ? (AuthService.API_URL() + \"getFile/\" + bookDataImage) : \"/assets/images/cover.png\"})` }}\r\n                     \r\n                      fluid>\r\n                      <Container>\r\n                      </Container>\r\n                    </Jumbotron>\r\n\r\n                    {/* Main Content */}\r\n                    <div className='container'>\r\n                      <div className='container absolute'>\r\n                        {/* info atas */}\r\n                        <div className=\"row description\">\r\n                          <div className=\"col-lg col-sm-4 text-center align-self-center\">\r\n                            <button id='bookCategories' type=\"button\" className=\"btn btn-warning novel mb-3\">{category}</button>\r\n                            <h1 id='bookTitle' className=\"text-uppercase mb-3\">{title}</h1>\r\n                            <p id='publishedAt' className='mb-3'>\r\n                              <Moment format=\"DD/MM/YYYY\">\r\n                                {publishedDate}\r\n                              </Moment>\r\n                            </p>\r\n                            <button id='bookWishlist' type=\"button\" className=\"btn btn-outline-dark mb-3\" onClick={this.handleWishlist}>\r\n                              <i class=\"fa fa-heart\" ></i>\r\n                            </button>\r\n                          </div>\r\n                          <div className=\"col-lg col-sm-4 text-center align-self-center\">\r\n                            <h4 id='isAvailable' className=\"text-success\">{bookAvailable}</h4>\r\n                          </div>\r\n                          <div className=\"col-lg col-sm-4 text-center align-self-center\">\r\n                            <img id='bookCover'\r\n                              src={(!!bookData && AuthService.API_URL() + \"getFile/\" + bookDataImage) ? AuthService.API_URL() + \"getFile/\" + bookDataImage : \"/assets/images/cover.png\"}\r\n                              alt=\"cover\" className=\"rounded novel\" />\r\n                          </div>\r\n                        </div>\r\n                        {/* info atas */}\r\n\r\n                        {/* info bawah */}\r\n                        {/* Descriptions & most popular */}\r\n                        <div class=\"row mt-5\">\r\n                          {/* Description */}\r\n                          <div class=\"col-lg-8\">\r\n                            <h5 class='pb-2'>Descriptions</h5>\r\n                            <hr style={{ border: \"5% solid  #f1f1f1\" }}></hr>\r\n                            <h5><b id='bookSubtitle'>{subtitle?subtitle:title}</b></h5>\r\n                            <p>- {author}</p>\r\n                            <div class=\" mb-5 text-justify\">\r\n                              <p id='bookDescriptionHead'>\r\n                                {descriptions}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                          {/* Description */}\r\n\r\n                          {/* most popular */}\r\n                          <div class=\"col-lg-3\">\r\n                            <h5 class='pb-2 text-center'>Popular {category} books</h5>\r\n                            <hr />\r\n\r\n                            {/* popular */}\r\n                            {\r\n                            popular.map((pop, index) => {\r\n                              return (\r\n                                  <Button \r\n                                    id=\"pop\"\r\n                                    className=\"ml-4\"\r\n                                    style={{\r\n                                      backgroundColor: \"Transparent\",\r\n                                      color: \"#000\",\r\n                                      border: \"none\",\r\n                                      cursor: \"pointer\"}}\r\n                                    onClick = { ()=> {this.handlePopClick(pop.bookCode)}}\r\n                                  >\r\n                                    <div class=\"row\">\r\n                                      <div class=\"col text-right pt-2\">\r\n                                        <img rounded height=\"80\" src={(!!bookData && AuthService.API_URL() + \"getFile/\" + pop.bookDetailsEntity.cover) ? AuthService.API_URL() + \"getFile/\" + pop.bookDetailsEntity.cover : \"/assets/images/cover.png\"} alt=\"\"/>\r\n                                      </div>\r\n                                      <div\r\n                                        class=\"col\"\r\n                                        style={{ display: 'flex', flexWrap: 'wrap', alignContent: 'center' }}>\r\n                                        <div>\r\n                                          <h6 class=\"mb-0 \">{pop.bookDetailsEntity.bookTitle}</h6>\r\n                                          <h6 class=\"mb-0 \">- {pop.authorEntity.authorName}</h6>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </Button>\r\n                                )\r\n                              })\r\n                            } \r\n                            {/* popular */}\r\n\r\n                            {/* button borrow */}\r\n                            <div className=\"text-center mt-5\">\r\n                              <Button className=\"btn btn-warning borrow\" variant=\"primary\" onClick={this.handleShow}>\r\n                                Borrow\r\n                              </Button>\r\n                              <button className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#review\" onClick={() => this.review(this.state.bookDetailsCode)} >\r\n                                   Review\r\n                                </button>\r\n                            </div>\r\n                            {/* button borrow */}\r\n                          </div>\r\n                          {/* most popular */}\r\n                        </div>\r\n                        {/* Descriptions & most popular */}\r\n                        {/* info bawah */}\r\n                      </div>\r\n                    </div>\r\n                    {/* Main Content */}\r\n\r\n                    {/* modal borrow */}\r\n                    <Modal show={show} onHide={this.handleClose}>\r\n                      <Modal.Header closeButton>\r\n                        <Modal.Title>Book Loan Form</Modal.Title>\r\n                      </Modal.Header>\r\n                      <Modal.Body>\r\n                        <div class='container'>\r\n                          <div class=\"row-lg\">\r\n                            <div class=\"col-6-lg d-flex justify-content-center align-items-center\">\r\n                              <img class=\"rounded novel\" src={bookDataImage ? bookDataImage : 'https://res.cloudinary.com/todidewantoro/image/upload/v1604943658/bootcamp/covernya_ejy4v1.jpg'} alt=\"\"/>\r\n                            </div>\r\n                            <div\r\n                              className='container'>\r\n                              <div class=\"col-6-lg mt-3 justify-content-start\">\r\n                                <div>\r\n                                  <div class=\"row\">\r\n                                    <div class=\"col-5\">Register</div>\r\n                                    <div class=\"col-2\">:</div>\r\n                                    <div class=\"col-5\">{register}</div>\r\n                                  </div>\r\n                                  <div class=\"row\">\r\n                                    <div class=\"col-5\">Title</div>\r\n                                    <div class=\"col-2\">:</div>\r\n                                    <div class=\"col-5\">{title}</div>\r\n                                  </div>\r\n                                  <div class=\"row\">\r\n                                    <div class=\"col-5\">Author</div>\r\n                                    <div class=\"col-2\">:</div>\r\n                                    <div class=\"col-5\">{author}</div>\r\n                                  </div>\r\n                                  <div class=\"row\">\r\n                                    <div class=\"col-5\">Pages</div>\r\n                                    <div class=\"col-2\">:</div>\r\n                                    <div class=\"col-5\">{pages}</div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Modal.Body>\r\n                      <Modal.Footer>\r\n                        <Button className=\"btn btn-secondary\" variant=\"secondary\" onClick={this.handleClose}>\r\n                          <i class=\"fa fa-times-circle\"></i> Close\r\n                        </Button>\r\n                        <Button className=\"btn btn-success\" variant=\"primary\" onClick={this.handleCart}>\r\n                          <i class=\"fa fa-plus\"></i> Cart\r\n                        </Button>\r\n                      </Modal.Footer>\r\n                    </Modal>\r\n                    {/* modal borrow */}\r\n                    {/* modal look review*/}\r\n                    <div className=\"modal fade\" id=\"review\" tabIndex=\"-1\" aria-labelledby=\"infoLabel\" aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog\">\r\n                            <div className=\"modal-content\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"infoLabel\">Info Review</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                    <div className=\"modal-body\">\r\n                                    {this.state.reviewData.map((book, index) => {\r\n                                    return(\r\n                                        <form key={index}>\r\n                                          \r\n                                                <div class=\"form-group row\">\r\n                                                <label for=\"editImage\" class=\"col-sm-3 col-form-label\">By {book.userEntity.userName}              \r\n                                                <br />       \r\n                                                {this.setRate(book.rate)} \r\n                                               \r\n                                                </label>\r\n                                                <div class=\"col-sm-7\" >\r\n                                                    {book.review}\r\n                                                </div>\r\n                                                <div class=\"col-sm-2\" >                                         \r\n                                                { book.userEntity.userCode == AuthService.getUserCode()? <button type=\"button\" className=\"btn-sm btn-secondary\" data-toggle=\"modal\" data-target=\"#reviewEdit\" onClick={() => this.getById(book.id)}>Edit</button>\r\n                                                : <p></p>}\r\n                                                { book.userEntity.userCode == AuthService.getUserCode()? <button type=\"button\" className=\"btn-sm btn-danger\"  onClick={() => this.handleDeleteReview(book.id)}>Delete</button>\r\n                                                : <p></p>}\r\n                                                </div>\r\n                                                </div>\r\n                                                <hr />\r\n                                        </form>   \r\n                                        );\r\n                                    })}  \r\n                                        </div>\r\n                                    \r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                    \r\n                                    <button className=\"btn btn-primary rounded-sm w-30 mr-1\" data-toggle=\"modal\" data-target=\"#reviewAdd\">\r\n                                        <i className=\"fa fa-edit\"></i>Add Review\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>                                           \r\n                    {/* Modal look review */}\r\n                    {/* Modal create review */}\r\n                    <div className=\"modal fade\" id=\"reviewAdd\" tabIndex=\"-1\" aria-labelledby=\"addLabel\" aria-hidden=\"true\">\r\n                          <div className=\"modal-dialog\">\r\n                              <div className=\"modal-content\">\r\n                                  <div className=\"modal-header\">\r\n                                      <h5 className=\"modal-title\" id=\"addLabel\">Add Review</h5>\r\n                                      <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                          <span aria-hidden=\"true\" className=\"modal-clear\">&times;</span>\r\n                                      </button>\r\n                                  </div>\r\n                                  <div className=\"modal-body\">\r\n                                      <form>\r\n                                      <div class=\"form-group row\">\r\n                                          <div class=\"col-sm-12 text-center\">\r\n                                          <img class=\"rounded novel\" src={bookDataImage ? bookDataImage : 'https://res.cloudinary.com/todidewantoro/image/upload/v1604943658/bootcamp/covernya_ejy4v1.jpg'} alt=\"\"/>\r\n                                          </div>\r\n                                      </div>\r\n                                      <div className=\"form-group row\">\r\n                                          <div className=\"col-sm-9\">\r\n                                              <input type=\"hidden\" className=\"form-control input\" name=\"bookDetailsCode\" readOnly\r\n                                              value={this.state.bookDetailsCode} />\r\n                                          </div>\r\n                                      </div>\r\n                                    <div class=\"form-group row\">\r\n                                          <label for=\"rating\" class=\"col-sm-2 col-form-label\">Rating</label>\r\n                                          <div class=\"col-sm-10\">\r\n                                          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n                                              <Rating\r\n                                              name=\"simple-controlled\"\r\n                                              name=\"rate\"\r\n                                              id=\"rate\"\r\n                                              onChange={this.changeRateHandler}\r\n                                              value={this.state.rate}\r\n                                              />\r\n                                          </Box>           \r\n                                          </div>\r\n                                      </div>\r\n                                      <div class=\"form-group row\">\r\n                                          <label for=\"editRev\" class=\"col-sm-2 col-form-label\">Review</label>\r\n                                          <div class=\"col-sm-10\">\r\n                                          <input className=\"form-control input\" name=\"review\" id=\"review\" placeholder=\"Review...\"\r\n                                              value={this.state.review} onChange={this.changeReviewHandler} />\r\n                                          </div>\r\n                                    </div>\r\n                                      </form>\r\n                                  </div>\r\n                                  <div className=\"modal-footer\">\r\n                                      <button className=\"btn btn-secondary modal-clear\" data-dismiss=\"modal\">Cancel</button>\r\n                                      <button className=\"btn btn-success\" data-dismiss=\"modal\" onClick={this.handlePostReview}>Add</button>\r\n                                  </div>\r\n                              </div>\r\n                          </div>\r\n                    </div>\r\n                    {/* modal create review */}\r\n                    {/* Modal edit review */}\r\n                    <div className=\"modal fade\" id=\"reviewEdit\" tabIndex=\"-1\" aria-labelledby=\"addLabel\" aria-hidden=\"true\">\r\n                          <div className=\"modal-dialog\">\r\n                              <div className=\"modal-content\">\r\n                                  <div className=\"modal-header\">\r\n                                      <h5 className=\"modal-title\" id=\"addLabel\">Add Review</h5>\r\n                                      <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                          <span aria-hidden=\"true\" className=\"modal-clear\">&times;</span>\r\n                                      </button>\r\n                                  </div>\r\n                                  <div className=\"modal-body\">\r\n                                      <form>\r\n                                      <div class=\"form-group row\">\r\n                                          <div class=\"col-sm-12 text-center\">\r\n                                          <img class=\"rounded novel\" src={bookDataImage ? bookDataImage : 'https://res.cloudinary.com/todidewantoro/image/upload/v1604943658/bootcamp/covernya_ejy4v1.jpg'} alt=\"\"/>\r\n                                          </div>\r\n                                      </div>\r\n                                      <div className=\"form-group row\">\r\n                                          <div className=\"col-sm-9\">\r\n                                              <input type=\"hidden\" readOnly className=\"form-control-plain text\" value={this.state.id} />      \r\n                              \r\n                                              <input type=\"hidden\" className=\"form-control input\" name=\"bookDetailsCode\" readOnly\r\n                                              value={this.state.bookDetailsCode} />\r\n                                          </div>\r\n                                      </div>\r\n                                    <div class=\"form-group row\">\r\n                                          <label for=\"rating\" class=\"col-sm-2 col-form-label\">Rating</label>\r\n                                          <div class=\"col-sm-10\">\r\n                                          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n                                              <Rating\r\n                                              name=\"simple-controlled\"\r\n                                              name=\"rate\"\r\n                                              id=\"rate\"\r\n                                              onChange={this.changeRateHandler}\r\n                                              value={this.state.rate}\r\n                                              />\r\n                                          </Box>           \r\n                                          </div>\r\n                                      </div>\r\n                                      <div class=\"form-group row\">\r\n                                          <label for=\"editRev\" class=\"col-sm-2 col-form-label\">Review</label>\r\n                                          <div class=\"col-sm-10\">\r\n                                          <input className=\"form-control input\" name=\"review\" id=\"review\" placeholder=\"Review...\"\r\n                                              value={this.state.review} onChange={this.changeReviewHandler} />\r\n                                          </div>\r\n                                    </div>\r\n                                      </form>\r\n                                  </div>\r\n                                  <div className=\"modal-footer\">\r\n                                      <button className=\"btn btn-secondary modal-clear\" data-dismiss=\"modal\">Cancel</button>\r\n                                      <button className=\"btn btn-success\" data-dismiss=\"modal\" onClick={() => this.handlePutReview(AuthService.getUserCode())}>Edit</button>\r\n                                  </div>\r\n                              </div>\r\n                          </div>\r\n                    </div>\r\n                    {/* modal edit review */}\r\n\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div >\r\n        </section >\r\n      </div >\r\n\r\n    );\r\n  }\r\n}\r\nexport default withRouter(DetailPage)\r\n",["95","96"],"C:\\Users\\User\\Desktop\\React-Development\\src\\Services\\auth.service.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Services\\axios-instance.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\components\\Content.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\CatagoryResult\\CategoryResult.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\SearchResult\\SearchResult.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\SeeMoreBooks\\SeeMoreBooks.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\components\\HeaderUser.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Navigations\\MainNavigationsUser.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Wishlist\\Wishlist.js",["97","98","99","100","101"],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Cart\\Cart.js",["102","103","104","105","106"],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Login\\Login.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Register\\registerAdmin.js",["107"],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Profile\\Profile.js",["108","109","110","111"],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\ManageDonation\\index.js",["112"],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\FineManagement\\fineManagement.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\AuthorManagement\\AuthorManagement.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Form\\ReturnForm.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Payment\\InstructionsATM.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Payment\\NoBills.js",[],"C:\\Users\\User\\Desktop\\React-Development\\src\\Screens\\Payment\\TopUpBar.js",[],{"ruleId":"113","severity":1,"message":"114","line":7,"column":8,"nodeType":"115","messageId":"116","endLine":7,"endColumn":13},{"ruleId":"113","severity":1,"message":"117","line":13,"column":8,"nodeType":"115","messageId":"116","endLine":13,"endColumn":13},{"ruleId":"113","severity":1,"message":"118","line":309,"column":9,"nodeType":"115","messageId":"116","endLine":309,"endColumn":13},{"ruleId":"119","severity":1,"message":"120","line":508,"column":76,"nodeType":"121","messageId":"122","endLine":508,"endColumn":78},{"ruleId":"119","severity":1,"message":"120","line":510,"column":76,"nodeType":"121","messageId":"122","endLine":510,"endColumn":78},{"ruleId":"123","severity":1,"message":"124","line":560,"column":47,"nodeType":"125","endLine":560,"endColumn":58},{"ruleId":"123","severity":1,"message":"124","line":616,"column":47,"nodeType":"125","endLine":616,"endColumn":58},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"113","severity":1,"message":"117","line":9,"column":8,"nodeType":"115","messageId":"116","endLine":9,"endColumn":13},{"ruleId":"130","severity":1,"message":"131","line":32,"column":47,"nodeType":"132","messageId":"133","endLine":32,"endColumn":49},{"ruleId":"134","severity":1,"message":"135","line":127,"column":69,"nodeType":"136","endLine":128,"endColumn":114},{"ruleId":"134","severity":1,"message":"135","line":130,"column":69,"nodeType":"136","endLine":130,"endColumn":204},{"ruleId":"137","severity":1,"message":"138","line":137,"column":69,"nodeType":"136","endLine":137,"endColumn":133},{"ruleId":"130","severity":1,"message":"131","line":44,"column":47,"nodeType":"132","messageId":"133","endLine":44,"endColumn":49},{"ruleId":"134","severity":1,"message":"135","line":237,"column":69,"nodeType":"136","endLine":237,"endColumn":194},{"ruleId":"137","severity":1,"message":"138","line":244,"column":69,"nodeType":"136","endLine":244,"endColumn":133},{"ruleId":"137","severity":1,"message":"138","line":256,"column":41,"nodeType":"136","endLine":256,"endColumn":105},{"ruleId":"134","severity":1,"message":"135","line":278,"column":57,"nodeType":"136","endLine":278,"endColumn":202},{"ruleId":"113","severity":1,"message":"139","line":8,"column":8,"nodeType":"115","messageId":"116","endLine":8,"endColumn":19},{"ruleId":"113","severity":1,"message":"117","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":13},{"ruleId":"119","severity":1,"message":"120","line":92,"column":85,"nodeType":"121","messageId":"122","endLine":92,"endColumn":87},{"ruleId":"137","severity":1,"message":"138","line":300,"column":65,"nodeType":"136","endLine":300,"endColumn":139},{"ruleId":"119","severity":1,"message":"140","line":346,"column":166,"nodeType":"121","messageId":"122","endLine":346,"endColumn":168},{"ruleId":"113","severity":1,"message":"141","line":14,"column":13,"nodeType":"115","messageId":"116","endLine":14,"endColumn":16},"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'edit' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-native-reassign",["142"],"no-negated-in-lhs",["143"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'AuthService' is defined but never used.","Expected '!==' and instead saw '!='.","'get' is defined but never used.","no-global-assign","no-unsafe-negation"]
